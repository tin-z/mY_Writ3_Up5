


Gadgets
=======


0x0000000000430a8d: adc ah, byte ptr [rip + 0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000044085f: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004408c9: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000460932: adc al, 0; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x000000000048b031: adc al, 0; add byte ptr [rax], al; syscall; 
0x00000000004508eb: adc al, 0x11; lea rcx, qword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000428549: adc al, 0x16; sub eax, edx; ret; 
0x0000000000429a60: adc al, 0x16; sub eax, edx; vzeroupper; ret; 
0x0000000000499b3a: adc al, 0x24; mov edi, 1; call rax; 
0x000000000044f67e: adc al, 0x24; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x0000000000408305: adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x000000000041fb05: adc al, 0x30; ret; 
0x000000000042e03d: adc al, 0x3a; sub eax, edx; vzeroupper; ret; 
0x0000000000470de6: adc al, 0x45; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000044e2ac: adc al, 0x48; add esp, 0x28; ret; 
0x0000000000448560: adc al, 0x48; lea eax, dword ptr [rdi + 0x14]; ret; 
0x000000000041db6b: adc al, 0x48; mov eax, dword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000041b995: adc al, 0x4c; mov edx, ebp; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x0000000000478c96: adc al, 0x90; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000478c65: adc al, 0x90; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000441cf0: adc al, 0x91; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044041e: adc al, 0x91; sub eax, edx; ret; 
0x00000000004286b3: adc al, 0xa; sub eax, edx; ret; 
0x0000000000429bdd: adc al, 0xa; sub eax, edx; vzeroupper; ret; 
0x000000000046eb22: adc al, 0xe9; ret; 
0x00000000004804da: adc al, 0xe; lea rcx, qword ptr [rip + 0x2473d]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000047e56a: adc al, 0xe; lea rcx, qword ptr [rip + 0x266ad]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000441f51: adc al, 0xe; lea rcx, qword ptr [rip + 0x62cc6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000440411: adc al, 0xe; lea rcx, qword ptr [rip + 0x64806]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000042cf9a: adc al, 0xe; sub eax, edx; ret; 
0x000000000042f1aa: adc al, 0xe; sub eax, edx; vzeroupper; ret; 
0x0000000000408170: adc al, 0xeb; sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000499ebc: adc al, 0xf7; add rsp, 8; ret; 
0x000000000045fba3: adc al, 1; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000450e82: adc al, 5; add byte ptr [rax + 0x15], bh; syscall; 
0x00000000004678e9: adc al, 9; ret 0x8d74; 
0x0000000000440a07: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440a71: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000497830: adc al, byte ptr [rbx + 0xd7440e7]; mov rdx, -1; shl rdx, cl; or r8, rdx; mov qword ptr [rsi], r8; ret; 
0x0000000000454487: adc al, ch; ret; 
0x000000000048d3d8: adc al, ch; xchg eax, edx; xor eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000041feaf: adc bh, dh; jmp qword ptr [rsi + 0x66]; 
0x00000000004384b0: adc bl, dh; movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044bc6a: adc bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000448536: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000448556: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000447e96: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000447e86: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x00000000004485b7: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485d7: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f17: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef7: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x00000000004484f7: adc bl, dh; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e57: adc bl, dh; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004486b8: adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, qword ptr [rdi + 0x1f]; ret; 
0x0000000000447ff8: adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004384af: adc bl, r14b; movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000448535: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000448555: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000447e95: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000447e85: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x00000000004485b6: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485d6: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f16: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef6: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x00000000004484f6: adc bl, r14b; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e56: adc bl, r14b; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000041bd40: adc byte ptr [r11 + 0x44], r14b; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041bd1a: adc byte ptr [r11 + 0xa], r14b; movzx eax, byte ptr [rax]; ret; 
0x0000000000495105: adc byte ptr [r13 + 0x23840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000042e5bf: adc byte ptr [r14 + 0xf], r12b; xlatb; rol dword ptr [rbp + 0x315775c0], -0x40; ret; 
0x000000000044b006: adc byte ptr [r15], r9b; adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000048ebf3: adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x00000000004191f2: adc byte ptr [r8 + 1], r9b; ret; 
0x0000000000409178: adc byte ptr [r8 - 0x75], cl; push rbx; sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x000000000041f093: adc byte ptr [r8 - 0x77], r9b; ret 0xf8b; 
0x000000000041d4d0: adc byte ptr [r8 - 0x77], r9b; sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000494137: adc byte ptr [r8 - 0x7d], cl; ret; 
0x000000000044f59a: adc byte ptr [r9 + 9], cl; ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret 0x1f0f; 
0x000000000046eb42: adc byte ptr [rax + 0x29], cl; ret 0xc148; 
0x000000000045f0e9: adc byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x000000000041fe2b: adc byte ptr [rax + 0x39], cl; ret 0xef75; 
0x00000000004230f8: adc byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x00000000004230f7: adc byte ptr [rax + 0x39], r9b; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x0000000000493964: adc byte ptr [rax + 0x3b], cl; sub byte ptr [rbx - 0x1b], sil; mov eax, 1; ret; 
0x000000000048ebf4: adc byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x000000000044e56f: adc byte ptr [rax + 1], bh; syscall; 
0x00000000004188d2: adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x00000000004191f3: adc byte ptr [rax + 1], cl; ret; 
0x00000000004976ed: adc byte ptr [rax + 2], bh; pop rbx; ret; 
0x0000000000402152: adc byte ptr [rax - 0x39], cl; ret 0; 
0x00000000004900ca: adc byte ptr [rax - 0x73], cl; adc eax, 0x11e; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x000000000042619a: adc byte ptr [rax - 0x73], cl; adc eax, 0x248be; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426bda: adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffd0e; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x0000000000450604: adc byte ptr [rax - 0x73], cl; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000450603: adc byte ptr [rax - 0x73], r9b; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x00000000004025b8: adc byte ptr [rax - 0x75], cl; and al, 0x18; call rax; 
0x000000000041862e: adc byte ptr [rax - 0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x0000000000409179: adc byte ptr [rax - 0x75], cl; push rbx; sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x000000000044fc24: adc byte ptr [rax - 0x75], cl; push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x0000000000418648: adc byte ptr [rax - 0x75], cl; xchg eax, ebx; nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x0000000000422573: adc byte ptr [rax - 0x77], cl; and al, 8; mov qword ptr [rsp], rax; call rsi; 
0x0000000000478c9b: adc byte ptr [rax - 0x77], cl; jo 0x78ce0; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000477ffc: adc byte ptr [rax - 0x77], cl; mov qword ptr [rax], rdx; ret; 
0x000000000044f541: adc byte ptr [rax - 0x77], cl; or byte ptr [r9 - 0x75], r9b; or byte ptr [r11 + 0x94901e0], al; ret 0x894d; 
0x0000000000422a93: adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000041ec24: adc byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000041f094: adc byte ptr [rax - 0x77], cl; ret 0xf8b; 
0x000000000041d4d1: adc byte ptr [rax - 0x77], cl; sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x000000000044f449: adc byte ptr [rax - 0x7b], cl; push qword ptr [rbp + 0x27]; mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000422408: adc byte ptr [rax - 0x7d], cl; clc; dec dword ptr [rax - 0x77]; ret 0x840f; 
0x0000000000421033: adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004514f5: adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x0000000000402373: adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000041c0b5: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000048cbaf: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x00000000004422cc: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440c11: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041fa6c: adc byte ptr [rax], al; add byte ptr [rax], al; cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x000000000044ee0c: adc byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x000000000044c1e2: adc byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000483594: adc byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000041c062: adc byte ptr [rax], al; add byte ptr [rcx - 0x100c1e], al; dec dword ptr [rcx]; ret 0x1389; 
0x0000000000474302: adc byte ptr [rax], al; add byte ptr [rdi], cl; xchg esp, esi; and eax, 0x83480000; ret; 
0x00000000004020d9: adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x0000000000495106: adc byte ptr [rbp + 0x23840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000045cb7a: adc byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x00000000004719e9: adc byte ptr [rbp + 0x63], cl; ret; 
0x000000000044fc43: adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x000000000041bd41: adc byte ptr [rbx + 0x44], dh; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000416e97: adc byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000418b08: adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000048c36f: adc byte ptr [rbx + 0x5d], bl; ret; 
0x000000000041bd1b: adc byte ptr [rbx + 0xa], dh; movzx eax, byte ptr [rax]; ret; 
0x000000000041cdbf: adc byte ptr [rbx + 0xafe692d], al; add byte ptr [rcx], al; ret; 
0x000000000041ec7a: adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000048ca87: adc byte ptr [rbx - 0x55], dh; xor eax, eax; ret; 
0x000000000046079e: adc byte ptr [rbx - 0x6af06ec4], cl; ret 0x8941; 
0x00000000004887fe: adc byte ptr [rbx], al; add byte ptr [rax], al; lea rax, qword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887dd: adc byte ptr [rbx], al; add byte ptr [rax], al; ret; 
0x000000000044f59b: adc byte ptr [rcx + 9], cl; ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret 0x1f0f; 
0x000000000044cd6e: adc byte ptr [rcx + rcx*4 - 0x19], cl; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000045cba2: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x0000000000477208: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000004583fe: adc byte ptr [rcx - 0x77], al; ret 0x840f; 
0x000000000044e500: adc byte ptr [rcx - 0x77], al; ror byte ptr [rbx + 0x3108247c], 0xc0; syscall; 
0x000000000044f48b: adc byte ptr [rcx - 0x77], cl; ret; 
0x0000000000423163: adc byte ptr [rcx - 0x7d], al; ret; 
0x000000000042d02d: adc byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x000000000047e6a7: adc byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x000000000043b76b: adc byte ptr [rcx - 1], bl; vmovups zmmword ptr [rdi], zmm0; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000048efe1: adc byte ptr [rcx], al; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000041aaec: adc byte ptr [rcx], al; add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004794ad: adc byte ptr [rcx], cl; ret 0x3949; 
0x000000000048c66b: adc byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000498a92: adc byte ptr [rdi + rcx + 0x44], cl; ret; 
0x000000000046c1a7: adc byte ptr [rdi + rcx - 0x42], al; rol dword ptr [rcx + rdi - 0x39], 0x77; fild word ptr [rcx + rcx*4 - 0x38]; ret; 
0x0000000000471ac4: adc byte ptr [rdi], 0; add dh, dh; ret 0xf40; 
0x000000000044b121: adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000044b007: adc byte ptr [rdi], cl; adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000448b23: adc byte ptr [rdi], cl; test esi, edx; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x000000000042d411: adc byte ptr [rdi], cl; xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042d501: adc byte ptr [rdi], cl; xchg ah, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042d321: adc byte ptr [rdi], cl; xchg ah, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000481b2b: adc byte ptr [rdi], cl; xchg bh, cl; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000048062f: adc byte ptr [rdi], cl; xchg bl, cl; adc eax, 0x83480000; ret 0xe910; 
0x000000000048182f: adc byte ptr [rdi], cl; xchg bl, cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000480f2f: adc byte ptr [rdi], cl; xchg bl, cl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000048122f: adc byte ptr [rdi], cl; xchg bl, cl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000480927: adc byte ptr [rdi], cl; xchg bl, dl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042dd69: adc byte ptr [rdi], cl; xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x000000000042d8c1: adc byte ptr [rdi], cl; xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x000000000042d051: adc byte ptr [rdi], cl; xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x000000000042daa1: adc byte ptr [rdi], cl; xchg byte ptr [rbx + rax], cl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042d231: adc byte ptr [rdi], cl; xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x000000000042dc81: adc byte ptr [rdi], cl; xchg byte ptr [rcx + rax], ch; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042db91: adc byte ptr [rdi], cl; xchg byte ptr [rdx + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042d4d3: adc byte ptr [rdi], cl; xchg byte ptr [rdx], bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d5c3: adc byte ptr [rdi], cl; xchg byte ptr [rdx], ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d3e3: adc byte ptr [rdi], cl; xchg byte ptr [rdx], cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000480bd4: adc byte ptr [rdi], cl; xchg byte ptr [rsi], ah; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004817d4: adc byte ptr [rdi], cl; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481ad4: adc byte ptr [rdi], cl; xchg byte ptr [rsi], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004811d4: adc byte ptr [rdi], cl; xchg byte ptr [rsi], ah; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000480ed4: adc byte ptr [rdi], cl; xchg byte ptr [rsi], ah; or eax, 0x83480000; ret 0x4910; 
0x00000000004808cc: adc byte ptr [rdi], cl; xchg byte ptr [rsi], ch; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d141: adc byte ptr [rdi], cl; xchg byte ptr [rsp + rcx - 0x7cb80000], ch; ret 0xeb10; 
0x000000000047f94d: adc byte ptr [rdi], cl; xchg ch, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000047f76d: adc byte ptr [rdi], cl; xchg ch, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000480145: adc byte ptr [rdi], cl; xchg ch, dh; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000047f065: adc byte ptr [rdi], cl; xchg ch, dl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000047ff65: adc byte ptr [rdi], cl; xchg ch, dl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d2f3: adc byte ptr [rdi], cl; xchg dl, bh; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d113: adc byte ptr [rdi], cl; xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d203: adc byte ptr [rdi], cl; xchg dl, ch; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d023: adc byte ptr [rdi], cl; xchg dl, cl; or eax, 0x83480000; ret 0x4910; 
0x000000000044e872: adc byte ptr [rdi], cl; xchg eax, esp; ret 0x2044; 
0x000000000044ca48: adc byte ptr [rdx + 1], ch; push 0; lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000044c9da: adc byte ptr [rdx + 1], ch; xor edx, edx; push 1; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000043006b: adc byte ptr [rdx], cl; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042f515: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042ff1a: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret; 
0x000000000042f510: adc byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000427295: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x000000000043c1cb: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x00000000004272db: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000042e5c0: adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], -0x40; ret; 
0x000000000044ae5f: adc byte ptr [rsi + rdx - 0x10], cl; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044affd: adc byte ptr [rsi + rdx - 0x20], bl; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000043b80e: adc byte ptr [rsi - 0x75], ah; mov cx, word ptr ss:[rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000447f37: adc byte ptr [rsi - 0x75], ah; sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x000000000044ae5c: adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000480bd7: adc byte ptr es:[rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000408b97: adc ch, al; cmp eax, dword ptr [rbp - 0x76b70001]; ret 0x8948; 
0x000000000045fcf7: adc ch, al; fist dword ptr [rbx]; cli; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000430a86: adc cl, al; call 0x75cb429d; adc ah, byte ptr [rip + 0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000041dd9d: adc cl, byte ptr [rax - 0x75]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000000444915: adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x000000000041a0ed: adc cl, byte ptr [rbx + 0x42394c42]; cmovne rax, rcx; ret; 
0x0000000000473f5a: adc cl, byte ptr [rbx]; sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000491072: adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x0000000000455149: adc cl, byte ptr [rdi]; mov bh, 0xd; ret; 
0x000000000042258c: adc cl, ch; ret 0xfffe; 
0x0000000000419148: adc cl, ch; sar esi, -1; jmp qword ptr [rsi - 0x70]; 
0x0000000000491c64: adc dh, bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000425eca: adc dh, byte ptr [rax - 0x6f990001]; mov eax, 0x16; ret; 
0x00000000004902e9: adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000040840c: adc dl, al; add byte ptr [rax + 0x39], r9b; ret; 
0x0000000000455a0a: adc dl, ch; cli; jmp qword ptr [rsi - 0x70]; 
0x0000000000478f79: adc dword ptr [rax + 0x39], ecx; ret; 
0x000000000041bc78: adc dword ptr [rax + 0x48000000], -0x77; call 0x5c4319df; ret; 
0x000000000048c527: adc dword ptr [rax + rax], eax; add byte ptr [rbp + 0x13], dh; mov r8, qword ptr [rip + 0x40ddc]; mov rax, r8; ret; 
0x0000000000408301: adc dword ptr [rax + rcx*2 + 0x33], esp; adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x000000000040831f: adc dword ptr [rax + rcx*2 + 0x33], esp; add al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x000000000045e7fd: adc dword ptr [rax - 0x39], ecx; ret 0xffe0; 
0x000000000041fa0d: adc dword ptr [rax - 0x3f], ecx; call 0x508f4219; add dword ptr [rax - 0x77], ecx; adc eax, 0xaad33; ret; 
0x0000000000418e73: adc dword ptr [rax - 0x3f], ecx; cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x00000000004508ec: adc dword ptr [rax - 0x73], ecx; or eax, 0xffffff9c; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000045e8cd: adc dword ptr [rax - 0x75], ecx; pop rax; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x00000000004755ef: adc dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x00000000004422cb: adc dword ptr [rax], 0x83480000; ret 0x4910; 
0x000000000041aaeb: adc dword ptr [rax], 1; add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004728f8: adc dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; test dword ptr [rax], edi; idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x000000000041201d: adc dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000440ba7: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004421cf: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000490378: adc dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000041263f: adc dword ptr [rax], eax; add byte ptr [rcx - 0x75], cl; mov ds, eax; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x000000000044c64e: adc dword ptr [rbx + 0x147402f8], eax; xor eax, eax; ret; 
0x000000000044b12c: adc dword ptr [rbx], eax; ret; 
0x000000000044b0a5: adc dword ptr [rbx], esp; ret; 
0x000000000042f15a: adc dword ptr [rcx + 0x31000002], -0x40; vzeroupper; ret; 
0x000000000043bacf: adc dword ptr [rcx + 3], ebx; vmovups zmmword ptr [r9 + 0x100], zmm12; vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bad6: adc dword ptr [rcx + 4], esp; vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043badd: adc dword ptr [rcx + 5], ebp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bae4: adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043baeb: adc dword ptr [rcx + 7], edi; ret; 
0x000000000044b097: adc dword ptr [rcx - 0x10], esi; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b09b: adc dword ptr [rcx - 0x20], edi; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b0a0: adc dword ptr [rcx - 0x30], eax; movups xmmword ptr [r11], xmm4; ret; 
0x000000000043b786: adc dword ptr [rcx - 1], ebx; ret; 
0x000000000043b74a: adc dword ptr [rcx - 1], edi; ret; 
0x000000000043b77f: adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043b97d: adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b743: adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b976: adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b73c: adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b96f: adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b735: adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000048cb0b: adc dword ptr [rcx - 7], edi; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x000000000044b094: adc dword ptr [rcx], ebp; movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b11f: adc dword ptr [rdi + 0x10], ebp; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000044b005: adc dword ptr [rdi + 0x10], ecx; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044b123: adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000044b127: adc dword ptr [rdi + 0x30], edi; movups xmmword ptr [r11], xmm8; ret; 
0x000000000043b778: adc dword ptr [rdi + 1], ecx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044ac35: adc dword ptr [rdi + 1], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043b72e: adc dword ptr [rdi + 3], ebx; vmovups zmmword ptr [r9 - 0x100], zmm4; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000044ac06: adc dword ptr [rdi + 3], edx; vmovups zmmword ptr [rsi - 0x100], zmm2; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ae67: adc dword ptr [rdi + rdx - 0x10], ecx; ret; 
0x000000000044b009: adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044afdc: adc dword ptr [rdi + rdx - 0x10], esp; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044afe1: adc dword ptr [rdi + rdx - 0x20], ebp; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044b00e: adc dword ptr [rdi + rdx - 0x20], ebx; ret; 
0x000000000044afe6: adc dword ptr [rdi + rdx - 0x30], esi; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044afeb: adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x000000000043bc38: adc dword ptr [rdi - 5], esp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc3f: adc dword ptr [rdi - 6], ebp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc46: adc dword ptr [rdi - 7], esi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc4d: adc dword ptr [rdi - 8], edi; ret; 
0x000000000044b002: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044ae64: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043b772: adc dword ptr [rdi], eax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044a120: adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000044ac2f: adc dword ptr [rdi], edx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac50: adc dword ptr [rdi], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044b11c: adc dword ptr [rdi], esp; movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000422d8b: adc dword ptr [rdx + 0xa], edi; add byte ptr [rax + 0x39], cl; ret; 
0x000000000044ad75: adc dword ptr [rsi + 1], edx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044ad7c: adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044ad83: adc dword ptr [rsi + 3], edx; ret; 
0x000000000044ae04: adc dword ptr [rsi + 3], edx; vmovups zmmword ptr [rsi + 0x100], zmm2; vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae0b: adc dword ptr [rsi + 4], edx; vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae12: adc dword ptr [rsi + 5], edx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae19: adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae20: adc dword ptr [rsi + 7], edx; ret; 
0x000000000044ac22: adc dword ptr [rsi - 1], edx; ret; 
0x000000000044ac1b: adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac14: adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac0d: adc dword ptr [rsi - 4], edx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000049c81b: adc dword ptr [rsi - 5], ebp; dec dword ptr [rax - 0x7d]; ret; 
0x000000000044ad6f: adc dword ptr [rsi], edx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000440ba6: adc dword ptr es:[rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041201c: adc dword ptr fs:[rax], eax; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000426d0a: adc eax, 0x11e51; cmovne rax, rdx; ret; 
0x00000000004900cd: adc eax, 0x11e; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000426f5e: adc eax, 0x170fd; cmovne rax, rdx; ret; 
0x0000000000427094: adc eax, 0x1c9a7; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263b4: adc eax, 0x1dc37; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263f4: adc eax, 0x1dd97; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x000000000042617b: adc eax, 0x1e8a0; cmovne rax, rdx; ret; 
0x0000000000426f0b: adc eax, 0x1f2c0; cmovne rax, rdx; ret; 
0x0000000000498e4d: adc eax, 0x21a82; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x0000000000426c6c: adc eax, 0x2212f; cmovne rax, rdx; ret; 
0x00000000004260bb: adc eax, 0x229c0; cmovne rax, rdx; ret; 
0x0000000000481c18: adc eax, 0x23003; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000481bf3: adc eax, 0x23028; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000427019: adc eax, 0x23e22; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426ea9: adc eax, 0x23f82; lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000491b1a: adc eax, 0x24048b49; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x0000000000426d49: adc eax, 0x240f2; lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fab: adc eax, 0x24260; lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e3b: adc eax, 0x243c0; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426cdb: adc eax, 0x24530; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426ffd: adc eax, 0x2464e; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e8d: adc eax, 0x247ae; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x000000000042619d: adc eax, 0x248be; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426d2d: adc eax, 0x2491e; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000480233: adc eax, 0x249e8; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000426dc4: adc eax, 0x24e57; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426da5: adc eax, 0x24f86; lea rax, qword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x0000000000426ded: adc eax, 0x250be; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x000000000042611b: adc eax, 0x2690; cmovne rax, rdx; ret; 
0x000000000047e288: adc eax, 0x26993; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047e263: adc eax, 0x269b8; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bd18: adc eax, 0x28f03; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bcf3: adc eax, 0x28f28; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000478efe: adc eax, 0x2e4d; cmovne rax, rdx; ret; 
0x000000000048fdab: adc eax, 0x3bcf0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x00000000004903f0: adc eax, 0x3cce3; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000488cd3: adc eax, 0x42468; xor eax, eax; add rsp, 8; ret; 
0x000000000044dd39: adc eax, 0x441f0f66; add byte ptr [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x0000000000438965: adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438960: adc eax, 0x477f0ff3; adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000426f51: adc eax, 0x4802e680; lea eax, dword ptr [rip + 0x14eb4]; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000426458: adc eax, 0x4802e680; lea eax, dword ptr [rip + 0x39fd]; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x0000000000478ef1: adc eax, 0x4802e680; lea eax, dword ptr [rip + 0x7f4]; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000426c5f: adc eax, 0x4802e680; lea eax, dword ptr [rip + 0x8026]; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x0000000000402344: adc eax, 0x509f7; call 0x50ed0; lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000000426465: adc eax, 0x5256; cmovne rax, rdx; ret; 
0x00000000004821b4: adc eax, 0x597; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x00000000004433b8: adc eax, 0x61863; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044339e: adc eax, 0x6187d; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d38: adc eax, 0x62ee3; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d1e: adc eax, 0x62efd; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000440188: adc eax, 0x64a93; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044016e: adc eax, 0x64aad; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e028: adc eax, 0x66bf3; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e00e: adc eax, 0x66c0d; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000427054: adc eax, 0x7ae7; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c14: adc eax, 0x7c57; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000440731: adc eax, 0x83480000; ret 0xe910; 
0x0000000000469bad: adc eax, 0x83489066; ret 0x4101; 
0x000000000049bdb2: adc eax, 0x89480003; xor eax, 0x31534; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bcfe: adc eax, 0x89480003; xor eax, 0x315e8; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000041524a: adc eax, 0x8b490000; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000044ce7b: adc eax, 0x8f0; cmovne rax, rdx; ret; 
0x0000000000478e24: adc eax, 0x9107; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x00000000004243b8: adc eax, 0xa88eb; mov dword ptr [rip + 0xa88d9], 0; ret; 
0x0000000000420dc3: adc eax, 0xa99d8; lea rax, qword ptr [rip + 0xa99d1]; add rsp, 0x10; pop rbp; ret; 
0x000000000041fa18: adc eax, 0xaad33; ret; 
0x000000000041efca: adc eax, 0xadc61; mov qword ptr [rip + 0xadc62], rbx; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x0000000000482174: adc eax, 0xb47; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x00000000004025ab: adc eax, 0xca738; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000482bfa: adc eax, 0xe180d188; pcmpeqb mm3, qword ptr [rsi]; ret; 
0x0000000000426fda: adc eax, 0xf091; cmovne rax, rdx; ret; 
0x0000000000426e6a: adc eax, 0xf1e1; cmovne rax, rdx; ret; 
0x000000000044bce8: adc eax, 0xf880272; ret; 
0x0000000000426bdd: adc eax, 0xfffffd0e; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x0000000000475049: adc eax, dword ptr [rax + rax]; mov dword ptr [rbp - 0x510], 1; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000040918e: adc eax, dword ptr [rax - 0x78]; sub byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000044202e: adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000047ee89: adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004659f2: adc eax, dword ptr [rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x0000000000469b56: adc eax, dword ptr [rax]; add byte ptr [rbp + 0x31], al; dec dword ptr [rbp + 0x29]; ret; 
0x0000000000411dac: adc eax, dword ptr [rax]; add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000475692: adc eax, dword ptr [rax]; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000041fdd8: adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x0000000000489936: adc eax, dword ptr [rbx + 0x34c0fe2]; push rcx; or byte ptr [rax - 0x7af0f506], al; cmp dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000452061: adc eax, dword ptr [rbx]; add byte ptr [rcx], bh; ret; 
0x00000000004808cf: adc eax, dword ptr cs:[rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000046795d: adc eax, eax; ret; 
0x0000000000468e46: adc eax, edx; pop rbp; pop rbx; ret; 
0x000000000049667b: adc ecx, dword ptr [rax + 0x39]; ret 0x575; 
0x0000000000483eae: adc ecx, dword ptr [rax + 0x39]; ret 0x870f; 
0x00000000004087ff: adc ecx, dword ptr [rax + 0xf]; mov esi, 0x8348014b; ret; 
0x000000000046ef3e: adc ecx, dword ptr [rax - 0x77]; ret 0xc148; 
0x0000000000408429: adc ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000045bf14: adc ecx, dword ptr [rcx + 0x29d231fb]; ret; 
0x000000000049af17: adc ecx, dword ptr [rcx - 0x77]; ret; 
0x000000000049a761: adc edi, dword ptr [rax + 8]; add rsp, 8; ret; 
0x0000000000430c36: adc edi, dword ptr [rsi]; jmp rdx; 
0x000000000045fcfa: adc edi, edx; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000046811a: adc edx, eax; mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000000467955: adc edx, ebx; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000418010: adc esi, esi; ret 0xf20; 
0x0000000000480ab2: adc qword ptr [r8], rax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043bace: adc qword ptr [rcx + 3], rbx; vmovups zmmword ptr [r9 + 0x100], zmm12; vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bad5: adc qword ptr [rcx + 4], rsp; vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043badc: adc qword ptr [rcx + 5], rbp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bae3: adc qword ptr [rcx + 6], rsi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043baea: adc qword ptr [rcx + 7], rdi; ret; 
0x000000000043b785: adc qword ptr [rcx - 1], rbx; ret; 
0x000000000043b749: adc qword ptr [rcx - 1], rdi; ret; 
0x000000000043b77e: adc qword ptr [rcx - 2], rdx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043b97c: adc qword ptr [rcx - 2], rsi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b742: adc qword ptr [rcx - 2], rsi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b975: adc qword ptr [rcx - 3], rbp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b73b: adc qword ptr [rcx - 3], rbp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b96e: adc qword ptr [rcx - 4], rsp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b734: adc qword ptr [rcx - 4], rsp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b777: adc qword ptr [rdi + 1], rcx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044ac34: adc qword ptr [rdi + 1], rdx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043b72d: adc qword ptr [rdi + 3], rbx; vmovups zmmword ptr [r9 - 0x100], zmm4; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000044ac05: adc qword ptr [rdi + 3], rdx; vmovups zmmword ptr [rsi - 0x100], zmm2; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043bc37: adc qword ptr [rdi - 5], rsp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc3e: adc qword ptr [rdi - 6], rbp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc45: adc qword ptr [rdi - 7], rsi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc4c: adc qword ptr [rdi - 8], rdi; ret; 
0x000000000043b771: adc qword ptr [rdi], rax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044ac2e: adc qword ptr [rdi], rdx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac4f: adc qword ptr [rdi], rdx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ad74: adc qword ptr [rsi + 1], rdx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044ad7b: adc qword ptr [rsi + 2], rdx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044ad82: adc qword ptr [rsi + 3], rdx; ret; 
0x000000000044ae03: adc qword ptr [rsi + 3], rdx; vmovups zmmword ptr [rsi + 0x100], zmm2; vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae0a: adc qword ptr [rsi + 4], rdx; vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae11: adc qword ptr [rsi + 5], rdx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae18: adc qword ptr [rsi + 6], rdx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae1f: adc qword ptr [rsi + 7], rdx; ret; 
0x000000000044ac21: adc qword ptr [rsi - 1], rdx; ret; 
0x000000000044ac1a: adc qword ptr [rsi - 2], rdx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac13: adc qword ptr [rsi - 3], rdx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac0c: adc qword ptr [rsi - 4], rdx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ad6e: adc qword ptr [rsi], rdx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000467954: adc r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000044bc69: adc r11b, r14b; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000048d3d7: adc r8b, bpl; xchg eax, edx; xor eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000047eff0: adc r8b, byte ptr [r8]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000469b55: adc r8d, dword ptr [r8]; add byte ptr [rbp + 0x31], al; dec dword ptr [rbp + 0x29]; ret; 
0x0000000000468e45: adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000000468119: adc rdx, r8; mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000044c13a: add ah, bh; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000044c11f: add ah, bh; add eax, dword ptr [rax]; ret; 
0x000000000044c219: add ah, bh; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000044c16a: add ah, bh; inc dword ptr [rbx]; ret; 
0x00000000004478d3: add ah, byte ptr [rsi - 0x75]; add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446113: add ah, byte ptr [rsi - 0x75]; add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000404b35: add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x000000000042d987: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442eef: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d9b5: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000049a781: add al, 0; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000482c83: add al, 0; add byte ptr [rax], al; ret; 
0x000000000044e2e4: add al, 0; add byte ptr [rax], al; syscall; 
0x000000000048c528: add al, 0; add byte ptr [rbp + 0x13], dh; mov r8, qword ptr [rip + 0x40ddc]; mov rax, r8; ret; 
0x0000000000495db4: add al, 0; add byte ptr [rbp + 0x31], al; fisttp dword ptr [rax + 9]; fadd dword ptr [rcx + 0xf]; xchg eax, ebp; ret; 
0x0000000000418ceb: add al, 0; add byte ptr [rcx - 0x75], cl; xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x00000000004893ac: add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000041f9ea: add al, 0; add byte ptr [rsi + 1], dh; ret; 
0x000000000046c171: add al, 0; add cl, ch; mov ebp, 0xe8fffffd; ret 0xfe46; 
0x000000000041f8c9: add al, 0; cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x00000000004821ad: add al, 0; cmp rax, rdx; lea rdx, qword ptr [rip + 0x597]; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x000000000048216d: add al, 0; cmp rax, rdx; lea rdx, qword ptr [rip + 0xb47]; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x000000000040234c: add al, 0; lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000000047504a: add al, 0; mov dword ptr [rbp - 0x510], 1; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000048c5a3: add al, 0; mov qword ptr [rsi], rax; ret; 
0x000000000048c532: add al, 0; mov rax, r8; ret; 
0x000000000048c43d: add al, 0; ret; 
0x0000000000488cd6: add al, 0; xor eax, eax; add rsp, 8; ret; 
0x000000000045060a: add al, 0x11; ret; 
0x000000000044c1b4: add al, 0x12; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000000481bef: add al, 0x17; lea rdx, qword ptr [rip + 0x23028]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000048022f: add al, 0x17; lea rdx, qword ptr [rip + 0x249e8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047e25f: add al, 0x17; lea rdx, qword ptr [rip + 0x269b8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bcef: add al, 0x17; lea rdx, qword ptr [rip + 0x28f28]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044339a: add al, 0x17; lea rdx, qword ptr [rip + 0x6187d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d1a: add al, 0x17; lea rdx, qword ptr [rip + 0x62efd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044016a: add al, 0x17; lea rdx, qword ptr [rip + 0x64aad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e00a: add al, 0x17; lea rdx, qword ptr [rip + 0x66c0d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000428545: add al, 0x17; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000429a5c: add al, 0x17; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000004284da: add al, 0x17; sub eax, ecx; ret; 
0x0000000000448a0e: add al, 0x17; vzeroupper; ret; 
0x000000000048eff3: add al, 0x24; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000049a814: add al, 0x24; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000042257b: add al, 0x24; call rsi; 
0x0000000000491b1d: add al, 0x24; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000045e83e: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000408323: add al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x0000000000481e2e: add al, 0x31; ret; 
0x0000000000481d2a: add al, 0x37; ret; 
0x000000000042e039: add al, 0x38; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x0000000000421629: add al, 0x39; ret; 
0x000000000041e21f: add al, 0x3a; ret; 
0x00000000004483cb: add al, 0x48; lea eax, dword ptr [rdi + 5]; ret; 
0x00000000004478c9: add al, 0x48; lea eax, dword ptr [rdx + 4]; ret; 
0x00000000004478db: add al, 0x48; lea eax, dword ptr [rdx + 5]; ret; 
0x000000000041fa11: add al, 0x48; lea edx, dword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x000000000043867a: add al, 0x48; mov dword ptr [rdi], ecx; ret; 
0x000000000048ca38: add al, 0x48; mov eax, dword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000446109: add al, 0x48; mov eax, edi; ret; 
0x0000000000438673: add al, 0x48; mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004508e8: add al, 0x48; mov edx, dword ptr [rcx + rdx]; lea rcx, qword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000443dd8: add al, 0x48; xor eax, eax; ret; 
0x000000000048223c: add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x000000000044ca50: add al, 0x4c; lea ecx, dword ptr [rsp + 0x20]; call rbx; 
0x00000000004478d7: add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446117: add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x000000000045bf12: add al, 0x72; adc ecx, dword ptr [rcx + 0x29d231fb]; ret; 
0x000000000043b7fb: add al, 0x72; or al, 0x8b; mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000044c017: add al, 0x73; xor eax, 0x7701fa80; cmp dh, byte ptr [rdx + 2]; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000456a1f: add al, 0x74; and dword ptr [rcx - 0x77], ecx; add byte ptr [r15 + rcx - 0x4a], r8b; dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x0000000000498655: add al, 0x81; add rcx, rax; jmp rcx; 
0x000000000044041b: add al, 0x81; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000441cf3: add al, 0x81; sub eax, edx; ret; 
0x000000000043e017: add al, 0x82; sub eax, ecx; ret; 
0x0000000000498554: add al, 0x83; add rax, r11; jmp rax; 
0x000000000046fe92: add al, 0x83; ret 0x4c02; 
0x000000000048241a: add al, 0x85; sal byte ptr [rbp - 0xf], cl; ret; 
0x00000000004995b1: add al, 0x87; add rax, r15; jmp rax; 
0x00000000004478c6: add al, 0x88; add al, 0x48; lea eax, dword ptr [rdx + 4]; ret; 
0x0000000000446106: add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x0000000000412431: add al, 0x89; ret 0xf41; 
0x0000000000488804: add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887d2: add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000041d8b3: add al, 0xa8; add dword ptr [rax + rbp - 0x77], esi; ret 0xc883; 
0x000000000047803b: add al, 0xa8; or byte ptr [rax + rbp - 0x77], dh; ret 0xc883; 
0x000000000041467a: add al, 0xc1; mov ecx, 1; jmp rax; 
0x0000000000413d33: add al, 0xc1; xor ecx, ecx; jmp rax; 
0x0000000000474f7f: add al, 0xc6; mov esi, 1; jmp rax; 
0x000000000047405a: add al, 0xc6; xor esi, esi; jmp rax; 
0x0000000000414723: add al, 0xc7; jmp rax; 
0x000000000046bdde: add al, 0xd1; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004389e3: add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x0000000000498322: add al, 0xf6; ret 0x7402; 
0x000000000048fc9c: add al, 0xf; mov dh, 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x000000000042cf96: add al, 0xf; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000042f1a6: add al, 0xf; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004831be: add al, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041466f: add al, 1; lea rcx, qword ptr [rip + 0xb2cc8]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d28: add al, 1; lea rcx, qword ptr [rip + 0xb360f]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000041fe3f: add al, 2; mov dword ptr [rdi + 8], 0; mov qword ptr [rdi + 0x60], rcx; ret; 
0x000000000048ca3b: add al, 2; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000430777: add al, 3; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000474f74: add al, 6; lea rsi, qword ptr [rip + 0x52e63]; mov rax, qword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x000000000047404f: add al, 6; lea rsi, qword ptr [rip + 0x53d88]; mov rax, qword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x0000000000443421: add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044388e: add al, 7; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000475058: add al, 7; lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474fd2: add al, 7; lea rdi, qword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474476: add al, 7; lea rdi, qword ptr [rip + 0x53961]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414718: add al, 7; lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414af3: add al, 7; lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a5a: add al, 7; lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000044364c: add al, 7; ret; 
0x00000000004286af: add al, 8; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000429bd9: add al, 8; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004819b2: add al, byte ptr [r8]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004244c0: add al, byte ptr [r8]; add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000426d36: add al, byte ptr [r8]; cmove rax, rdx; ret; 
0x0000000000426e3d: add al, byte ptr [r8]; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426d2f: add al, byte ptr [r8]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000480235: add al, byte ptr [r8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000426d35: add al, byte ptr [r8d]; cmove rax, rdx; ret; 
0x0000000000444911: add al, byte ptr [rax + rax*8 - 0xb7ed8c]; ret 0x2288; 
0x000000000045833a: add al, byte ptr [rax]; add bh, dh; ret 0; 
0x0000000000484a0f: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x000000000042e3b2: add al, byte ptr [rax]; add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x000000000042df7a: add al, byte ptr [rax]; add byte ptr [rax + 5], cl; add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000046902a: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000402365: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000045a982: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x0000000000493284: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; xor eax, 0x3a5f2; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000004021d6: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000049a07a: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; ret; 
0x000000000040bf1d: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x7d]; ret; 
0x000000000044b6f8: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000042db67: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441ab1: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042db95: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000045e7c6: add al, byte ptr [rax]; add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x000000000048f69c: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x000000000048f805: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000049cf55: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000049a791: add al, byte ptr [rax]; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000407a4a: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000041a504: add al, byte ptr [rax]; add byte ptr [rax], al; mov eax, r9d; syscall; 
0x000000000041f8fa: add al, byte ptr [rax]; add byte ptr [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000004976ef: add al, byte ptr [rax]; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000482c63: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004830e2: add al, byte ptr [rax]; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004247ee: add al, byte ptr [rax]; add byte ptr [rbp + 0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000000458326: add al, byte ptr [rax]; add byte ptr [rbp - 0x177f02e], al; add dword ptr [rax], eax; add bh, dh; ret 0xf800; 
0x00000000004244c1: add al, byte ptr [rax]; add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000040888b: add al, byte ptr [rax]; add byte ptr [rbx + rcx*4 + 0x15], cl; ret; 
0x000000000048bcae: add al, byte ptr [rax]; add byte ptr [rbx - 0x28f7b], cl; jmp qword ptr [rsi + 0xf]; 
0x000000000044a124: add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000490a24: add al, byte ptr [rax]; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x0000000000426be7: add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x00000000004260be: add al, byte ptr [rax]; cmovne rax, rdx; ret; 
0x00000000004489d8: add al, byte ptr [rax]; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x000000000042701c: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426eac: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d4c: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fae: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e3e: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426cde: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000427000: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e90: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x00000000004261a0: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426d30: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426dc7: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426da8: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x0000000000426df0: add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x000000000047e571: add al, byte ptr [rax]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000047bcf6: add al, byte ptr [rax]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000425efb: add al, byte ptr [rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x0000000000480202: add al, byte ptr [rax]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044e51f: add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000496c9d: add al, byte ptr [rax]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000498e50: add al, byte ptr [rax]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x000000000049864e: add al, byte ptr [rax]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x0000000000497a33: add al, byte ptr [rax]; movzx ecx, cl; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x00000000004447b8: add al, byte ptr [rax]; vzeroupper; ret; 
0x000000000049caee: add al, byte ptr [rbx]; add cl, ch; mov ah, byte ptr [rdi]; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000478d02: add al, byte ptr [rcx + 0x39]; ret; 
0x0000000000459896: add al, byte ptr [rcx - 0x77]; ret 0x8341; 
0x0000000000458ce6: add al, byte ptr [rcx - 0x77]; ret; 
0x000000000048f793: add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x00000000004625bc: add al, byte ptr [rip + 0x3d8d4800]; ret 0x4fe; 
0x0000000000427022: add al, byte ptr ds:[rax]; cmove rax, rdx; ret; 
0x000000000042701b: add al, byte ptr ds:[rax]; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000496c9c: add al, byte ptr ss:[rax]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000455a08: add al, ch; adc dl, ch; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000048cb09: add al, ch; adc dword ptr [rcx - 7], edi; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x000000000048facc: add al, ch; add eax, 0x8948ffb7; ret; 
0x0000000000459be1: add al, ch; cmp dword ptr [rbx - 0x76be0006], edx; ret 0x2be9; 
0x0000000000456c74: add al, ch; cmpsb byte ptr [rsi], byte ptr [rdi]; ret 0xfffa; 
0x000000000048db3b: add al, ch; fild word ptr [rcx]; cld; jmp qword ptr [rsi + 0x66]; 
0x000000000045dc4b: add al, ch; iretd; push rdx; cli; jmp qword ptr [rsi + 0x66]; 
0x000000000049266b: add al, ch; jmp qword ptr [rbx]; 
0x000000000045de9f: add al, ch; jnp 0x5def3; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000424e14: add al, ch; mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000042491c: add al, ch; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000457164: add al, ch; mov dh, 0xbd; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000486c76: add al, ch; movsb byte ptr [rdi], byte ptr [rsi]; ret 0xfff7; 
0x000000000048c40b: add al, ch; nop esp, edi; jmp qword ptr [rsi + 0x66]; 
0x00000000004626d0: add al, ch; or dl, dil; jmp qword ptr [rsi + 0x2e]; 
0x0000000000401d5d: add al, ch; or eax, 0xc9000071; ret; 
0x000000000044ce34: add al, ch; out 0x60, al; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000456bc2: add al, ch; pop rax; ret; 
0x000000000045e4c0: add al, ch; pop rdx; pop rdi; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000423c5c: add al, ch; pop rsi; ret 0xffff; 
0x0000000000456cbe: add al, ch; pop rsp; ret 0xfffa; 
0x000000000044c4cd: add al, ch; push -5; jmp qword ptr [rsi + 0x66]; 
0x0000000000492bc4: add al, ch; push rsi; add esi, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000464f58: add al, ch; ret 0xf9df; 
0x000000000045bb58: add al, ch; ret 0xfa73; 
0x000000000045cf68: add al, ch; ret 0xfab1; 
0x0000000000455b58: add al, ch; ret 0xfad3; 
0x000000000041e517: add al, ch; ret; 
0x000000000041c497: add al, ch; ror dword ptr [rbx - 2], cl; dec dword ptr [rax - 0x77]; ret; 
0x000000000046567c: add al, ch; sahf; fdivr st(1); jmp qword ptr [rsi + 0x66]; 
0x0000000000473b48: add al, ch; sal bl, cl; clc; jmp qword ptr [rsi - 0x70]; 
0x000000000048af48: add al, ch; sar byte ptr [rdi - 9], cl; jmp qword ptr [rsi - 0x70]; 
0x000000000044cafe: add al, ch; sbb al, 0x64; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000046986c: add al, ch; scasb al, byte ptr [rdi]; xchg eax, esi; stc; jmp qword ptr [rsi + 0x66]; 
0x000000000044ff4a: add al, ch; shr byte ptr [rdi], 1; sti; call qword ptr [rbp + 0x48]; 
0x000000000041c7f1: add al, ch; sub dword ptr [rdi - 2], esp; jmp qword ptr [rsi + 0xf]; 
0x000000000048f791: add bh, al; add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x000000000045359f: add bh, al; add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004243bc: add bh, al; add eax, 0xa88d9; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000041f936: add bh, al; add eax, 0xaadf3; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004862c7: add bh, al; nop; sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000046d667: add bh, al; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x00000000004120c4: add bh, al; test esp, edx; idiv bh; call qword ptr [rax]; 
0x0000000000408427: add bh, bh; adc ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000401c50: add bh, bh; rcr byte ptr [rbp - 0x3a], 1; add eax, 0xca5c5; add ebx, esi; ret; 
0x0000000000489125: add bh, bh; ror byte ptr [rax - 0x7d], 1; ret; 
0x000000000048f6d9: add bh, byte ptr [rax + 1]; ret; 
0x000000000048f84f: add bh, byte ptr [rax + 2]; ret; 
0x000000000044e303: add bh, byte ptr [rax - 1]; ret; 
0x000000000048ca3c: add bh, byte ptr [rdx]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000426440: add bh, dh; ret 0; 
0x0000000000458330: add bh, dh; ret 0xf800; 
0x000000000045fb4f: add bh, dh; ret 0xffef; 
0x0000000000486887: add bh, dh; ret; 
0x000000000040236d: add bl, bpl; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000483720: add bl, byte ptr [rbx + 0x4c]; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000048371f: add bl, byte ptr gs:[rbx + 0x4c]; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000044dd37: add bl, ch; adc eax, 0x441f0f66; add byte ptr [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x000000000040236e: add bl, ch; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000417270: add bl, ch; ret 0x1f0f; 
0x000000000041814a: add bl, ch; ret; 
0x000000000042ec2d: add bl, ch; sal bl, 1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000004214ef: add bl, ch; stosd dword ptr [rdi], eax; nop word ptr [rax + rax]; call rax; 
0x000000000044c355: add bl, ch; xchg eax, esi; xor eax, eax; ret; 
0x000000000042eaef: add bl, dh; bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000042eadf: add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000000447e4f: add bl, dh; movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000447e6f: add bl, dh; movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000447eef: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000447eaf: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000447ecf: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000447f8f: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004484df: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000447e3f: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044bbdb: add bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000049a4a7: add bl, dh; ret; 
0x0000000000447e4e: add bl, sil; movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000447e6e: add bl, sil; movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000447eee: add bl, sil; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000447ece: add bl, sil; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000040b812: add bpl, cl; ret 0xffde; 
0x000000000044fe83: add byte ptr [r11 + rcx*4 + 0x7d], r9b; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000494fd8: add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x000000000044ef8f: add byte ptr [r13 + rbp - 0x48], sil; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000044eee6: add byte ptr [r14 + rsi + 0x44], sil; mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000456a24: add byte ptr [r15 + rcx - 0x4a], r8b; dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x00000000004177bb: add byte ptr [r8 - 0x77], r9b; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000479657: add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000047964e: add byte ptr [r8 - 0x7b], r9b; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000040bdaf: add byte ptr [r8 - 0x7d], r9b; ret; 
0x0000000000401d57: add byte ptr [r8], dil; call 0x8e70; leave; ret; 
0x0000000000478e8f: add byte ptr [r9 + rcx*4 - 0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x0000000000448cce: add byte ptr [rax + 0x1478d48], dl; ret; 
0x0000000000450e84: add byte ptr [rax + 0x15], bh; syscall; 
0x0000000000425e8f: add byte ptr [rax + 0x16], bh; pop rbx; ret; 
0x00000000004677ff: add byte ptr [rax + 0x21], cl; ret 0x8948; 
0x000000000047421a: add byte ptr [rax + 0x29], cl; fmul dword ptr [rax - 0x77]; fimul word ptr [rcx + rcx*4 - 0x19]; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x00000000004840e2: add byte ptr [rax + 0x29], cl; ret 0x149; 
0x0000000000498855: add byte ptr [rax + 0x29], cl; ret 0x2948; 
0x0000000000475424: add byte ptr [rax + 0x29], cl; ret 0x8949; 
0x0000000000487b41: add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000493924: add byte ptr [rax + 0x29], cl; ret 0xc148; 
0x0000000000413073: add byte ptr [rax + 0x29], cl; ret; 
0x0000000000422bda: add byte ptr [rax + 0x39], cl; ret 0x820f; 
0x000000000041b2e7: add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000048b376: add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000040840f: add byte ptr [rax + 0x39], cl; ret; 
0x000000000042708e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1c9a7; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263ae: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1dc37; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263ee: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1dd97; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x00000000004821ae: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x597; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x000000000042704e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x7ae7; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c0e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x7c57; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000478e1e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x9107; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x000000000048216e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0xb47; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x00000000004232e1: add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x000000000041ff27: add byte ptr [rax + 0x39], cl; sal byte ptr [rbp + 1], 1; ret; 
0x000000000040840e: add byte ptr [rax + 0x39], r9b; ret; 
0x0000000000417f51: add byte ptr [rax + 0x3c740000], al; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000044c197: add byte ptr [rax + 0x485bf0e5], al; cmovne eax, edx; ret; 
0x00000000004260b0: add byte ptr [rax + 0x48], al; lea eax, dword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x000000000044ee0f: add byte ptr [rax + 0x48], bh; syscall; 
0x0000000000498e51: add byte ptr [rax + 0x63], cl; or al, 0x8a; add rdx, rcx; jmp rdx; 
0x000000000048b086: add byte ptr [rax + 0x63], cl; ret; 
0x000000000044490f: add byte ptr [rax + 0x74c08402], cl; adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x000000000044836f: add byte ptr [rax + 0x78d4837], cl; ret; 
0x0000000000493488: add byte ptr [rax + 0x9e], bh; sete sil; add esi, esi; syscall; 
0x0000000000402357: add byte ptr [rax + 0x9e], bh; syscall; 
0x0000000000470c89: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709fd: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec69: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f821: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f75c: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5bf: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4f0: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454749: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454635: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454515: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d35d: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e1d: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424155: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x000000000042411d: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c45: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c45: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; pop rbp; ret; 
0x0000000000423c0d: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423acd: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423629: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c79: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424311: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000424311: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa8982]; syscall; pop rbx; ret; 
0x0000000000420d75: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cff: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420abd: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420599: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f04f: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f04f: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb4f: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7eb: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e4a1: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3db: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d13b: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde7: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde7: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x000000000041788d: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086ec: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084b5: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x000000000040847a: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408396: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065da: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de7: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403dfe: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dd5: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403caa: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x0000000000401216: add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000401385: add byte ptr [rax + 0xca], bh; syscall; 
0x0000000000470df3: add byte ptr [rax + 0xca], bh; syscall; ret; 
0x0000000000478d8c: add byte ptr [rax + 0xca], bh; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000045eade: add byte ptr [rax + 0xd], bh; syscall; 
0x0000000000407a4d: add byte ptr [rax + 0xe], bh; syscall; 
0x000000000049348d: add byte ptr [rax + 0xf], al; xchg eax, esp; mov byte ptr [rcx], 0xf6; syscall; 
0x0000000000481c89: add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000000041f8ca: add byte ptr [rax + 0xf], cl; sal byte ptr [rcx], 1; ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000048f78c: add byte ptr [rax + 1], bh; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000048f6a0: add byte ptr [rax + 1], bh; ret; 
0x000000000042e3b4: add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x0000000000444211: add byte ptr [rax + 1], cl; clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042e8f1: add byte ptr [rax + 1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x00000000004682fe: add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000049530f: add byte ptr [rax + 1], cl; ret 0xb70f; 
0x0000000000420240: add byte ptr [rax + 1], cl; ret; 
0x000000000049a78f: add byte ptr [rax + 2], bh; add rsp, 8; ret; 
0x000000000048f809: add byte ptr [rax + 2], bh; ret; 
0x000000000049a77f: add byte ptr [rax + 4], bh; add rsp, 8; ret; 
0x000000000042df7c: add byte ptr [rax + 5], cl; add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000499bae: add byte ptr [rax + 7], bh; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000048e4d1: add byte ptr [rax + 9], cl; ret 0x840f; 
0x00000000004060ff: add byte ptr [rax + rax*8 - 0x49f0e78c], al; ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000409171: add byte ptr [rax + rax*8 - 0x74b7cd8c], al; adc byte ptr [r8 - 0x75], cl; push rbx; sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x000000000041f8c8: add byte ptr [rax + rax], al; cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000000483691: add byte ptr [rax + rax], cl; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x0000000000422d04: add byte ptr [rax + rax], cl; add byte ptr [rax], al; mov rax, r8; ret; 
0x0000000000425110: add byte ptr [rax + rax], cl; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000045feeb: add byte ptr [rax + rax], cl; add byte ptr [rbp + 0x1e], dh; xor eax, eax; add rsp, 8; ret; 
0x000000000049759f: add byte ptr [rax + rbx*8 - 0xd], dh; ret; 
0x0000000000426d1e: add byte ptr [rax - 0x108af71a], al; test byte ptr [rip + 0xa600a], 2; lea rdx, qword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x000000000046cceb: add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000488b0a: add byte ptr [rax - 0x168b7f80], 0x89; ret 0xeac1; 
0x0000000000426f4e: add byte ptr [rax - 0x197fea8c], al; add cl, byte ptr [rax - 0x73]; add eax, 0x14eb4; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000426455: add byte ptr [rax - 0x197fea8c], al; add cl, byte ptr [rax - 0x73]; add eax, 0x39fd; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x0000000000478eee: add byte ptr [rax - 0x197fea8c], al; add cl, byte ptr [rax - 0x73]; add eax, 0x7f4; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x000000000047864c: add byte ptr [rax - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041f06e: add byte ptr [rax - 0x39], cl; add eax, 0xadbbe; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000041d5c3: add byte ptr [rax - 0x39], cl; push r8; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000408408: add byte ptr [rax - 0x39], cl; rcl byte ptr [rax], 0xc2; add byte ptr [rax + 0x39], r9b; ret; 
0x0000000000410eeb: add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x0000000000476ba6: add byte ptr [rax - 0x39], cl; ret 0xc208; 
0x000000000047100d: add byte ptr [rax - 0x39], cl; ret 0xffa0; 
0x0000000000407a77: add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000470476: add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x00000000004264b6: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000402367: add byte ptr [rax - 0x39], cl; ret; 
0x0000000000482c6f: add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x0000000000482caf: add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x0000000000482c5f: add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x0000000000482c9f: add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000045ea0f: add byte ptr [rax - 0x39], cl; ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x0000000000476b9f: add byte ptr [rax - 0x39], cl; shl dword ptr [rax - 0x45], 0x4c; add byte ptr [rax - 0x39], cl; ret 0xc208; 
0x0000000000408407: add byte ptr [rax - 0x39], r9b; rcl byte ptr [rax], 0xc2; add byte ptr [rax + 0x39], r9b; ret; 
0x0000000000476ba5: add byte ptr [rax - 0x39], r9b; ret 0xc208; 
0x0000000000418bde: add byte ptr [rax - 0x39], r9b; ret; 
0x00000000004440fe: add byte ptr [rax - 0x3f43f00d], dl; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000499ee6: add byte ptr [rax - 0x3f], cl; call 0x4810282d; mov eax, dword ptr [rdi + 0x98]; ret; 
0x0000000000484a5b: add byte ptr [rax - 0x3f], cl; out dx, eax; add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x000000000045e988: add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x000000000045cb6d: add byte ptr [rax - 0x3f], cl; ret 0x4911; 
0x000000000045cb41: add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x000000000048f76f: add byte ptr [rax - 0x3ffe], bh; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000048f788: add byte ptr [rax - 0x47ff76b7], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000046121e: add byte ptr [rax - 0x48], cl; ret 0xffff; 
0x000000000041530f: add byte ptr [rax - 0x50743], al; jmp qword ptr [rax]; 
0x000000000044f2de: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x000000000048341e: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x000000000048341e: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; ret; 
0x000000000044f2ae: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x000000000044f27e: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x000000000042618e: add byte ptr [rax - 0x5e1f00d], dl; test byte ptr [rip + 0xa6b8f], 0x10; lea rdx, qword ptr [rip + 0x248be]; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426d07: add byte ptr [rax - 0x73], cl; adc eax, 0x11e51; cmovne rax, rdx; ret; 
0x0000000000426f5b: add byte ptr [rax - 0x73], cl; adc eax, 0x170fd; cmovne rax, rdx; ret; 
0x0000000000426178: add byte ptr [rax - 0x73], cl; adc eax, 0x1e8a0; cmovne rax, rdx; ret; 
0x0000000000426f08: add byte ptr [rax - 0x73], cl; adc eax, 0x1f2c0; cmovne rax, rdx; ret; 
0x0000000000426c69: add byte ptr [rax - 0x73], cl; adc eax, 0x2212f; cmovne rax, rdx; ret; 
0x00000000004260b8: add byte ptr [rax - 0x73], cl; adc eax, 0x229c0; cmovne rax, rdx; ret; 
0x0000000000426118: add byte ptr [rax - 0x73], cl; adc eax, 0x2690; cmovne rax, rdx; ret; 
0x0000000000478efb: add byte ptr [rax - 0x73], cl; adc eax, 0x2e4d; cmovne rax, rdx; ret; 
0x0000000000426462: add byte ptr [rax - 0x73], cl; adc eax, 0x5256; cmovne rax, rdx; ret; 
0x000000000044ce78: add byte ptr [rax - 0x73], cl; adc eax, 0x8f0; cmovne rax, rdx; ret; 
0x0000000000426fd7: add byte ptr [rax - 0x73], cl; adc eax, 0xf091; cmovne rax, rdx; ret; 
0x0000000000426e67: add byte ptr [rax - 0x73], cl; adc eax, 0xf1e1; cmovne rax, rdx; ret; 
0x000000000044ca4c: add byte ptr [rax - 0x73], cl; add al, 0x4c; lea ecx, dword ptr [rsp + 0x20]; call rbx; 
0x0000000000488801: add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887cf: add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000044341e: add byte ptr [rax - 0x73], cl; add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000045a984: add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x0000000000427098: add byte ptr [rax - 0x73], cl; add eax, 0x1c560; cmove rax, rdx; ret; 
0x00000000004263b8: add byte ptr [rax - 0x73], cl; add eax, 0x1d870; cmove rax, rdx; ret; 
0x00000000004263f8: add byte ptr [rax - 0x73], cl; add eax, 0x1d9d0; cmove rax, rdx; ret; 
0x000000000042701d: add byte ptr [rax - 0x73], cl; add eax, 0x23edb; cmove rax, rdx; ret; 
0x0000000000426ead: add byte ptr [rax - 0x73], cl; add eax, 0x2403b; cmove rax, rdx; ret; 
0x0000000000426d4d: add byte ptr [rax - 0x73], cl; add eax, 0x241ab; cmove rax, rdx; ret; 
0x0000000000426faf: add byte ptr [rax - 0x73], cl; add eax, 0x242a9; cmove rax, rdx; ret; 
0x0000000000426e3f: add byte ptr [rax - 0x73], cl; add eax, 0x24409; cmove rax, rdx; ret; 
0x0000000000426cdf: add byte ptr [rax - 0x73], cl; add eax, 0x24579; cmove rax, rdx; ret; 
0x0000000000427001: add byte ptr [rax - 0x73], cl; add eax, 0x24697; cmove rax, rdx; ret; 
0x0000000000426e91: add byte ptr [rax - 0x73], cl; add eax, 0x247f7; cmove rax, rdx; ret; 
0x00000000004261a1: add byte ptr [rax - 0x73], cl; add eax, 0x24807; cmovne rax, rdx; ret; 
0x0000000000426d31: add byte ptr [rax - 0x73], cl; add eax, 0x24967; cmove rax, rdx; ret; 
0x0000000000426dc8: add byte ptr [rax - 0x73], cl; add eax, 0x24de0; cmovne rax, rdx; ret; 
0x0000000000426da9: add byte ptr [rax - 0x73], cl; add eax, 0x24fcf; cmove rax, rdx; ret; 
0x0000000000426df1: add byte ptr [rax - 0x73], cl; add eax, 0x25117; cmove rax, rdx; ret; 
0x00000000004821b8: add byte ptr [rax - 0x73], cl; add eax, 0x260; cmove rax, rdx; ret; 
0x0000000000420ecd: add byte ptr [rax - 0x73], cl; add eax, 0x2abb; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420ebf: add byte ptr [rax - 0x73], cl; add eax, 0x3029; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000048f8ff: add byte ptr [rax - 0x73], cl; add eax, 0x3d6d9; mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x00000000004900d1: add byte ptr [rax - 0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x0000000000427058: add byte ptr [rax - 0x73], cl; add eax, 0x7600; cmove rax, rdx; ret; 
0x0000000000426c18: add byte ptr [rax - 0x73], cl; add eax, 0x7710; cmove rax, rdx; ret; 
0x0000000000482178: add byte ptr [rax - 0x73], cl; add eax, 0x8a0; cmove rax, rdx; ret; 
0x0000000000478e28: add byte ptr [rax - 0x73], cl; add eax, 0x8e00; cmove rax, rdx; ret; 
0x0000000000420dc7: add byte ptr [rax - 0x73], cl; add eax, 0xa99d1; add rsp, 0x10; pop rbp; ret; 
0x0000000000424407: add byte ptr [rax - 0x73], cl; add eax, 0xfffff581; mov qword ptr [rip + 0xa636a], rax; ret; 
0x00000000004243f9: add byte ptr [rax - 0x73], cl; add eax, 0xfffffaef; mov qword ptr [rip + 0xa6380], rax; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x00000000004823a0: add byte ptr [rax - 0x73], cl; add qword ptr [rbp + rcx*4 + 0x4c], rcx; and al, 0x28; call rbx; 
0x000000000044d0dc: add byte ptr [rax - 0x73], cl; call 0x41611240; pop rbp; pop rbp; ret; 
0x00000000004863cb: add byte ptr [rax - 0x73], cl; call 0x4164a52f; pop rbp; pop rbp; ret; 
0x0000000000470c8e: add byte ptr [rax - 0x73], cl; cmp eax, 0x5c29a; syscall; 
0x0000000000470a02: add byte ptr [rax - 0x73], cl; cmp eax, 0x5c522; syscall; 
0x000000000046ec6e: add byte ptr [rax - 0x73], cl; cmp eax, 0x5e2ae; syscall; 
0x000000000045f826: add byte ptr [rax - 0x73], cl; cmp eax, 0x6d6f2; syscall; 
0x000000000045f761: add byte ptr [rax - 0x73], cl; cmp eax, 0x6d7b7; syscall; 
0x000000000045f5c4: add byte ptr [rax - 0x73], cl; cmp eax, 0x6d954; syscall; 
0x000000000045f4f5: add byte ptr [rax - 0x73], cl; cmp eax, 0x6da23; syscall; 
0x000000000045474e: add byte ptr [rax - 0x73], cl; cmp eax, 0x7915a; syscall; 
0x000000000045463a: add byte ptr [rax - 0x73], cl; cmp eax, 0x7926e; syscall; 
0x000000000045451a: add byte ptr [rax - 0x73], cl; cmp eax, 0x7938e; syscall; 
0x000000000044d362: add byte ptr [rax - 0x73], cl; cmp eax, 0x80546; syscall; 
0x00000000004085e0: add byte ptr [rax - 0x73], cl; cmp eax, 0x962e5; call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000425e22: add byte ptr [rax - 0x73], cl; cmp eax, 0xa4976; syscall; 
0x000000000042415a: add byte ptr [rax - 0x73], cl; cmp eax, 0xa663e; syscall; 
0x0000000000424122: add byte ptr [rax - 0x73], cl; cmp eax, 0xa6676; syscall; 
0x0000000000423c4a: add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b4e; syscall; 
0x0000000000423c4a: add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b4e; syscall; pop rbp; ret; 
0x0000000000423c12: add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b86; syscall; 
0x0000000000423ad2: add byte ptr [rax - 0x73], cl; cmp eax, 0xa6cc6; syscall; 
0x000000000042362e: add byte ptr [rax - 0x73], cl; cmp eax, 0xa716a; syscall; 
0x0000000000424c7e: add byte ptr [rax - 0x73], cl; cmp eax, 0xa802a; syscall; 
0x0000000000424316: add byte ptr [rax - 0x73], cl; cmp eax, 0xa8982; syscall; 
0x0000000000424316: add byte ptr [rax - 0x73], cl; cmp eax, 0xa8982; syscall; pop rbx; ret; 
0x0000000000420d7a: add byte ptr [rax - 0x73], cl; cmp eax, 0xabf2e; syscall; 
0x0000000000420d04: add byte ptr [rax - 0x73], cl; cmp eax, 0xabf94; syscall; 
0x0000000000420ac2: add byte ptr [rax - 0x73], cl; cmp eax, 0xac1e6; syscall; 
0x000000000042059e: add byte ptr [rax - 0x73], cl; cmp eax, 0xac70a; syscall; 
0x000000000041f054: add byte ptr [rax - 0x73], cl; cmp eax, 0xadbd4; syscall; 
0x000000000041f054: add byte ptr [rax - 0x73], cl; cmp eax, 0xadbd4; syscall; ret; 
0x000000000041eb54: add byte ptr [rax - 0x73], cl; cmp eax, 0xae0d4; syscall; 
0x000000000041e7f0: add byte ptr [rax - 0x73], cl; cmp eax, 0xae438; syscall; 
0x000000000041e4a6: add byte ptr [rax - 0x73], cl; cmp eax, 0xae782; syscall; 
0x000000000041d3e0: add byte ptr [rax - 0x73], cl; cmp eax, 0xaf848; syscall; 
0x000000000041d140: add byte ptr [rax - 0x73], cl; cmp eax, 0xafae8; syscall; 
0x000000000041cdec: add byte ptr [rax - 0x73], cl; cmp eax, 0xafe3c; syscall; 
0x000000000041cdec: add byte ptr [rax - 0x73], cl; cmp eax, 0xafe3c; syscall; ret; 
0x0000000000417892: add byte ptr [rax - 0x73], cl; cmp eax, 0xb6016; syscall; 
0x00000000004086f1: add byte ptr [rax - 0x73], cl; cmp eax, 0xc5057; syscall; 
0x00000000004084ba: add byte ptr [rax - 0x73], cl; cmp eax, 0xc528e; syscall; 
0x000000000040847f: add byte ptr [rax - 0x73], cl; cmp eax, 0xc52c9; syscall; 
0x000000000040839b: add byte ptr [rax - 0x73], cl; cmp eax, 0xc53ad; syscall; 
0x00000000004065df: add byte ptr [rax - 0x73], cl; cmp eax, 0xc61d1; syscall; 
0x0000000000404dec: add byte ptr [rax - 0x73], cl; cmp eax, 0xc798c; syscall; 
0x0000000000403e03: add byte ptr [rax - 0x73], cl; cmp eax, 0xc88cd; syscall; 
0x0000000000403dda: add byte ptr [rax - 0x73], cl; cmp eax, 0xc88f6; syscall; 
0x0000000000403caf: add byte ptr [rax - 0x73], cl; cmp eax, 0xc8a21; syscall; 
0x000000000040121b: add byte ptr [rax - 0x73], cl; cmp eax, 0xcb5ad; syscall; 
0x000000000041a804: add byte ptr [rax - 0x73], cl; or eax, 0xb14d4; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000042cf8e: add byte ptr [rax - 0x73], cl; or r14b, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x00000000004077e1: add byte ptr [rax - 0x73], cl; pop rax; or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x000000000044f777: add byte ptr [rax - 0x73], cl; push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000493286: add byte ptr [rax - 0x73], cl; xor eax, 0x3a5f2; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x000000000042102f: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000049106f: add byte ptr [rax - 0x75], cl; adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x00000000004025a8: add byte ptr [rax - 0x75], cl; adc eax, 0xca738; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000414677: add byte ptr [rax - 0x75], cl; add al, 0xc1; mov ecx, 1; jmp rax; 
0x0000000000413d30: add byte ptr [rax - 0x75], cl; add al, 0xc1; xor ecx, ecx; jmp rax; 
0x0000000000474f7c: add byte ptr [rax - 0x75], cl; add al, 0xc6; mov esi, 1; jmp rax; 
0x0000000000474057: add byte ptr [rax - 0x75], cl; add al, 0xc6; xor esi, esi; jmp rax; 
0x0000000000414720: add byte ptr [rax - 0x75], cl; add al, 0xc7; jmp rax; 
0x000000000044797f: add byte ptr [rax - 0x75], cl; add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, qword ptr [rdx + 0xc]; ret; 
0x000000000044604f: add byte ptr [rax - 0x75], cl; add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000425817: add byte ptr [rax - 0x75], cl; add dword ptr [rax], r9d; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000048eff8: add byte ptr [rax - 0x75], cl; and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000456eba: add byte ptr [rax - 0x75], cl; and al, 0x28; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045aa23: add byte ptr [rax - 0x75], cl; and al, 0x30; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044e520: add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x28; ret; 
0x0000000000407b64: add byte ptr [rax - 0x75], cl; and al, 8; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000432aef: add byte ptr [rax - 0x75], cl; cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ccf: add byte ptr [rax - 0x75], cl; hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004332bf: add byte ptr [rax - 0x75], cl; int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000049a5ac: add byte ptr [rax - 0x75], cl; jp 0x9a5b9; sbb ecx, ecx; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x000000000040f614: add byte ptr [rax - 0x75], cl; lea edx, dword ptr [rax - 0x7c000005]; ret 0x4830; 
0x0000000000432ebf: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330bf: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000483aff: add byte ptr [rax - 0x75], cl; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x0000000000494fd1: add byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x0000000000494d6a: add byte ptr [rax - 0x75], cl; or byte ptr [rcx + rcx*4 - 0x16], cl; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000494477: add byte ptr [rax - 0x75], cl; or cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x00000000004021d8: add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x00000000004843e9: add byte ptr [rax - 0x75], cl; push rax; or byte ptr [rax - 0x75], cl; xor al, ch; ret 0xf7cc; 
0x000000000041aaef: add byte ptr [rax - 0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004385ff: add byte ptr [rax - 0x75], cl; push rsi; add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x000000000043256f: add byte ptr [rax - 0x75], cl; push rsi; clc; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437e3f: add byte ptr [rax - 0x75], cl; push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437daf: add byte ptr [rax - 0x75], cl; push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043804f: add byte ptr [rax - 0x75], cl; push rsi; test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x000000000047169c: add byte ptr [rax - 0x75], cl; test dword ptr [rax], edi; idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x000000000041b403: add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000043272f: add byte ptr [rax - 0x75], cl; test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000000412fd8: add byte ptr [rax - 0x75], cl; xchg eax, ebp; clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000417bf2: add byte ptr [rax - 0x75], cl; xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x0000000000403fb2: add byte ptr [rax - 0x76b7bcc8], al; ret; 
0x000000000048f906: add byte ptr [rax - 0x77], cl; add eax, 0x3d6ba; ret; 
0x000000000048f8ef: add byte ptr [rax - 0x77], cl; add eax, 0x3d6d1; add rsp, 8; ret; 
0x0000000000420ed4: add byte ptr [rax - 0x77], cl; add eax, 0xa98a4; ret; 
0x0000000000420ec6: add byte ptr [rax - 0x77], cl; add eax, 0xa98ba; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041f9b0: add byte ptr [rax - 0x77], cl; add eax, 0xaad48; ret; 
0x000000000041f980: add byte ptr [rax - 0x77], cl; add eax, 0xaad80; ret; 
0x000000000048b626: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x8af50; add rsp, 0xd8; ret; 
0x0000000000483588: add byte ptr [rax - 0x77], cl; and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000041bc7c: add byte ptr [rax - 0x77], cl; call 0x5c4319df; ret; 
0x000000000041c0b7: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000049a07c: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; ret; 
0x000000000041a4ff: add byte ptr [rax - 0x77], cl; fidivr word ptr [rdi + 2]; mov eax, r9d; syscall; 
0x000000000041201f: add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000475349: add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x32]; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000040bf1f: add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x7d]; ret; 
0x0000000000424fc6: add byte ptr [rax - 0x77], cl; fistp qword ptr [rax + 0xca]; syscall; 
0x000000000048cbb1: add byte ptr [rax - 0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x0000000000402b99: add byte ptr [rax - 0x77], cl; mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x00000000004218ab: add byte ptr [rax - 0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x0000000000419408: add byte ptr [rax - 0x77], cl; out dx, eax; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x00000000004177bc: add byte ptr [rax - 0x77], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000479658: add byte ptr [rax - 0x77], cl; ret 0x14eb; 
0x000000000048c46f: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000041861b: add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000456e4e: add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x0000000000404b37: add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000413987: add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000041dc47: add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000472bbf: add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x0000000000456e22: add byte ptr [rax - 0x77], cl; ret 0x8445; 
0x000000000044fe88: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000495f70: add byte ptr [rax - 0x77], cl; ret 0x894d; 
0x000000000040acb0: add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000044feee: add byte ptr [rax - 0x77], cl; ret 0xabe; 
0x000000000045a99e: add byte ptr [rax - 0x77], cl; ret 0xb7eb; 
0x0000000000408d35: add byte ptr [rax - 0x77], cl; ret 0xc083; 
0x000000000041f8ba: add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000040ec4a: add byte ptr [rax - 0x77], cl; ret 0xcde8; 
0x000000000046159e: add byte ptr [rax - 0x77], cl; ret 0xf4d; 
0x0000000000402af2: add byte ptr [rax - 0x77], cl; ret; 
0x000000000044af44: add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000048e8a5: add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000041efce: add byte ptr [rax - 0x77], cl; sbb eax, 0xadc62; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x000000000049bdb4: add byte ptr [rax - 0x77], cl; xor eax, 0x31534; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bd00: add byte ptr [rax - 0x77], cl; xor eax, 0x315e8; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000041b29d: add byte ptr [rax - 0x77], r9b; ret 0x294c; 
0x0000000000413986: add byte ptr [rax - 0x77], r9b; ret 0x8148; 
0x00000000004978d9: add byte ptr [rax - 0x78f0d007], al; out 0, al; add byte ptr [rax], al; movsxd rcx, dword ptr [r15 + rcx*4]; add rcx, r15; jmp rcx; 
0x0000000000417c2e: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000004719e4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x4d], 0x63; ret; 
0x0000000000425e7d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rax + 0x48], cl; mov dword ptr [rbx], edx; xor eax, eax; pop rbx; ret; 
0x000000000041fc13: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x21], cl; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000499f3f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x48], 0x8b; and al, 0x10; add rsp, 0x28; ret; 
0x000000000047964f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004516f1: add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rbp + 0x48], 0x8b; push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x0000000000401c18: add byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rsi*8 + 0x5d], cl; mov rsi, rax; mov edi, 0x4cbb10; jmp rdx; 
0x000000000049a76f: add byte ptr [rax - 0x7c], al; push qword ptr [rbp + rbp*8 - 0x18]; mov ch, byte ptr [rcx - 0xa]; jmp qword ptr [rsi + 0xf]; 
0x0000000000424787: add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x0000000000497976: add byte ptr [rax - 0x7d], cl; call qword ptr [rcx]; 
0x000000000044bc41: add byte ptr [rax - 0x7d], cl; cli; and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000495791: add byte ptr [rax - 0x7d], cl; in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000423a4f: add byte ptr [rax - 0x7d], cl; jmp qword ptr [rax]; 
0x0000000000422f17: add byte ptr [rax - 0x7d], cl; ret 0x110; 
0x000000000044a5ef: add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x00000000004567d7: add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x000000000044c687: add byte ptr [rax - 0x7d], cl; ret 0x4501; 
0x00000000004535a5: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000490bbf: add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000403800: add byte ptr [rax - 0x7d], cl; ret 0x481a; 
0x0000000000456802: add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x000000000042d029: add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000048c1f2: add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x0000000000450e47: add byte ptr [rax - 0x7d], cl; ret 0x8801; 
0x00000000004237c6: add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x0000000000479128: add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x0000000000440593: add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d057: add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000450c0f: add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x00000000004936ef: add byte ptr [rax - 0x7d], cl; ret 0xf604; 
0x000000000040426f: add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004285ef: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x0000000000443f0f: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x000000000045bdcd: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + rcx*2], 0x83; ret; 
0x000000000041800a: add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 0x8b; adc esi, esi; ret 0xf20; 
0x000000000049c30a: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x4c; mov dword ptr [rbx], eax; pop rbx; ret; 
0x0000000000491d65: add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], -0x7d; ret 0x4801; 
0x000000000045e7c8: add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x0000000000429b65: add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000450029: add byte ptr [rax - 0x7f], cl; ret; 
0x000000000049c1cf: add byte ptr [rax - 0x80], al; call qword ptr [rax + 0x53]; 
0x000000000049aa2f: add byte ptr [rax - 0x80], al; call qword ptr [rax + 0x75]; 
0x0000000000460934: add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x000000000045f61d: add byte ptr [rax - 1], bh; pop rbp; pop r12; pop r13; ret; 
0x000000000041941f: add byte ptr [rax - 1], bh; pop rbp; ret; 
0x000000000041a0ff: add byte ptr [rax - 1], bh; ret; 
0x000000000041ac66: add byte ptr [rax - 1], dil; ret; 
0x000000000044bbd8: add byte ptr [rax], 0; add bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000041f8ff: add byte ptr [rax], 0; add byte ptr [rax + 0xca], bh; syscall; 
0x0000000000429b62: add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000042e5db: add byte ptr [rax], 0; add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000042e5fb: add byte ptr [rax], 0; add byte ptr [rax], al; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x20]; ret; 
0x0000000000491afb: add byte ptr [rax], 0; add byte ptr [rax], al; call qword ptr [rbx]; 
0x00000000004389eb: add byte ptr [rax], 0; add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000041e03b: add byte ptr [rax], 0; add byte ptr [rax], al; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000045ec1b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f203: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000043882b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044ee03: add byte ptr [rax], 0; add byte ptr [rax], al; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000041a4fb: add byte ptr [rax], 0; add byte ptr [rax], al; mov rsi, rbx; mov edi, 2; mov eax, r9d; syscall; 
0x0000000000447e3b: add byte ptr [rax], 0; add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044c14b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000000438b3b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x0000000000438acb: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044479b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000044ced3: add byte ptr [rax], 0; add byte ptr [rax], al; pop rbp; ret; 
0x0000000000491b2b: add byte ptr [rax], 0; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000048fbd3: add byte ptr [rax], 0; add byte ptr [rax], al; ret; 
0x000000000042582b: add byte ptr [rax], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000041a6b3: add byte ptr [rax], 0; add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x00000000004229df: add byte ptr [rax], 0; add byte ptr [rcx + rcx*4 + 0x62], cl; sbb byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000044bf33: add byte ptr [rax], 0; add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000044bed3: add byte ptr [rax], 0; add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000437a83: add byte ptr [rax], 0; add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000042f793: add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000426c67: add byte ptr [rax], 0; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x00000000004020d7: add byte ptr [rax], al; adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x000000000048db39: add byte ptr [rax], al; add al, ch; fild word ptr [rcx]; cld; jmp qword ptr [rsi + 0x66]; 
0x000000000048c409: add byte ptr [rax], al; add al, ch; nop esp, edi; jmp qword ptr [rsi + 0x66]; 
0x0000000000401d5b: add byte ptr [rax], al; add al, ch; or eax, 0xc9000071; ret; 
0x000000000045cf66: add byte ptr [rax], al; add al, ch; ret 0xfab1; 
0x00000000004782a5: add byte ptr [rax], al; add al, ch; ret; 
0x000000000048f78f: add byte ptr [rax], al; add bh, al; add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x000000000045359d: add byte ptr [rax], al; add bh, al; add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000426c7d: add byte ptr [rax], al; add bh, dh; ret 0; 
0x0000000000486885: add byte ptr [rax], al; add bh, dh; ret; 
0x000000000041a0d2: add byte ptr [rax], al; add bl, ch; ret; 
0x00000000004214ed: add byte ptr [rax], al; add bl, ch; stosd dword ptr [rdi], eax; nop word ptr [rax + rax]; call rax; 
0x000000000044c353: add byte ptr [rax], al; add bl, ch; xchg eax, esi; xor eax, eax; ret; 
0x000000000042eadd: add byte ptr [rax], al; add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000000447e3d: add byte ptr [rax], al; add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044bbd9: add byte ptr [rax], al; add bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044ef8d: add byte ptr [rax], al; add byte ptr [r13 + rbp - 0x48], sil; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000448ccc: add byte ptr [rax], al; add byte ptr [rax + 0x1478d48], dl; ret; 
0x00000000004840e0: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x149; 
0x0000000000498853: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x2948; 
0x0000000000475422: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8949; 
0x0000000000487b3f: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000493922: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0xc148; 
0x0000000000413071: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x000000000048b374: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x0000000000419c59: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000044c195: add byte ptr [rax], al; add byte ptr [rax + 0x485bf0e5], al; cmovne eax, edx; ret; 
0x000000000044ee0d: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; syscall; 
0x000000000044836d: add byte ptr [rax], al; add byte ptr [rax + 0x78d4837], cl; ret; 
0x0000000000470c87: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709fb: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec67: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f81f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f75a: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5bd: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4ee: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454747: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454633: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454513: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d35b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e1b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424153: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x000000000042411b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c43: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c43: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; pop rbp; ret; 
0x0000000000423c0b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423acb: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423627: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c77: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x000000000042430f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x000000000042430f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xa8982]; syscall; pop rbx; ret; 
0x0000000000420d73: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cfd: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420abb: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420597: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f04d: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f04d: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb4d: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e9: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e49f: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d9: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d139: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde5: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde5: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x000000000041788b: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086ea: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084b3: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408478: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408394: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d8: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de5: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403dfc: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dd3: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca8: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x0000000000401214: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000401383: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; syscall; 
0x0000000000470df1: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; syscall; ret; 
0x0000000000478d8a: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000045eadc: add byte ptr [rax], al; add byte ptr [rax + 0xd], bh; syscall; 
0x0000000000407a4b: add byte ptr [rax], al; add byte ptr [rax + 0xe], bh; syscall; 
0x000000000049348b: add byte ptr [rax], al; add byte ptr [rax + 0xf], al; xchg eax, esp; mov byte ptr [rcx], 0xf6; syscall; 
0x000000000048f69e: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004682fc: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000049530d: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb70f; 
0x00000000004555c1: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000048f807: add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000049759d: add byte ptr [rax], al; add byte ptr [rax + rbx*8 - 0xd], dh; ret; 
0x000000000047864a: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041f06c: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; add eax, 0xadbbe; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000410ee9: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x000000000047100b: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffa0; 
0x000000000044e485: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x00000000004264b4: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000042047f: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000482c6d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x0000000000482cad: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x0000000000482c5d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x0000000000482c9d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x0000000000476b9d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; shl dword ptr [rax - 0x45], 0x4c; add byte ptr [rax - 0x39], cl; ret 0xc208; 
0x0000000000499ee4: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; call 0x4810282d; mov eax, dword ptr [rdi + 0x98]; ret; 
0x0000000000484a59: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; out dx, eax; add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x000000000045e986: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x000000000045cb6b: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x4911; 
0x000000000045cb3f: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x000000000048f786: add byte ptr [rax], al; add byte ptr [rax - 0x47ff76b7], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000041530d: add byte ptr [rax], al; add byte ptr [rax - 0x50743], al; jmp qword ptr [rax]; 
0x000000000044f2dc: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x000000000048341c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x000000000048341c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; ret; 
0x000000000044f2ac: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x000000000044f27c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x000000000044341c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000470c8c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5c29a; syscall; 
0x0000000000470a00: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5c522; syscall; 
0x000000000046ec6c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5e2ae; syscall; 
0x000000000045f824: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6d6f2; syscall; 
0x000000000045f75f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6d7b7; syscall; 
0x000000000045f5c2: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6d954; syscall; 
0x000000000045f4f3: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6da23; syscall; 
0x000000000045474c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x7915a; syscall; 
0x0000000000454638: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x7926e; syscall; 
0x0000000000454518: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x7938e; syscall; 
0x000000000044d360: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x80546; syscall; 
0x0000000000425e20: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa4976; syscall; 
0x0000000000424158: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa663e; syscall; 
0x0000000000424120: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6676; syscall; 
0x0000000000423c48: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b4e; syscall; 
0x0000000000423c48: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b4e; syscall; pop rbp; ret; 
0x0000000000423c10: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b86; syscall; 
0x0000000000423ad0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6cc6; syscall; 
0x000000000042362c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa716a; syscall; 
0x0000000000424c7c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa802a; syscall; 
0x0000000000424314: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa8982; syscall; 
0x0000000000424314: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa8982; syscall; pop rbx; ret; 
0x0000000000420d78: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xabf2e; syscall; 
0x0000000000420d02: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xabf94; syscall; 
0x0000000000420ac0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xac1e6; syscall; 
0x000000000042059c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xac70a; syscall; 
0x000000000041f052: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xadbd4; syscall; 
0x000000000041f052: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xadbd4; syscall; ret; 
0x000000000041eb52: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xae0d4; syscall; 
0x000000000041e7ee: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xae438; syscall; 
0x000000000041e4a4: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xae782; syscall; 
0x000000000041d3de: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xaf848; syscall; 
0x000000000041d13e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xafae8; syscall; 
0x000000000041cdea: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xafe3c; syscall; 
0x000000000041cdea: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xafe3c; syscall; ret; 
0x0000000000417890: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xb6016; syscall; 
0x00000000004086ef: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc5057; syscall; 
0x00000000004084b8: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc528e; syscall; 
0x000000000040847d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc52c9; syscall; 
0x0000000000408399: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc53ad; syscall; 
0x00000000004065dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc61d1; syscall; 
0x0000000000404dea: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc798c; syscall; 
0x0000000000403e01: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc88cd; syscall; 
0x0000000000403dd8: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc88f6; syscall; 
0x0000000000403cad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc8a21; syscall; 
0x0000000000401219: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xcb5ad; syscall; 
0x000000000041a802: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; or eax, 0xb14d4; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000042102d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000048eff6: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000432ebd: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330bd: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000494475: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; or cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x000000000043272d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000000417bf0: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x000000000041f9ae: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xaad48; ret; 
0x000000000041f97e: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xaad80; ret; 
0x000000000048b624: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x8af50; add rsp, 0xd8; ret; 
0x000000000041bc7a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c4319df; ret; 
0x000000000041a4fd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fidivr word ptr [rdi + 2]; mov eax, r9d; syscall; 
0x0000000000424fc4: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fistp qword ptr [rax + 0xca]; syscall; 
0x0000000000402b97: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x00000000004218a9: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x000000000048c46d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000418619: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000456e4c: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x0000000000413e98: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000046ef2d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000472bbd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000040ec48: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xcde8; 
0x000000000046159c: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xf4d; 
0x0000000000406f99: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040100c: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401c16: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rsi*8 + 0x5d], cl; mov rsi, rax; mov edi, 0x4cbb10; jmp rdx; 
0x0000000000424785: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x0000000000423a4d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; jmp qword ptr [rax]; 
0x0000000000422f15: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x110; 
0x000000000044a5ed: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000046090d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x000000000044c685: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4501; 
0x00000000004535a3: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000490bbd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000456800: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x000000000042dd43: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441c51: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042dd6d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000040426d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004285ed: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x0000000000429b63: add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000049aa2d: add byte ptr [rax], al; add byte ptr [rax - 0x80], al; call qword ptr [rax + 0x75]; 
0x000000000045f61b: add byte ptr [rax], al; add byte ptr [rax - 1], bh; pop rbp; pop r12; pop r13; ret; 
0x000000000041a0fd: add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x0000000000426c7b: add byte ptr [rax], al; add byte ptr [rax], al; add bh, dh; ret 0; 
0x0000000000448cca: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1478d48], dl; ret; 
0x000000000044836b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x78d4837], cl; ret; 
0x000000000049530b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000045ebdb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000482c6b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x0000000000482cab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x0000000000482c5b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x0000000000482c9b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000041530b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x50743], al; jmp qword ptr [rax]; 
0x000000000044f2da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x000000000048341a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x000000000048341a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; ret; 
0x000000000044f2aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x000000000044f27a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x000000000048c46b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000472bbb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000040ec46: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xcde8; 
0x000000000044a5eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000046090b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x0000000000490bbb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000048944b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004285eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x000000000049aa2b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x80], al; call qword ptr [rax + 0x75]; 
0x000000000041a0fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000041df73: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000447d7b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x000000000049bf2b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x75c08507], cl; or dh, bl; ret; 
0x000000000044fc3b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x42], cl; adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x000000000047089b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x7cb7fbbd], cl; ret; 
0x000000000044a82b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x00000000004443fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000406d4b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; fisttp word ptr [rax - 0x7d]; ret; 
0x0000000000422ccb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], al; ret 0x4101; 
0x000000000042894b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x000000000042724b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x00000000004906db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx], dh; shr bl, 0xcf; nop dword ptr [rax]; call rax; 
0x000000000040615b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000040612b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004089fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x73; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000042e5eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x0000000000447d49: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000482c2c: add byte ptr [rax], al; add byte ptr [rax], al; add rax, 3; ret; 
0x0000000000453749: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e737: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000044c194: add byte ptr [rax], al; add byte ptr [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000042e5dc: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000042e5ec: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x10]; ret; 
0x000000000042e5fc: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x20]; ret; 
0x000000000048f6ac: add byte ptr [rax], al; add byte ptr [rax], al; bts rsi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x0000000000401d5a: add byte ptr [rax], al; add byte ptr [rax], al; call 0x8e70; leave; ret; 
0x0000000000491afc: add byte ptr [rax], al; add byte ptr [rax], al; call qword ptr [rbx]; 
0x0000000000425efe: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048ca3e: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000448d4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000448d5c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000448d6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000448d7c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000448d8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000448cdc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000448cec: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 3]; ret; 
0x0000000000448cfc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000448d0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000448d1c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000448d2c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000448d3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 9]; ret; 
0x000000000044341b: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000401da6: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x000000000044787c: add byte ptr [rax], al; add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, qword ptr [rdx + 1]; ret; 
0x00000000004460cc: add byte ptr [rax], al; add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x0000000000413add: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000044836c: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, qword ptr [rdi]; ret; 
0x0000000000447d3c: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x0000000000447d5c: add byte ptr [rax], al; add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000473e0a: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000473df5: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000413ac8: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000044837c: add byte ptr [rax], al; add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; ret; 
0x000000000041a0fc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000048f69d: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x000000000048f806: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x0000000000447d7c: add byte ptr [rax], al; add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x00000000004389ec: add byte ptr [rax], al; add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000478649: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000041df34: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 8], 0; ret; 
0x0000000000473dff: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000413ad2: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000048e03c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000048e034: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000041e022: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000045094c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000041fe44: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x60], rcx; ret; 
0x0000000000499efc: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000041e03c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041f06b: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rip + 0xadbbe], 0; ret; 
0x000000000045ec1c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f204: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000482c5c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 2; ret; 
0x0000000000482c6c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 3; ret; 
0x0000000000482c7c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 4; ret; 
0x0000000000482c8c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 5; ret; 
0x0000000000482c9c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 6; ret; 
0x0000000000482cac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 7; ret; 
0x0000000000499e6c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x90]; ret; 
0x0000000000499f0c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x0000000000499f6c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x0000000000499f1c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000049aa4c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsi]; add rsp, 8; ret; 
0x000000000048eff5: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x00000000004443fc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000000447dbc: add byte ptr [rax], al; add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x000000000048fe8f: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000043882c: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044ee04: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000042530c: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x000000000041a4fc: add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, rbx; mov edi, 2; mov eax, r9d; syscall; 
0x0000000000447e3c: add byte ptr [rax], al; add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044c14c: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000042b6ac: add byte ptr [rax], al; add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000438b3c: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x0000000000438acc: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044479c: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000042e829: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; bsf eax, eax; lea rax, qword ptr [rax + rdi - 0x10]; ret; 
0x00000000004382c8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000045ea08: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x0000000000432568: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000438458: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004383d8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x000000000044a999: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004820e9: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000000448ccb: add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000448cbb: add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, qword ptr [rdi]; ret; 
0x0000000000447d4a: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000482c4b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x0000000000499f5b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000042eacb: add byte ptr [rax], al; add byte ptr [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x000000000048f785: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000044ced4: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000044c107: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; cmove rax, rdx; ret; 
0x000000000048cdea: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x0000000000491b2c: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000041d5c8: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040919c: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000045fed4: add byte ptr [rax], al; add byte ptr [rax], al; test dil, dil; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000045feb7: add byte ptr [rax], al; add byte ptr [rax], al; test dl, dl; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000042eadc: add byte ptr [rax], al; add byte ptr [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000049aa3c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x00000000004078ec: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004025ec: add byte ptr [rax], al; add byte ptr [rax], al; xor edi, edi; mov eax, edx; syscall; 
0x000000000041a6b4: add byte ptr [rax], al; add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000448afc: add byte ptr [rax], al; add byte ptr [rax], al; xor rax, rax; ret; 
0x0000000000450aa8: add byte ptr [rax], al; add byte ptr [rax], bh; ret 0xe174; 
0x000000000046bd60: add byte ptr [rax], al; add byte ptr [rbp + 0x10], dh; add rsp, 0x38; ret; 
0x000000000048e9bc: add byte ptr [rax], al; add byte ptr [rbp + 0x13], dh; add rsp, 0x38; ret; 
0x000000000044e2a8: add byte ptr [rax], al; add byte ptr [rbp + 0x14], dh; add rsp, 0x28; ret; 
0x0000000000483611: add byte ptr [rax], al; add byte ptr [rbp + 0x1e], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000044cf30: add byte ptr [rax], al; add byte ptr [rbp + 0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000407a63: add byte ptr [rax], al; add byte ptr [rbp + 0x24], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000048fea7: add byte ptr [rax], al; add byte ptr [rbp + 0x24], dh; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000048e8fe: add byte ptr [rax], al; add byte ptr [rbp + 0x28], dh; add rsp, 0x38; ret; 
0x0000000000467717: add byte ptr [rax], al; add byte ptr [rbp + 0x30], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041b24c: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x000000000049609d: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; fisttp dword ptr [rax + 9]; fadd dword ptr [rcx + 0xf]; xchg eax, ebp; ret; 
0x000000000044c2f3: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; shr bl, cl; or eax, 0x441f0f; add byte ptr [rcx - 0x77], cl; ret; 
0x00000000004833b0: add byte ptr [rax], al; add byte ptr [rbp + 0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000483068: add byte ptr [rax], al; add byte ptr [rbp + 0x37], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000470aeb: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000041de23: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000045ebad: add byte ptr [rax], al; add byte ptr [rbp + 0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000044edf7: add byte ptr [rax], al; add byte ptr [rbp + 0x47], dh; add rsp, 0x18; ret; 
0x000000000044ef0f: add byte ptr [rax], al; add byte ptr [rbp + 0x47], dh; add rsp, 0x58; ret; 
0x000000000044efad: add byte ptr [rax], al; add byte ptr [rbp + 0x49], dh; add rsp, 0x58; ret; 
0x0000000000468c4f: add byte ptr [rax], al; add byte ptr [rbp + 0x4d], dh; leave; ret; 
0x000000000041b007: add byte ptr [rax], al; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000048efd9: add byte ptr [rax], al; add byte ptr [rbp + 0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000046bb57: add byte ptr [rax], al; add byte ptr [rbp + 0x51], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000467895: add byte ptr [rax], al; add byte ptr [rbp + 0x5a], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000004677c7: add byte ptr [rax], al; add byte ptr [rbp + 0x5f], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000493b5e: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000000495a13: add byte ptr [rax], al; add byte ptr [rbp + 0xe], dh; add rsp, 0x28; ret; 
0x000000000045e932: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x000000000044f1bb: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x000000000048ed97: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x000000000044ee98: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x58; ret; 
0x000000000042042e: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000048ebab: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000408f27: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x0000000000483550: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x0000000000471164: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x2c], cl; test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000422f05: add byte ptr [rax], al; add byte ptr [rbp - 0x16e78a40], al; ret 0; 
0x000000000045045c: add byte ptr [rax], al; add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x000000000044e569: add byte ptr [rax], al; add byte ptr [rbp - 0x47ef8a40], al; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000424c06: add byte ptr [rax], al; add byte ptr [rbp - 0x7cac8a40], al; sub eax, 0xa809c; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x0000000000470c30: add byte ptr [rax], al; add byte ptr [rbp - 0x7cc68a40], al; sub eax, 0x5c2f2; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x00000000004546f4: add byte ptr [rax], al; add byte ptr [rbp - 0x7cca8a40], al; sub eax, 0x791ae; add dword ptr [rbx + 0x31], ebx; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000045ca25: add byte ptr [rax], al; add byte ptr [rbp - 0x7cdb8140], al; call 0x8485333; pop rbx; ret; 
0x000000000041c0dd: add byte ptr [rax], al; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004708c3: add byte ptr [rax], al; add byte ptr [rbx + 0x44], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000040a957: add byte ptr [rax], al; add byte ptr [rbx + 0x450ffffa], al; ret 0x8589; 
0x00000000004483ad: add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000447d7d: add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x000000000044c108: add byte ptr [rax], al; add byte ptr [rbx + 0x48], bl; cmove eax, edx; ret; 
0x000000000049053f: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000402975: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000041b040: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000049bf2d: add byte ptr [rax], al; add byte ptr [rbx + 0x75c08507], cl; or dh, bl; ret; 
0x0000000000423ba9: add byte ptr [rax], al; add byte ptr [rbx + 0xa6bed2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000043897d: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0156], cl; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000043890d: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0256], cl; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000043889d: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0356], cl; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000044fc3d: add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x42], cl; adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x0000000000475279: add byte ptr [rax], al; add byte ptr [rbx - 0x50743], al; call qword ptr [rax]; 
0x00000000004177b7: add byte ptr [rax], al; add byte ptr [rbx - 0x76b7ffbb], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x000000000047089d: add byte ptr [rax], al; add byte ptr [rbx - 0x7cb7fbbd], cl; ret; 
0x0000000000444701: add byte ptr [rax], al; add byte ptr [rbx - 0x7cf0fb06], al; ret; 
0x00000000004505fd: add byte ptr [rax], al; add byte ptr [rcx + 0x104e23c1], cl; lea rcx, qword ptr [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x00000000004978e0: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; or al, 0x8f; add rcx, r15; jmp rcx; 
0x000000000046b54a: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; ret; 
0x0000000000471a8d: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0000000000486482: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov dh, 0x87; sbb eax, 0x89000003; ret 0xe8c0; 
0x000000000041864d: add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000048c366: add byte ptr [rax], al; add byte ptr [rcx + rax - 0x10], dh; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000044f53b: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x58], cl; adc byte ptr [rax - 0x77], cl; or byte ptr [r9 - 0x75], r9b; or byte ptr [r11 + 0x94901e0], al; ret 0x894d; 
0x00000000004229e0: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x62], cl; sbb byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000049c5f5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x11], cl; call rbx; 
0x00000000004249e5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x11], cl; mov eax, 0xca; syscall; 
0x00000000004246f3: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x19], cl; mov eax, 0xca; syscall; 
0x000000000041add9: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000041a505: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x38], al; syscall; 
0x000000000048fbbd: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x39], cl; call 0x24a70; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000045ec7e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0xe; syscall; 
0x000000000045c372: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; ret; 
0x0000000000417610: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000042457e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000422d06: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000044db90: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x000000000044433d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000407cf5: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0xe], cl; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000425768: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 1], cl; mov eax, 0xca; syscall; 
0x000000000041ba7d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000046d704: add byte ptr [rax], al; add byte ptr [rcx - 0x1177b], cl; ljmp ptr [rcx]; ret; 
0x000000000041c131: add byte ptr [rax], al; add byte ptr [rcx - 0x38b78f89], cl; ret 0xbb60; 
0x000000000046707c: add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret 0xffff; 
0x000000000045ead6: add byte ptr [rax], al; add byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x000000000049302d: add byte ptr [rax], al; add byte ptr [rcx - 0x75], al; or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000473caf: add byte ptr [rax], al; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000044fe7e: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; add byte ptr [r11 + rcx*4 + 0x7d], r9b; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000406d4d: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; fisttp word ptr [rax - 0x7d]; ret; 
0x0000000000492175: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000422ccd: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], al; ret 0x4101; 
0x000000000042894d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x000000000042724d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x0000000000498632: add byte ptr [rax], al; add byte ptr [rcx - 0x80], al; call qword ptr [rax + 0xf]; 
0x000000000042ecb4: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 1; 
0x000000000042ecda: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 2; 
0x00000000004971de: add byte ptr [rax], al; add byte ptr [rcx], bl; sal bh, cl; shl byte ptr [rsi - 0x7f], cl; ret 0x7fff; 
0x0000000000426067: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000423645: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rdx + 0x5d], 0x41; pop rsp; ret; 
0x000000000042e59a: add byte ptr [rax], al; add byte ptr [rcx], dh; rol bl, 0x83; ret 0x6620; 
0x000000000042294e: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x73], 0x3c; ret; 
0x0000000000407a41: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 - 0x32], cl; mov edi, 2; mov eax, 0xe; syscall; 
0x00000000004906dd: add byte ptr [rax], al; add byte ptr [rcx], dh; shr bl, 0xcf; nop dword ptr [rax]; call rax; 
0x000000000044bf34: add byte ptr [rax], al; add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000044bed4: add byte ptr [rax], al; add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000499c3a: add byte ptr [rax], al; add byte ptr [rdi + 1], bh; call rax; 
0x000000000041c538: add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x0000000000456e1c: add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x4a], al; add byte ptr [rax - 0x77], cl; ret 0x8445; 
0x0000000000407a22: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000402678: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xfffce6e9; dec dword ptr [rbx + 0xca6f815]; add dh, dh; ret 0x7404; 
0x0000000000425770: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi + 0xf]; 
0x00000000004237a0: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi + 0xf]; 
0x000000000041ce4a: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000420e78: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000437a84: add byte ptr [rax], al; add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x0000000000438acd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x000000000044479d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000438b3d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000040615d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000406d05: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000040612d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004089fd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x73; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000044c14d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x0000000000498c56: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [rbp + rdx*4]; add rdx, rbp; jmp rdx; 
0x000000000042b6ad: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000042e5fd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000042e5ed: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000042e5dd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0xf80148c0; ret; 
0x000000000045eca5: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], ebx; add esp, 0x98; ret; 
0x000000000048ea94: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rdx + 0x48000000], ecx; add esp, 0x48; ret; 
0x000000000041c176: add byte ptr [rax], al; add byte ptr [rdx + 1], bh; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000499e55: add byte ptr [rax], al; add byte ptr [rdx + rbp*8 + 0x48], dh; add esp, 8; ret; 
0x000000000045feb8: add byte ptr [rax], al; add byte ptr [rdx + rdx*8 + 0x48c1450f], al; add esp, 8; ret; 
0x00000000004025e3: add byte ptr [rax], al; add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000000499eb5: add byte ptr [rax], al; add byte ptr [rsi + 0x48], dh; mov dword ptr [rdi + rsi*8], edx; add rsp, 8; ret; 
0x000000000041f8fb: add byte ptr [rax], al; add byte ptr [rsi + 0x80], bh; mov eax, 0xca; syscall; 
0x0000000000470c82: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f6: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec62: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f81a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f755: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5b8: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4e9: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454742: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x000000000045462e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x000000000045450e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d356: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e16: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x000000000042414e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424116: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c3e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c06: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac6: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423622: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c72: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x000000000042430a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d6e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf8: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab6: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420592: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f048: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f048: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb48: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e4: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e49a: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d4: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d134: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde0: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde0: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x0000000000417886: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e5: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084ae: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408473: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040838f: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d3: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de0: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df7: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dce: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca3: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040120f: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x000000000040137e: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; 
0x0000000000470dec: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; ret; 
0x00000000004242df: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, ebx; syscall; 
0x00000000004246ee: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249e0: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425763: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a4: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fbf: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000042f794: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042e502: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x000000000041fa5a: add byte ptr [rax], al; add byte ptr [rsi + 1], dh; ret; 
0x000000000044786b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, qword ptr [rdx]; ret; 
0x0000000000447d4b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004484cb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x00000000004460cd: add byte ptr [rax], al; add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000047858d: add byte ptr [rax], al; add byte ptr [rsi - 1], bh; call qword ptr [rax + 0x18]; 
0x000000000040ba1e: add byte ptr [rax], al; add cl, ch; rcr cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000498140: add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x00000000004963b6: add byte ptr [rax], al; add cl, ch; ret 0xfff8; 
0x0000000000458cd5: add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000401da7: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000041f92a: add byte ptr [rax], al; add dh, byte ptr [rsi + 1]; ret; 
0x000000000045170a: add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000449f81: add byte ptr [rax], al; add dh, dh; ret 0x7501; 
0x000000000046ff2d: add byte ptr [rax], al; add dh, dh; ret 0xf08; 
0x000000000040208d: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xcaca415], cl; add dh, dh; ret 0x7408; 
0x00000000004988c8: add byte ptr [rax], al; add dword ptr [rbp + 1], ecx; ror dword ptr [rdi], -0x4a; add dword ptr [r8 - 0x7d], ecx; ret; 
0x0000000000482c2e: add byte ptr [rax], al; add rax, 3; ret; 
0x000000000042e3b3: add byte ptr [rax], al; add rax, rdi; add rax, rcx; ret; 
0x0000000000444210: add byte ptr [rax], al; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042e8f0: add byte ptr [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000004976e8: add byte ptr [rax], al; add rsp, 0x10; mov eax, 2; pop rbx; ret; 
0x0000000000499e07: add byte ptr [rax], al; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000419504: add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041d007: add byte ptr [rax], al; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x0000000000419dd1: add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000048ea9b: add byte ptr [rax], al; add rsp, 0x48; ret; 
0x000000000044e409: add byte ptr [rax], al; add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000045ecac: add byte ptr [rax], al; add rsp, 0x98; ret; 
0x0000000000477487: add byte ptr [rax], al; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000041b03a: add byte ptr [rax], al; add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000045c36c: add byte ptr [rax], al; add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004198c9: add byte ptr [rax], al; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x00000000004776f4: add byte ptr [rax], al; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x0000000000490125: add byte ptr [rax], al; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000044d2d0: add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e739: add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000423a94: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000004020e6: add byte ptr [rax], al; and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x000000000044c196: add byte ptr [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000004301d1: add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000430aa3: add byte ptr [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000004301d6: add byte ptr [rax], al; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000042e5de: add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000042e5ee: add byte ptr [rax], al; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x10]; ret; 
0x000000000042e5fe: add byte ptr [rax], al; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x20]; ret; 
0x0000000000443e70: add byte ptr [rax], al; bsf rax, rdx; ret; 
0x000000000044d814: add byte ptr [rax], al; bsf rax, rdx; shr rax, 2; ret; 
0x00000000004284ce: add byte ptr [rax], al; bsf rdx, rdx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000481c88: add byte ptr [rax], al; bsr rax, rax; add rax, rdi; ret; 
0x0000000000481d22: add byte ptr [rax], al; bsr rsi, rsi; lea rax, qword ptr [rdi + rsi]; ret; 
0x000000000048f6ae: add byte ptr [rax], al; bts rsi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x0000000000478557: add byte ptr [rax], al; call 0x78010; mov eax, 1; pop rbp; ret; 
0x0000000000401d5c: add byte ptr [rax], al; call 0x8e70; leave; ret; 
0x00000000004784f6: add byte ptr [rax], al; call qword ptr [rax + 0x68]; 
0x0000000000491afe: add byte ptr [rax], al; call qword ptr [rbx]; 
0x0000000000408327: add byte ptr [rax], al; call rax; 
0x0000000000408309: add byte ptr [rax], al; call rdx; 
0x0000000000493d3b: add byte ptr [rax], al; cmove edx, eax; call 0x86410; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000044c142: add byte ptr [rax], al; cmove rax, rcx; ret; 
0x0000000000426c1e: add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000041fa6e: add byte ptr [rax], al; cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x000000000042611e: add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000425f00: add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048ca40: add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000041efc6: add byte ptr [rax], al; cmpxchg dword ptr [rip + 0xadc61], edx; mov qword ptr [rip + 0xadc62], rbx; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x000000000041467f: add byte ptr [rax], al; jmp rax; 
0x0000000000488800: add byte ptr [rax], al; lea rax, qword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887ce: add byte ptr [rax], al; lea rax, qword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000448d4e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000448d5e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000448d6e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000448d7e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000448d8e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000448cad: add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xf]; ret; 
0x0000000000448cde: add byte ptr [rax], al; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000448cee: add byte ptr [rax], al; lea rax, qword ptr [rdi + 3]; ret; 
0x0000000000448cfe: add byte ptr [rax], al; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000448d0e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000448d1e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000448c5a: add byte ptr [rax], al; lea rax, qword ptr [rdi + 7]; ret; 
0x0000000000448d2e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000448d3e: add byte ptr [rax], al; lea rax, qword ptr [rdi + 9]; ret; 
0x000000000044341d: add byte ptr [rax], al; lea rax, qword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x00000000004821b7: add byte ptr [rax], al; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x00000000004900d0: add byte ptr [rax], al; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000427057: add byte ptr [rax], al; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c17: add byte ptr [rax], al; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000482177: add byte ptr [rax], al; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x0000000000478e27: add byte ptr [rax], al; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x000000000042cf8d: add byte ptr [rax], al; lea rcx, qword ptr [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000041a803: add byte ptr [rax], al; lea rcx, qword ptr [rip + 0xb14d4]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000470c8d: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x0000000000470a01: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec6d: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f825: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f760: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5c3: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4f4: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x000000000045474d: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454639: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454519: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d361: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e21: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424159: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424121: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c49: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c49: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; pop rbp; ret; 
0x0000000000423c11: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ad1: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x000000000042362d: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c7d: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424315: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000424315: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xa8982]; syscall; pop rbx; ret; 
0x0000000000420d79: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420d03: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ac1: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x000000000042059d: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f053: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f053: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb53: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7ef: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e4a5: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3df: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d13f: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cdeb: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cdeb: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x0000000000417891: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086f0: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084b9: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x000000000040847e: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040839a: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065de: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404deb: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403e02: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dd9: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403cae: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040121a: add byte ptr [rax], al; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000426d06: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x0000000000426c68: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x0000000000426117: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x0000000000478efa: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000426461: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x000000000044ce77: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000426fd6: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e66: add byte ptr [rax], al; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000493285: add byte ptr [rax], al; lea rsi, qword ptr [rip + 0x3a5f2]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000000401d61: add byte ptr [rax], al; leave; ret; 
0x000000000044787e: add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, qword ptr [rdx + 1]; ret; 
0x00000000004460ce: add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x0000000000413adf: add byte ptr [rax], al; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000044836e: add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, qword ptr [rdi]; ret; 
0x0000000000447d3e: add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x000000000044838e: add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000447d5e: add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x000000000041418b: add byte ptr [rax], al; mov dword ptr [rbp - 0x4f0], r9d; mov rdx, r15; mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000473e0c: add byte ptr [rax], al; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000474fc4: add byte ptr [rax], al; mov dword ptr [rbp - 0x500], 0x20; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000413eb0: add byte ptr [rax], al; mov dword ptr [rbp - 0x500], r9d; mov rdx, rbx; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000473ded: add byte ptr [rax], al; mov dword ptr [rbp - 0x510], 0; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000413ac0: add byte ptr [rax], al; mov dword ptr [rbp - 0x51c], 0; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000473df7: add byte ptr [rax], al; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000413aca: add byte ptr [rax], al; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000041bfdc: add byte ptr [rax], al; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x000000000048f790: add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000041f95f: add byte ptr [rax], al; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x0000000000438a5e: add byte ptr [rax], al; mov dx, word ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x000000000044837e: add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000425e8e: add byte ptr [rax], al; mov eax, 0x16; pop rbx; ret; 
0x000000000044ee0e: add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x0000000000493487: add byte ptr [rax], al; mov eax, 0x9e; sete sil; add esi, esi; syscall; 
0x0000000000402356: add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x0000000000470c88: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709fc: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec68: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f820: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f75b: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5be: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4ef: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454748: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454634: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454514: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d35c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e1c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424154: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x000000000042411c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c44: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c44: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; pop rbp; ret; 
0x0000000000423c0c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423acc: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423628: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c78: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424310: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000424310: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; pop rbx; ret; 
0x0000000000420d74: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cfe: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420abc: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420598: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f04e: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f04e: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb4e: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7ea: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e4a0: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3da: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d13a: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde6: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde6: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x000000000041788c: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086eb: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084b4: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408479: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408395: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d9: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de6: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403dfd: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dd4: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca9: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x0000000000401215: add byte ptr [rax], al; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000401384: add byte ptr [rax], al; mov eax, 0xca; syscall; 
0x0000000000470df2: add byte ptr [rax], al; mov eax, 0xca; syscall; ret; 
0x0000000000478d8b: add byte ptr [rax], al; mov eax, 0xca; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000045eadd: add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x0000000000407a4c: add byte ptr [rax], al; mov eax, 0xe; syscall; 
0x000000000045f61c: add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x000000000041941e: add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000041a0fe: add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000048f69f: add byte ptr [rax], al; mov eax, 1; ret; 
0x000000000049a78e: add byte ptr [rax], al; mov eax, 2; add rsp, 8; ret; 
0x000000000048f808: add byte ptr [rax], al; mov eax, 2; ret; 
0x000000000049a77e: add byte ptr [rax], al; mov eax, 4; add rsp, 8; ret; 
0x00000000004242e5: add byte ptr [rax], al; mov eax, ebx; syscall; 
0x000000000044c116: add byte ptr [rax], al; mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000000407a17: add byte ptr [rax], al; mov eax, ecx; syscall; 
0x000000000048efe3: add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000041776a: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000045c373: add byte ptr [rax], al; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000417611: add byte ptr [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041a506: add byte ptr [rax], al; mov eax, r9d; syscall; 
0x00000000004483ae: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000447d7e: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000447d8e: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x00000000004505fe: add byte ptr [rax], al; mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, qword ptr [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000499c3b: add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000044dd3e: add byte ptr [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x000000000041c177: add byte ptr [rax], al; mov edx, 1; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x000000000043897e: add byte ptr [rax], al; mov edx, dword ptr [rsi + 1]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000043890e: add byte ptr [rax], al; mov edx, dword ptr [rsi + 2]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000043889e: add byte ptr [rax], al; mov edx, dword ptr [rsi + 3]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004389ee: add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000041f8fc: add byte ptr [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000478d9a: add byte ptr [rax], al; mov esi, 0x80; syscall; 
0x0000000000470c83: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f7: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec63: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f81b: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f756: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5b9: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4ea: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454743: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x000000000045462f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x000000000045450f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d357: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e17: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x000000000042414f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424117: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c3f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c07: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac7: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423623: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c73: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x000000000042430b: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d6f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf9: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab7: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420593: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f049: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f049: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb49: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e5: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e49b: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d5: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d135: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde1: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde1: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x0000000000417887: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e6: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084af: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408474: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408390: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d4: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de1: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df8: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dcf: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca4: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x0000000000401210: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x000000000040137f: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470ded: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004242e0: add byte ptr [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004246ef: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249e1: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425764: add byte ptr [rax], al; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a5: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fc0: add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000047858e: add byte ptr [rax], al; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x00000000004082fa: add byte ptr [rax], al; mov esi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000047864b: add byte ptr [rax], al; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000041df36: add byte ptr [rax], al; mov qword ptr [rax + 8], 0; ret; 
0x000000000048fe98: add byte ptr [rax], al; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000473e01: add byte ptr [rax], al; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x00000000004749d0: add byte ptr [rax], al; mov qword ptr [rbp - 0x4e0], rcx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000413ad4: add byte ptr [rax], al; mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x000000000048e03e: add byte ptr [rax], al; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000048e8a4: add byte ptr [rax], al; mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000493ad6: add byte ptr [rax], al; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x0000000000493b9a: add byte ptr [rax], al; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000041d5c2: add byte ptr [rax], al; mov qword ptr [rbx + 0x50], 0; pop rbx; ret; 
0x000000000048e036: add byte ptr [rax], al; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000041af6c: add byte ptr [rax], al; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x0000000000453744: add byte ptr [rax], al; mov qword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041e024: add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000499ec6: add byte ptr [rax], al; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x000000000045094e: add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000048880a: add byte ptr [rax], al; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887d8: add byte ptr [rax], al; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000041fe46: add byte ptr [rax], al; mov qword ptr [rdi + 0x60], rcx; ret; 
0x0000000000499efe: add byte ptr [rax], al; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000041e03e: add byte ptr [rax], al; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041e02b: add byte ptr [rax], al; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000048f6b8: add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x0000000000417bf8: add byte ptr [rax], al; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000420ed3: add byte ptr [rax], al; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420ec5: add byte ptr [rax], al; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041f9af: add byte ptr [rax], al; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f97f: add byte ptr [rax], al; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f06d: add byte ptr [rax], al; mov qword ptr [rip + 0xadbbe], 0; ret; 
0x0000000000402b98: add byte ptr [rax], al; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x00000000004225ce: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], r10; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048b625: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x8af50; add rsp, 0xd8; ret; 
0x0000000000483587: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000045e8dd: add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045ead7: add byte ptr [rax], al; mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000043254e: add byte ptr [rax], al; mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044e30e: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f206: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000483686: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000422cf6: add byte ptr [rax], al; mov rax, -0x40; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000044f214: add byte ptr [rax], al; mov rax, -1; ret; 
0x0000000000482c5e: add byte ptr [rax], al; mov rax, 2; ret; 
0x0000000000482c6e: add byte ptr [rax], al; mov rax, 3; ret; 
0x0000000000482c7e: add byte ptr [rax], al; mov rax, 4; ret; 
0x0000000000482c8e: add byte ptr [rax], al; mov rax, 5; ret; 
0x0000000000482c9e: add byte ptr [rax], al; mov rax, 6; ret; 
0x0000000000482cae: add byte ptr [rax], al; mov rax, 7; ret; 
0x0000000000408316: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000419412: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000048fe2e: add byte ptr [rax], al; mov rax, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000425816: add byte ptr [rax], al; mov rax, qword ptr [rcx + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000499e6e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x90]; ret; 
0x0000000000499f0e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x0000000000499f6e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x0000000000499f1e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000049aa4e: add byte ptr [rax], al; mov rax, qword ptr [rsi]; add rsp, 8; ret; 
0x000000000048eff7: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000407b63: add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000042457f: add byte ptr [rax], al; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000422d07: add byte ptr [rax], al; mov rax, r8; ret; 
0x000000000044db91: add byte ptr [rax], al; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x000000000044433e: add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000000406bb5: add byte ptr [rax], al; mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x000000000041bc7b: add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000041c0b6: add byte ptr [rax], al; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000049a07b: add byte ptr [rax], al; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000048cbb0: add byte ptr [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000043290e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432aee: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cce: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ebe: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330be: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332be: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043272e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004483fe: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000447dbe: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000447dce: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000044af43: add byte ptr [rax], al; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000049a5ab: add byte ptr [rax], al; mov rdi, qword ptr [rdx + 8]; sbb ecx, ecx; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x000000000045ee22: add byte ptr [rax], al; mov rdi, qword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000004246f4: add byte ptr [rax], al; mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000049c5f6: add byte ptr [rax], al; mov rdi, r13; call rbx; 
0x00000000004249e6: add byte ptr [rax], al; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425769: add byte ptr [rax], al; mov rdi, r15; mov eax, 0xca; syscall; 
0x000000000048fbbe: add byte ptr [rax], al; mov rdi, r8; call 0x24a70; mov qword ptr [rbx], 0; pop rbx; ret; 
0x00000000004218aa: add byte ptr [rax], al; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000419407: add byte ptr [rax], al; mov rdi, rbp; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000041c17c: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000417057: add byte ptr [rax], al; mov rdi, rbx; call rax; 
0x0000000000424fc5: add byte ptr [rax], al; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000044e2f6: add byte ptr [rax], al; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e52e: add byte ptr [rax], al; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000041aaee: add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000048fe91: add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000417bf1: add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004025a7: add byte ptr [rax], al; mov rdx, qword ptr [rip + 0xca738]; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004387be: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043874e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004386de: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004385fe: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043858e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043851e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043882e: add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000412355: add byte ptr [rax], al; mov rdx, r12; mov rsi, r9; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000412667: add byte ptr [rax], al; mov rdx, r12; mov rsi, r9; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000494dae: add byte ptr [rax], al; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000411dad: add byte ptr [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000407cf6: add byte ptr [rax], al; mov rdx, r14; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000041ba7e: add byte ptr [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000049c5ee: add byte ptr [rax], al; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000045ee4e: add byte ptr [rax], al; mov rdx, rbp; mov rsi, r12; mov rdi, r14; call rbx; 
0x000000000041201e: add byte ptr [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000475348: add byte ptr [rax], al; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000044ee06: add byte ptr [rax], al; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000407bcb: add byte ptr [rax], al; mov rsi, qword ptr [r13]; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000411b92: add byte ptr [rax], al; mov rsi, qword ptr [r15 + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000418629: add byte ptr [rax], al; mov rsi, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000042458e: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000042530e: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x000000000045ec7f: add byte ptr [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000041a4fe: add byte ptr [rax], al; mov rsi, rbx; mov edi, 2; mov eax, r9d; syscall; 
0x0000000000447f8e: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000447e3e: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044bbda: add byte ptr [rax], al; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004978e1: add byte ptr [rax], al; movsxd rcx, dword ptr [r15 + rcx*4]; add rcx, r15; jmp rcx; 
0x000000000044ae59: add byte ptr [rax], al; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000049854d: add byte ptr [rax], al; movzx eax, al; movsxd rax, dword ptr [r11 + rax*4]; add rax, r11; jmp rax; 
0x000000000042dffb: add byte ptr [rax], al; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000042e035: add byte ptr [rax], al; movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000049a9ae: add byte ptr [rax], al; movzx eax, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041d716: add byte ptr [rax], al; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000475054: add byte ptr [rax], al; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474fce: add byte ptr [rax], al; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000042de68: add byte ptr [rax], al; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000044a01e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000044a00e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x0000000000449ffe: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000449fee: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000449fde: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000449fce: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000043033e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x00000000004300f1: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000042f21e: add byte ptr [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000474f70: add byte ptr [rax], al; movzx eax, byte ptr [rsi + rax]; lea rsi, qword ptr [rip + 0x52e63]; mov rax, qword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x000000000047404b: add byte ptr [rax], al; movzx eax, byte ptr [rsi + rax]; lea rsi, qword ptr [rip + 0x53d88]; mov rax, qword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x000000000049d02e: add byte ptr [rax], al; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000044c14e: add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000042b6ae: add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000042e1fe: add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x00000000004447ae: add byte ptr [rax], al; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000438b3e: add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x0000000000498c57: add byte ptr [rax], al; movzx edx, dl; movsxd rdx, dword ptr [rbp + rdx*4]; add rdx, rbp; jmp rdx; 
0x00000000004489be: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; vzeroupper; ret; 
0x0000000000438ace: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044479e: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000042e82b: add byte ptr [rax], al; nop dword ptr [rax]; bsf eax, eax; lea rax, qword ptr [rax + rdi - 0x10]; ret; 
0x00000000004460bb: add byte ptr [rax], al; nop dword ptr [rax]; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x00000000004478aa: add byte ptr [rax], al; nop dword ptr [rax]; mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, qword ptr [rdx + 3]; ret; 
0x00000000004382ca: add byte ptr [rax], al; nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000045ea0a: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x00000000004477fb: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, qword ptr [rdx + 7]; ret; 
0x000000000044604b: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000043256a: add byte ptr [rax], al; nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000041a4f7: add byte ptr [rax], al; nop dword ptr [rax]; mov rsi, rbx; mov edi, 2; mov eax, r9d; syscall; 
0x0000000000449fbb: add byte ptr [rax], al; nop dword ptr [rax]; movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x00000000004284eb: add byte ptr [rax], al; nop dword ptr [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000043845a: add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004383da: add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000443bcb: add byte ptr [rax], al; nop dword ptr [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000044a99b: add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004820eb: add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000004025e4: add byte ptr [rax], al; nop word ptr cs:[rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000000448ccd: add byte ptr [rax], al; nop; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000448cbd: add byte ptr [rax], al; nop; lea rax, qword ptr [rdi]; ret; 
0x000000000044786c: add byte ptr [rax], al; nop; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, qword ptr [rdx]; ret; 
0x0000000000447d4c: add byte ptr [rax], al; nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000482c4d: add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x0000000000499f5d: add byte ptr [rax], al; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x00000000004484cc: add byte ptr [rax], al; nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x000000000045dcac: add byte ptr [rax], al; nop; ret; 
0x000000000042eacd: add byte ptr [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x000000000048f787: add byte ptr [rax], al; or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000041af7e: add byte ptr [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000042e529: add byte ptr [rax], al; pmovmskb eax, xmm1; bsf eax, eax; lea rax, qword ptr [rdi + rax + 0x30]; ret; 
0x00000000004247ef: add byte ptr [rax], al; pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x0000000000470aec: add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x000000000041de24: add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000044ced6: add byte ptr [rax], al; pop rbp; ret; 
0x000000000044c109: add byte ptr [rax], al; pop rbx; cmove rax, rdx; ret; 
0x000000000041de3e: add byte ptr [rax], al; pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x00000000004708c4: add byte ptr [rax], al; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004244c2: add byte ptr [rax], al; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000048cdec: add byte ptr [rax], al; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x0000000000490540: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402976: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000041b041: add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000401f79: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041c0de: add byte ptr [rax], al; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000407a70: add byte ptr [rax], al; ret; 
0x000000000049348c: add byte ptr [rax], al; sete sil; add esi, esi; syscall; 
0x00000000004236dd: add byte ptr [rax], al; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000499ee5: add byte ptr [rax], al; shr rax, 0x3f; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000423baa: add byte ptr [rax], al; sub dword ptr [rip + 0xa6bed], 1; pop rbp; ret; 
0x00000000004301dc: add byte ptr [rax], al; sub eax, ecx; ret; 
0x000000000041ec76: add byte ptr [rax], al; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000041e226: add byte ptr [rax], al; sub rax, rcx; sub eax, 1; ret; 
0x000000000044aa51: add byte ptr [rax], al; sub rax, rdx; ret; 
0x0000000000478b36: add byte ptr [rax], al; sub rcx, rax; sar rcx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x0000000000495790: add byte ptr [rax], al; sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x0000000000455526: add byte ptr [rax], al; sub rsp, 8; call 0x55060; or dword ptr [rip + 0x778a4], 2; add rsp, 8; ret; 
0x0000000000401389: add byte ptr [rax], al; syscall; 
0x0000000000470df7: add byte ptr [rax], al; syscall; ret; 
0x000000000045fed6: add byte ptr [rax], al; test dil, dil; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000045feb9: add byte ptr [rax], al; test dl, dl; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000045045d: add byte ptr [rax], al; test eax, eax; cmove eax, edx; ret; 
0x0000000000426dbe: add byte ptr [rax], al; test eax, eax; lea rdx, qword ptr [rip + 0x24e57]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x000000000042eaee: add byte ptr [rax], al; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000042eade: add byte ptr [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000049a79e: add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x0000000000426068: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000049a088: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000425113: add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000000423646: add byte ptr [rax], al; xor eax, eax; pop rdx; pop rbp; pop r12; ret; 
0x00000000004078ee: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042e1ee: add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x00000000004025ee: add byte ptr [rax], al; xor edi, edi; mov eax, edx; syscall; 
0x000000000044f234: add byte ptr [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000044f06e: add byte ptr [rax], al; xor edi, edi; syscall; 
0x0000000000407a42: add byte ptr [rax], al; xor edx, edx; mov rsi, r9; mov edi, 2; mov eax, 0xe; syscall; 
0x0000000000474470: add byte ptr [rax], al; xor edx, edx; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53961]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x00000000004176d7: add byte ptr [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x0000000000478d90: add byte ptr [rax], al; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000041a6b6: add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000448afe: add byte ptr [rax], al; xor rax, rax; ret; 
0x0000000000401d58: add byte ptr [rax], bh; call 0x8e70; leave; ret; 
0x0000000000450aaa: add byte ptr [rax], bh; ret 0xe174; 
0x000000000044ce70: add byte ptr [rax], cl; lea rax, qword ptr [rip + 0xb17]; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x00000000004982be: add byte ptr [rax], cl; mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982b7: add byte ptr [rax], cl; mov byte ptr [rip + 0x34e4f], 8; mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982b0: add byte ptr [rax], cl; mov byte ptr [rip + 0x34e55], 8; mov byte ptr [rip + 0x34e4f], 8; mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982a9: add byte ptr [rax], cl; mov byte ptr [rip + 0x34e5b], 8; mov byte ptr [rip + 0x34e55], 8; mov byte ptr [rip + 0x34e4f], 8; mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982c5: add byte ptr [rax], cl; ret; 
0x00000000004900c9: add byte ptr [rax], dl; lea rdx, qword ptr [rip + 0x11e]; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000426199: add byte ptr [rax], dl; lea rdx, qword ptr [rip + 0x248be]; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426bd9: add byte ptr [rax], dl; lea rdx, qword ptr [rip - 0x2f2]; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x000000000044c2f2: add byte ptr [rax], r8b; add byte ptr [rbp + 0x31], al; shr bl, cl; or eax, 0x441f0f; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000477715: add byte ptr [rax], r8b; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x00000000004536d5: add byte ptr [rax], r8b; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004214f5: add byte ptr [rax], r8b; call rax; 
0x000000000044838d: add byte ptr [rax], r8b; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000425e8d: add byte ptr [rax], r8b; mov eax, 0x16; pop rbx; ret; 
0x000000000041941d: add byte ptr [rax], r8b; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000041f0d5: add byte ptr [rax], r8b; mov eax, 0xffffffff; ret; 
0x000000000049a78d: add byte ptr [rax], r8b; mov eax, 2; add rsp, 8; ret; 
0x000000000049a77d: add byte ptr [rax], r8b; mov eax, 4; add rsp, 8; ret; 
0x000000000044dd3d: add byte ptr [rax], r8b; mov edi, edx; mov eax, esi; syscall; 
0x0000000000447d6d: add byte ptr [rax], r8b; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000499ec5: add byte ptr [rax], r8b; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x00000000004225cd: add byte ptr [rax], r8b; mov qword ptr [rsp + 0x18], r10; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000044e30d: add byte ptr [rax], r8b; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000000483685: add byte ptr [rax], r8b; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000408315: add byte ptr [rax], r8b; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000044dc4d: add byte ptr [rax], r8b; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x00000000004483fd: add byte ptr [rax], r8b; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000447dcd: add byte ptr [rax], r8b; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000044e2f5: add byte ptr [rax], r8b; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e52d: add byte ptr [rax], r8b; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000447dad: add byte ptr [rax], r8b; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000494dad: add byte ptr [rax], r8b; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000049c5ed: add byte ptr [rax], r8b; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000045ee4d: add byte ptr [rax], r8b; mov rdx, rbp; mov rsi, r12; mov rdi, r14; call rbx; 
0x000000000049a9ad: add byte ptr [rax], r8b; movzx eax, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000044a01d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000044a00d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x0000000000449ffd: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000449fed: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000449fdd: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000449fcd: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000042f21d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000004447ad: add byte ptr [rax], r8b; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000041af7d: add byte ptr [rax], r8b; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000492c25: add byte ptr [rax], r8b; pop rbp; ret; 
0x000000000042423d: add byte ptr [rax], r8b; ret; 
0x000000000041ec75: add byte ptr [rax], r8b; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000041e225: add byte ptr [rax], r8b; sub rax, rcx; sub eax, 1; ret; 
0x0000000000478b35: add byte ptr [rax], r8b; sub rcx, rax; sar rcx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x0000000000455525: add byte ptr [rax], r8b; sub rsp, 8; call 0x55060; or dword ptr [rip + 0x778a4], 2; add rsp, 8; ret; 
0x000000000042eaed: add byte ptr [rax], r8b; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000049a79d: add byte ptr [rax], r8b; xor eax, eax; add rsp, 8; ret; 
0x000000000044c0c5: add byte ptr [rax], r8b; xor eax, eax; pop rbx; ret; 
0x000000000044a4fd: add byte ptr [rax], r8b; xor eax, eax; ret; 
0x000000000042e1ed: add byte ptr [rax], r8b; xor eax, eax; vzeroupper; ret; 
0x000000000046bd62: add byte ptr [rbp + 0x10], dh; add rsp, 0x38; ret; 
0x000000000048e9be: add byte ptr [rbp + 0x13], dh; add rsp, 0x38; ret; 
0x000000000048c52a: add byte ptr [rbp + 0x13], dh; mov r8, qword ptr [rip + 0x40ddc]; mov rax, r8; ret; 
0x000000000044e2aa: add byte ptr [rbp + 0x14], dh; add rsp, 0x28; ret; 
0x0000000000426dbf: add byte ptr [rbp + 0x158d48c0], al; push rdi; add r8b, byte ptr [rax]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426c5d: add byte ptr [rbp + 0x15], dh; and dh, 2; lea rax, qword ptr [rip + 0x8026]; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x0000000000483613: add byte ptr [rbp + 0x1e], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000045feee: add byte ptr [rbp + 0x1e], dh; xor eax, eax; add rsp, 8; ret; 
0x000000000044cf32: add byte ptr [rbp + 0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000418b02: add byte ptr [rbp + 0x21], dh; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407a65: add byte ptr [rbp + 0x24], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000048fea9: add byte ptr [rbp + 0x24], dh; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000048e900: add byte ptr [rbp + 0x28], dh; add rsp, 0x38; ret; 
0x0000000000467719: add byte ptr [rbp + 0x30], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041b24e: add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x0000000000469b58: add byte ptr [rbp + 0x31], al; dec dword ptr [rbp + 0x29]; ret; 
0x0000000000495db6: add byte ptr [rbp + 0x31], al; fisttp dword ptr [rax + 9]; fadd dword ptr [rcx + 0xf]; xchg eax, ebp; ret; 
0x000000000042053f: add byte ptr [rbp + 0x31], al; in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000478ea3: add byte ptr [rbp + 0x31], al; in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000494fd9: add byte ptr [rbp + 0x31], al; jmp qword ptr [rsi - 0x7d]; 
0x000000000042484f: add byte ptr [rbp + 0x31], al; rcr byte ptr [rbp + 0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x000000000042455f: add byte ptr [rbp + 0x31], al; rcr byte ptr [rbx + 0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000000044d67e: add byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x75], 0x4c; and al, 0x20; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000044d4fc: add byte ptr [rbp + 0x31], al; ror byte ptr [rax - 0x75], 0x74; and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000044c2f5: add byte ptr [rbp + 0x31], al; shr bl, cl; or eax, 0x441f0f; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000045c499: add byte ptr [rbp + 0x31], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x00000000004833b2: add byte ptr [rbp + 0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000048306a: add byte ptr [rbp + 0x37], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000041fc41: add byte ptr [rbp + 0x39], cl; ret 0xd977; 
0x000000000042485f: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; jmp rax; 
0x0000000000470aed: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000041de25: add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000045ebaf: add byte ptr [rbp + 0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000044e3d4: add byte ptr [rbp + 0x446775c0], al; mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044edf9: add byte ptr [rbp + 0x47], dh; add rsp, 0x18; ret; 
0x000000000044ef11: add byte ptr [rbp + 0x47], dh; add rsp, 0x58; ret; 
0x00000000004906c8: add byte ptr [rbp + 0x480375d2], al; mov dword ptr [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000451bdb: add byte ptr [rbp + 0x488d48d2], al; or dword ptr [rax + 0xf], ecx; ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000044f130: add byte ptr [rbp + 0x48b178c0], al; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000044efaf: add byte ptr [rbp + 0x49], dh; add rsp, 0x58; ret; 
0x00000000004247f0: add byte ptr [rbp + 0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000000468c51: add byte ptr [rbp + 0x4d], dh; leave; ret; 
0x0000000000417cb0: add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000048efdb: add byte ptr [rbp + 0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000046bb59: add byte ptr [rbp + 0x51], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000000417609: add byte ptr [rbp + 0x59], dh; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000467897: add byte ptr [rbp + 0x5a], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000004677c9: add byte ptr [rbp + 0x5f], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000044ca76: add byte ptr [rbp + 0x67], dh; add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000000423ba3: add byte ptr [rbp + 0x7c850fc0], al; add byte ptr [rax], al; add byte ptr [rbx + 0xa6bed2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000493b60: add byte ptr [rbp + 0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000000490d65: add byte ptr [rbp + 0xb], dh; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000048c431: add byte ptr [rbp + 0xc], dh; lea rax, qword ptr [r8 + 1]; mov qword ptr [rip + 0x40ed1], rax; ret; 
0x0000000000495a15: add byte ptr [rbp + 0xe], dh; add rsp, 0x28; ret; 
0x0000000000467bbf: add byte ptr [rbp + 0xf], cl; lodsd eax, dword ptr [rsi]; ret; 
0x0000000000467aaf: add byte ptr [rbp + 0xf], cl; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000041ec66: add byte ptr [rbp + 0xf], dh; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000045ee67: add byte ptr [rbp + 1], cl; out dx, eax; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x000000000045e934: add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x000000000044f1bd: add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x000000000048ed99: add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x000000000044ee9a: add byte ptr [rbp + 5], dh; add rsp, 0x58; ret; 
0x0000000000420430: add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000048ebad: add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000408f29: add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x0000000000483552: add byte ptr [rbp + 8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x000000000048f099: add byte ptr [rbp + 9], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000044ef90: add byte ptr [rbp + rbp - 0x48], dh; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000471166: add byte ptr [rbp + rcx*4 + 0x2c], cl; test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x00000000004230f4: add byte ptr [rbp + rcx*4 + 0x46], cl; adc byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x000000000046fe8e: add byte ptr [rbp + rcx*4 + 0x47], cl; add al, 0x83; ret 0x4c02; 
0x0000000000422f07: add byte ptr [rbp - 0x16e78a40], al; ret 0; 
0x0000000000458328: add byte ptr [rbp - 0x177f02e], al; add dword ptr [rax], eax; add bh, dh; ret 0xf800; 
0x0000000000492c1b: add byte ptr [rbp - 0x17], bl; fcomp st(0), st(3); mov dh, 0xff; nop word ptr [rax + rax]; pop rbp; ret; 
0x0000000000420258: add byte ptr [rbp - 0x17], dh; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000046c1b7: add byte ptr [rbp - 0x2dce00b9], cl; div r8d; add r9d, eax; mov eax, r9d; ret; 
0x000000000045045e: add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x000000000044e56b: add byte ptr [rbp - 0x47ef8a40], al; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000489933: add byte ptr [rbp - 0x75], cl; adc eax, dword ptr [rbx + 0x34c0fe2]; push rcx; or byte ptr [rax - 0x7af0f506], al; cmp dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x000000000048806f: add byte ptr [rbp - 0x76b7febe], cl; ret 0x8b48; 
0x0000000000453509: add byte ptr [rbp - 0x77], cl; int1; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000458a58: add byte ptr [rbp - 0x77], cl; ret; 
0x00000000004567fa: add byte ptr [rbp - 0x7a7bf00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000424c08: add byte ptr [rbp - 0x7cac8a40], al; sub eax, 0xa809c; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x0000000000470c32: add byte ptr [rbp - 0x7cc68a40], al; sub eax, 0x5c2f2; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x00000000004546f6: add byte ptr [rbp - 0x7cca8a40], al; sub eax, 0x791ae; add dword ptr [rbx + 0x31], ebx; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004831b7: add byte ptr [rbp - 0x7ccb8a40], al; imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000045ca27: add byte ptr [rbp - 0x7cdb8140], al; call 0x8485333; pop rbx; ret; 
0x0000000000440419: add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x000000000041c0df: add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004483df: add byte ptr [rbx + 0x3568b0e], cl; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000447d9f: add byte ptr [rbx + 0x3568b0e], cl; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004931a6: add byte ptr [rbx + 0x3a64315], cl; add dh, dh; ret 0xf03; 
0x00000000004708c5: add byte ptr [rbx + 0x44], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000040a959: add byte ptr [rbx + 0x450ffffa], al; ret 0x8589; 
0x00000000004483af: add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000447d7f: add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x00000000004478af: add byte ptr [rbx + 0x48028901], cl; lea eax, dword ptr [rdx + 3]; ret; 
0x00000000004025af: add byte ptr [rbx + 0x480c247c], cl; mov esi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004489ef: add byte ptr [rbx + 0x48178916], cl; lea eax, dword ptr [rdi + 3]; vzeroupper; ret; 
0x000000000044c10a: add byte ptr [rbx + 0x48], bl; cmove eax, edx; ret; 
0x00000000004244c3: add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004332df: add byte ptr [rbx + 0x4e8bf956], cl; cld; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004330df: add byte ptr [rbx + 0x4e8bfa56], cl; cld; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432edf: add byte ptr [rbx + 0x4e8bfb56], cl; cld; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004995a7: add byte ptr [rbx + 0x5277053b], al; mov eax, dword ptr [rbx]; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x00000000004382cf: add byte ptr [rbx + 0x5789fc56], cl; cld; ret; 
0x0000000000479553: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000490541: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000402977: add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000041b042: add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000049bf2f: add byte ptr [rbx + 0x75c08507], cl; or dh, bl; ret; 
0x0000000000423bab: add byte ptr [rbx + 0xa6bed2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000041efd5: add byte ptr [rbx + 0xadc5705], al; add byte ptr [rcx], al; pop rbx; ret; 
0x000000000041b003: add byte ptr [rbx + 0xc08b], cl; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x00000000004903eb: add byte ptr [rbx + 0xc], dh; mov rdx, qword ptr [rip + 0x3cce3]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000402091: add byte ptr [rbx + 0xcaca415], cl; add dh, dh; ret 0x7408; 
0x000000000043897f: add byte ptr [rbx + 0xe8b0156], cl; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000043890f: add byte ptr [rbx + 0xe8b0256], cl; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000043889f: add byte ptr [rbx + 0xe8b0356], cl; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000040888d: add byte ptr [rbx + rcx*4 + 0x15], cl; ret; 
0x000000000044fc3f: add byte ptr [rbx + rcx*4 + 0x42], cl; adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x000000000045632b: add byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x20; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045971e: add byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x30; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000458af6: add byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x38; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000468e37: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x000000000048f217: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x0000000000408177: add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000044fe84: add byte ptr [rbx + rcx*4 + 0x7d], cl; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000048bcb0: add byte ptr [rbx - 0x28f7b], cl; jmp qword ptr [rsi + 0xf]; 
0x0000000000401d9a: add byte ptr [rbx - 0x387603bb], cl; call 0x1c9e; mov eax, 0; leave; ret; 
0x00000000004788af: add byte ptr [rbx - 0x3b7cb7fe], cl; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000402638: add byte ptr [rbx - 0x3d76fd38], al; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000000475787: add byte ptr [rbx - 0x4ff43], al; jmp qword ptr [rax]; 
0x000000000047527b: add byte ptr [rbx - 0x50743], al; call qword ptr [rax]; 
0x0000000000409958: add byte ptr [rbx - 0x60f43], al; call qword ptr [rax]; 
0x00000000004097e8: add byte ptr [rbx - 0x6276b], cl; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x8b48; 
0x0000000000414710: add byte ptr [rbx - 0x67b7df18], al; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414aeb: add byte ptr [rbx - 0x67b7df18], al; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a52: add byte ptr [rbx - 0x67b7df18], al; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000048b07d: add byte ptr [rbx - 0x70f0c005], al; int1; add eax, dword ptr [rax]; add byte ptr [rax + 0x63], cl; ret; 
0x000000000049621f: add byte ptr [rbx - 0x70f0c006], al; syscall; 
0x00000000004714c4: add byte ptr [rbx - 0x73f00008], al; ret 0xb; 
0x00000000004478bf: add byte ptr [rbx - 0x75fd76ff], cl; add al, 0x88; add al, 0x48; lea eax, dword ptr [rdx + 4]; ret; 
0x00000000004460ff: add byte ptr [rbx - 0x75fd76ff], cl; add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x000000000046ee51: add byte ptr [rbx - 0x76b3be06], al; ret; 
0x0000000000417fbc: add byte ptr [rbx - 0x76b3fed1], al; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000004177b9: add byte ptr [rbx - 0x76b7ffbb], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000414ea7: add byte ptr [rbx - 0x78f0d008], al; mov ebp, 0x8900000d; ret 0xc083; 
0x0000000000475478: add byte ptr [rbx - 0x78f0d008], al; mov esi, 0x89000008; ret 0xc083; 
0x00000000004155c7: add byte ptr [rbx - 0x78f0d008], al; sub eax, 0x89000009; ret 0xc083; 
0x0000000000414e6e: add byte ptr [rbx - 0x78f0d008], al; xor eax, 0x8900000e; ret 0xc083; 
0x000000000044a126: add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000047089f: add byte ptr [rbx - 0x7cb7fbbd], cl; ret; 
0x0000000000476f3f: add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0xbe04; 
0x0000000000444703: add byte ptr [rbx - 0x7cf0fb06], al; ret; 
0x000000000049ceb6: add byte ptr [rbx], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000041ec77: add byte ptr [rbx], ch; push rax; adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x00000000004505ff: add byte ptr [rcx + 0x104e23c1], cl; lea rcx, qword ptr [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000490a26: add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x000000000048e3fe: add byte ptr [rcx + 0x29], al; ret; 
0x00000000004191ef: add byte ptr [rcx + 0x2b], cl; adc byte ptr [r8 + 1], r9b; ret; 
0x0000000000408884: add byte ptr [rcx + 0x39], cl; fimul word ptr [rdi]; test byte ptr [rbx], cl; add al, byte ptr [rax]; add byte ptr [rbx + rcx*4 + 0x15], cl; ret; 
0x00000000004581a6: add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x0000000000443f3f: add byte ptr [rcx + 0x39], cl; ret; 
0x0000000000491d5f: add byte ptr [rcx + 0x3ec90], cl; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], -0x7d; ret 0x4801; 
0x0000000000470c1c: add byte ptr [rcx + 0x5ae4905], cl; add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x00000000004978e2: add byte ptr [rcx + 0x63], cl; or al, 0x8f; add rcx, r15; jmp rcx; 
0x0000000000411c6f: add byte ptr [rcx + 0x63], cl; ret; 
0x0000000000470c22: add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x0000000000471aba: add byte ptr [rcx + 0xf], al; mov dh, 0x56; or al, 0x84; ror byte ptr [rdi], cl; mov byte ptr [rax - 0x9ffffe9], al; ret 0xf40; 
0x0000000000471a8f: add byte ptr [rcx + 0xf], al; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0000000000486484: add byte ptr [rcx + 0xf], al; mov dh, 0x87; sbb eax, 0x89000003; ret 0xe8c0; 
0x0000000000496299: add byte ptr [rcx + 0xf], al; xchg eax, esp; ret; 
0x000000000041fdd5: add byte ptr [rcx + 1], al; adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x000000000041864f: add byte ptr [rcx + 1], cl; ret; 
0x000000000048c368: add byte ptr [rcx + rax - 0x10], dh; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000045e731: add byte ptr [rcx + rcx*4 + 0x25], al; ret; 
0x00000000004225cf: add byte ptr [rcx + rcx*4 + 0x54], cl; and al, 0x18; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000044f53d: add byte ptr [rcx + rcx*4 + 0x58], cl; adc byte ptr [rax - 0x77], cl; or byte ptr [r9 - 0x75], r9b; or byte ptr [r11 + 0x94901e0], al; ret 0x894d; 
0x00000000004229e2: add byte ptr [rcx + rcx*4 + 0x62], cl; sbb byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x0000000000406295: add byte ptr [rcx + rcx*4 + 0xd], cl; ret; 
0x000000000049c22a: add byte ptr [rcx + rcx*4 + 3], cl; pop rbx; ret; 
0x000000000049c5f7: add byte ptr [rcx + rcx*4 - 0x11], cl; call rbx; 
0x00000000004249e7: add byte ptr [rcx + rcx*4 - 0x11], cl; mov eax, 0xca; syscall; 
0x000000000044cd66: add byte ptr [rcx + rcx*4 - 0x16], cl; mov r9, qword ptr [rsp + 0x10]; mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000494daf: add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000411dae: add byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044cc12: add byte ptr [rcx + rcx*4 - 0x16], cl; xor r8d, r8d; mov rdi, r12; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x00000000004246f5: add byte ptr [rcx + rcx*4 - 0x19], cl; mov eax, 0xca; syscall; 
0x0000000000482ecf: add byte ptr [rcx + rcx*4 - 0x1a], cl; mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000000412356: add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r9; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000412668: add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r9; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000048efe4: add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000041776b: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000478e90: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000048b524: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000041a507: add byte ptr [rcx + rcx*4 - 0x38], al; syscall; 
0x0000000000406bb6: add byte ptr [rcx + rcx*4 - 0x38], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000048fbbf: add byte ptr [rcx + rcx*4 - 0x39], cl; call 0x24a70; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000045ec80: add byte ptr [rcx + rcx*4 - 0x3a], cl; mov eax, 0xe; syscall; 
0x00000000004796a1: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000045c374: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; ret; 
0x0000000000417612: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000408588: add byte ptr [rcx + rcx*4 - 0x40], cl; add qword ptr [rip + 0xc51c4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000424580: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000422d08: add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000044db92: add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x000000000044433f: add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000407cf7: add byte ptr [rcx + rcx*4 - 0xe], cl; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000042576a: add byte ptr [rcx + rcx*4 - 1], cl; mov eax, 0xca; syscall; 
0x000000000041ba7f: add byte ptr [rcx + rcx*4 - 6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000041c064: add byte ptr [rcx - 0x100c1e], al; dec dword ptr [rcx]; ret 0x1389; 
0x000000000046d706: add byte ptr [rcx - 0x1177b], cl; ljmp ptr [rcx]; ret; 
0x0000000000469ba7: add byte ptr [rcx - 0x142dce3a], cl; adc eax, 0x83489066; ret 0x4101; 
0x00000000004082fb: add byte ptr [rcx - 0x353eb712], cl; adc dword ptr [rax + rcx*2 + 0x33], esp; adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x000000000041c133: add byte ptr [rcx - 0x38b78f89], cl; ret 0xbb60; 
0x000000000046707e: add byte ptr [rcx - 0x39], cl; ret 0xffff; 
0x0000000000469b52: add byte ptr [rcx - 0x45], al; adc r8d, dword ptr [r8]; add byte ptr [rbp + 0x31], al; dec dword ptr [rbp + 0x29]; ret; 
0x000000000045ead8: add byte ptr [rcx - 0x46], al; or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x0000000000421f3e: add byte ptr [rcx - 0x73], cl; dec dword ptr [rcx - 0x7b]; ret; 
0x0000000000422ff3: add byte ptr [rcx - 0x73], cl; push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x000000000049302f: add byte ptr [rcx - 0x75], al; or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000407bd0: add byte ptr [rcx - 0x75], cl; cmp al, 0x24; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000411d87: add byte ptr [rcx - 0x75], cl; mov ds, eax; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x00000000004231cf: add byte ptr [rcx - 0x75], cl; push rcx; or dh, dh; ret 0x7404; 
0x0000000000473cb1: add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000413e92: add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000046fcb3: add byte ptr [rcx - 0x75], cl; test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000418ced: add byte ptr [rcx - 0x75], cl; xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000041fdf9: add byte ptr [rcx - 0x77], al; imul esp, dword ptr [rbx*2 + 0x10438941], 0x41; mov dword ptr [rbx + 0x14], 0; ret; 
0x0000000000474886: add byte ptr [rcx - 0x77], al; ret 0x1e74; 
0x0000000000478cfb: add byte ptr [rcx - 0x77], al; ret; 
0x0000000000401897: add byte ptr [rcx - 0x77], al; rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x000000000044fe80: add byte ptr [rcx - 0x77], cl; add byte ptr [r11 + rcx*4 + 0x7d], r9b; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000041a6a9: add byte ptr [rcx - 0x77], cl; call 0xffffffffceecba3c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000406d4f: add byte ptr [rcx - 0x77], cl; fisttp word ptr [rax - 0x7d]; ret; 
0x0000000000498aa7: add byte ptr [rcx - 0x77], cl; mov word ptr [rax], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041671f: add byte ptr [rcx - 0x77], cl; ret 0x8548; 
0x000000000042652f: add byte ptr [rcx - 0x77], cl; ret; 
0x000000000046d822: add byte ptr [rcx - 0x7d], al; in al, dx; add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000472807: add byte ptr [rcx - 0x7d], al; out dx, eax; add dword ptr [rax - 0x93743], eax; jmp qword ptr [rax]; 
0x0000000000422ccf: add byte ptr [rcx - 0x7d], al; ret 0x4101; 
0x000000000044d56b: add byte ptr [rcx - 0x7d], cl; out dx, eax; add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000042894f: add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x000000000042724f: add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x000000000041170d: add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000498634: add byte ptr [rcx - 0x80], al; call qword ptr [rax + 0xf]; 
0x000000000041410e: add byte ptr [rcx - 0x80], al; call qword ptr [rbx + 0xf]; 
0x000000000045d8be: add byte ptr [rcx - 0x8373], cl; dec dword ptr [rcx + 1]; ret 0x8d48; 
0x000000000048206b: add byte ptr [rcx - 0x876b730], cl; bsr eax, eax; lea rax, qword ptr [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000408024: add byte ptr [rcx - 0xc1767ab], cl; ret; 
0x000000000042ecb6: add byte ptr [rcx - 9], cl; ret 1; 
0x000000000042ecdc: add byte ptr [rcx - 9], cl; ret 2; 
0x000000000041f9ac: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xaad48; ret; 
0x000000000041f97c: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xaad80; ret; 
0x000000000044aa4f: add byte ptr [rcx], al; add byte ptr [rax], al; sub rax, rdx; ret; 
0x0000000000425cf5: add byte ptr [rcx], al; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000408592: add byte ptr [rcx], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000470c3c: add byte ptr [rcx], al; mov eax, r8d; pop rbx; ret; 
0x0000000000470991: add byte ptr [rcx], al; pop r12; ret; 
0x0000000000423bb1: add byte ptr [rcx], al; pop rbp; ret; 
0x000000000046ec08: add byte ptr [rcx], al; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000424c12: add byte ptr [rcx], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000041efdb: add byte ptr [rcx], al; pop rbx; ret; 
0x0000000000454700: add byte ptr [rcx], al; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000041cdc5: add byte ptr [rcx], al; ret; 
0x000000000045f7e5: add byte ptr [rcx], al; xor eax, eax; add rsp, 8; ret; 
0x00000000004221a6: add byte ptr [rcx], bh; ret 0xa7e; 
0x0000000000452063: add byte ptr [rcx], bh; ret; 
0x00000000004971e0: add byte ptr [rcx], bl; sal bh, cl; shl byte ptr [rsi - 0x7f], cl; ret 0x7fff; 
0x000000000049b719: add byte ptr [rcx], cl; ret 0x5389; 
0x000000000046781f: add byte ptr [rcx], cl; ret 0x8f74; 
0x000000000049bedf: add byte ptr [rcx], dh; fisttp dword ptr [rax - 0x77]; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000426069: add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000423647: add byte ptr [rcx], dh; rcr byte ptr [rdx + 0x5d], 0x41; pop rsp; ret; 
0x000000000042e59c: add byte ptr [rcx], dh; rol bl, 0x83; ret 0x6620; 
0x0000000000422950: add byte ptr [rcx], dh; ror byte ptr [rax - 0x73], 0x3c; ret; 
0x000000000048a80c: add byte ptr [rcx], dh; ror byte ptr [rbp - 0x7b], cl; dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x0000000000407a43: add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 - 0x32], cl; mov edi, 2; mov eax, 0xe; syscall; 
0x00000000004906df: add byte ptr [rcx], dh; shr bl, 0xcf; nop dword ptr [rax]; call rax; 
0x00000000004176d8: add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x000000000044bf36: add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000049328d: add byte ptr [rdi + 0x3005], bh; mov eax, 0x9e; syscall; 
0x000000000041f8ef: add byte ptr [rdi + 0x74c08507], al; sbb al, byte ptr [rbp + 0x31]; sar byte ptr [rdx + 2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000044bed6: add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000499c3c: add byte ptr [rdi + 1], bh; call rax; 
0x0000000000499dc0: add byte ptr [rdi + rax*8 + 0x48], dh; add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000046f88e: add byte ptr [rdi + rcx + 0x44], cl; ret 0xf4c; 
0x000000000041c53a: add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x0000000000456e1e: add byte ptr [rdi + rcx - 0x4a], al; add byte ptr [rax - 0x77], cl; ret 0x8445; 
0x0000000000456a25: add byte ptr [rdi + rcx - 0x4a], al; dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x0000000000491bba: add byte ptr [rdi + rdx + 0x48], dh; add esp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000044ae5a: add byte ptr [rdi], cl; adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000407a24: add byte ptr [rdi], cl; add eax, 0x8944c689; ret 0xeab8; 
0x000000000040267a: add byte ptr [rdi], cl; add eax, 0xfffce6e9; dec dword ptr [rbx + 0xca6f815]; add dh, dh; ret 0x7404; 
0x0000000000425772: add byte ptr [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi + 0xf]; 
0x0000000000425e29: add byte ptr [rdi], cl; add eax, 0xfffec6e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004065e6: add byte ptr [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi - 0x70]; 
0x00000000004237a2: add byte ptr [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi + 0xf]; 
0x00000000004083a2: add byte ptr [rdi], cl; add eax, 0xffff28e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000403e0a: add byte ptr [rdi], cl; add eax, 0xffff43e9; jmp qword ptr [rsi + 0x66]; 
0x000000000041ce4c: add byte ptr [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000420e7a: add byte ptr [rdi], cl; add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000437a86: add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x00000000004489bf: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; vzeroupper; ret; 
0x0000000000438acf: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x000000000044479f: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000041321f: add byte ptr [rdi], cl; mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x00000000004447af: add byte ptr [rdi], cl; mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000049a9af: add byte ptr [rdi], cl; mov dh, 0; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041d717: add byte ptr [rdi], cl; mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000499d65: add byte ptr [rdi], cl; mov dh, 0x14; sbb ch, al; sal dword ptr [rdx - 0xa], 1; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000438b3f: add byte ptr [rdi], cl; mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000041c43e: add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x000000000040615f: add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000406d07: add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000049d02f: add byte ptr [rdi], cl; mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x000000000044a00f: add byte ptr [rdi], cl; mov dh, 0x47; cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x0000000000449fff: add byte ptr [rdi], cl; mov dh, 0x47; hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000449fcf: add byte ptr [rdi], cl; mov dh, 0x47; int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000449fef: add byte ptr [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000449fdf: add byte ptr [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000040612f: add byte ptr [rdi], cl; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000047711f: add byte ptr [rdi], cl; mov dh, 0x53; or al, 0xf6; ret 0xf04; 
0x00000000004089ff: add byte ptr [rdi], cl; mov dh, 0x73; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000049854e: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [r11 + rax*4]; add rax, r11; jmp rax; 
0x000000000049864f: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x000000000044c14f: add byte ptr [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x0000000000497a34: add byte ptr [rdi], cl; mov dh, 0xc9; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000000498c58: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [rbp + rdx*4]; add rdx, rbp; jmp rdx; 
0x00000000004284ef: add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000042e1ff: add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000000042f21f: add byte ptr [rdi], cl; mov dh, 7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000042e5cf: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000042e5ff: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000042e5ef: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000042e5df: add byte ptr [rdi], cl; mov esp, 0xf80148c0; ret; 
0x000000000045eca7: add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], ebx; add esp, 0x98; ret; 
0x000000000048bcaa: add byte ptr [rdi], cl; test dword ptr [rdi], esi; add al, byte ptr [rax]; add byte ptr [rbx - 0x28f7b], cl; jmp qword ptr [rsi + 0xf]; 
0x000000000048ea96: add byte ptr [rdi], cl; test dword ptr [rdx + 0x48000000], ecx; add esp, 0x48; ret; 
0x000000000044e404: add byte ptr [rdi], cl; test dword ptr [rsi + 0x48000000], esp; add esp, 0x68; pop rbp; pop r12; ret; 
0x00000000004513af: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x8348; 
0x0000000000451b84: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x8d48; 
0x0000000000469375: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x941; 
0x00000000004029a3: add byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x000000000041774a: add byte ptr [rdi], cl; xchg eax, esp; ret 0x3948; 
0x0000000000451b63: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8d48; 
0x0000000000474304: add byte ptr [rdi], cl; xchg esp, esi; and eax, 0x83480000; ret; 
0x00000000004460bf: add byte ptr [rdx + 0x48028801], cl; mov eax, edi; ret; 
0x0000000000450459: add byte ptr [rdx + 0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x000000000041c178: add byte ptr [rdx + 1], bh; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000499e57: add byte ptr [rdx + rbp*8 + 0x48], dh; add esp, 8; ret; 
0x000000000045c9cb: add byte ptr [rdx + rcx - 0x17], dh; popfq; cmp ah, 0xff; nop dword ptr [rax + rax]; ret; 
0x0000000000499d8f: add byte ptr [rdx + rdi + 0x48], dh; add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000042065b: add byte ptr [rdx + rdx + 0x48], dh; mov dword ptr [rdx + 0x28], ecx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000045feba: add byte ptr [rdx + rdx*8 + 0x48c1450f], al; add esp, 8; ret; 
0x000000000042333e: add byte ptr [rdx - 0x7d], cl; xor qword ptr [rax], r9; add dword ptr [rax + 0x39], ecx; ret; 
0x000000000045e8db: add byte ptr [rdx], al; add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000455536: add byte ptr [rdx], al; add rsp, 8; ret; 
0x0000000000426f00: add byte ptr [rdx], al; lea rax, qword ptr [rip + 0x1da27]; lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x0000000000426170: add byte ptr [rdx], al; lea rax, qword ptr [rip + 0x1e6c7]; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x0000000000426110: add byte ptr [rdx], al; lea rax, qword ptr [rip + 0xf97]; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x0000000000427015: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x23e22]; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426ea5: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x23f82]; lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d45: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x240f2]; lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fa7: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x24260]; lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e37: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x243c0]; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426cd7: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x24530]; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426ff9: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x2464e]; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e89: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x247ae]; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x0000000000426d29: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426de9: add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x250be]; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x0000000000425efc: add byte ptr [rdx], bh; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x0000000000430a9f: add byte ptr [rip + 0xff], ah; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000000430a9e: add byte ptr [rip + 0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000004301d2: add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000046f8e7: add byte ptr [rip - 0x60d17], ch; jmp qword ptr [rsi - 0x70]; 
0x0000000000470177: add byte ptr [rip - 0xaa517], ch; jmp qword ptr [rsi - 0x70]; 
0x00000000004025e5: add byte ptr [rsi + 0x2e], ah; nop dword ptr [rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000000499eb7: add byte ptr [rsi + 0x48], dh; mov dword ptr [rdi + rsi*8], edx; add rsp, 8; ret; 
0x0000000000496c9e: add byte ptr [rsi + 0x63], cl; sub al, 0xa8; add rax, r13; jmp rax; 
0x000000000041f8fd: add byte ptr [rsi + 0x80], bh; mov eax, 0xca; syscall; 
0x0000000000478d9b: add byte ptr [rsi + 0x80], bh; syscall; 
0x0000000000470c84: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f8: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec64: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f81c: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f757: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5ba: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4eb: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454744: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454630: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454510: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d358: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e18: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424150: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424118: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c40: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c08: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac8: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423624: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c74: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x000000000042430c: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d70: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cfa: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab8: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420594: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f04a: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f04a: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb4a: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e6: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e49c: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d6: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d136: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde2: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde2: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x0000000000417888: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e7: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084b0: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408475: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408391: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d5: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de2: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df9: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dd0: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca5: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x0000000000401211: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000401380: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; 
0x0000000000470dee: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; ret; 
0x00000000004242e1: add byte ptr [rsi + 0x81], bh; mov eax, ebx; syscall; 
0x00000000004246f0: add byte ptr [rsi + 0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249e2: add byte ptr [rsi + 0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425765: add byte ptr [rsi + 0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a6: add byte ptr [rsi + 0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fc1: add byte ptr [rsi + 0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000000499c37: add byte ptr [rsi + 0xa], bh; mov edi, 1; call rax; 
0x000000000042f796: add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000046c2be: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000042e504: add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x000000000049a106: add byte ptr [rsi + 1], bh; mov edi, 1; call rax; 
0x000000000041f9ec: add byte ptr [rsi + 1], dh; ret; 
0x000000000044eee7: add byte ptr [rsi + rsi + 0x44], dh; mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000045b108: add byte ptr [rsi - 0x3f], ah; ret 0x4808; 
0x000000000044786d: add byte ptr [rsi - 0x70], ah; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, qword ptr [rdx]; ret; 
0x0000000000447d4d: add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000447fed: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000447fad: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000447fcd: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004484cd: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x000000000045e9fd: add byte ptr [rsi - 0x70], ah; nop; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000045dcad: add byte ptr [rsi - 0x70], ah; ret; 
0x000000000044441d: add byte ptr [rsi - 0x70], ah; tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000004460cf: add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x00000000004460df: add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000046c16b: add byte ptr [rsi - 0x77], ah; test byte ptr [rax + rax*2], ah; add al, 0; add cl, ch; mov ebp, 0xe8fffffd; ret 0xfe46; 
0x000000000047858f: add byte ptr [rsi - 1], bh; call qword ptr [rax + 0x18]; 
0x000000000044e319: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x0000000000417f54: add byte ptr [rsp + rdi + 0x5b], dh; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000410c4a: add byte ptr cs:[rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000478f00: add byte ptr cs:[rax], al; cmovne rax, rdx; ret; 
0x0000000000426c66: add byte ptr es:[rax], 0; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x000000000042611d: add byte ptr es:[rax], al; cmovne rax, rdx; ret; 
0x000000000045045b: add byte ptr fs:[rax], al; add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x0000000000478ea2: add byte ptr gs:[rbp + 0x31], al; in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x00000000004439ff: add ch, al; std; xlatb; rol dword ptr [rbp - 0x3a678a40], -3; xlatb; ret 0xc085; 
0x000000000040b813: add ch, cl; ret 0xffde; 
0x00000000004460e7: add cl, byte ptr [r8 - 0x76b7fdbe]; clc; ret; 
0x0000000000416d96: add cl, byte ptr [r9 - 0x77]; ror dword ptr [rax - 0x77], cl; ret 0x1de9; 
0x0000000000487721: add cl, byte ptr [rax + 0x39]; ret 0x860f; 
0x0000000000419cfd: add cl, byte ptr [rax + 0x39]; ret; 
0x000000000040cfa9: add cl, byte ptr [rax + 0x63]; ror byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000044be58: add cl, byte ptr [rax + 0x77f8c50f]; ret; 
0x0000000000418e77: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000419045: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x0000000000427016: add cl, byte ptr [rax - 0x73]; adc eax, 0x23e22; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426ea6: add cl, byte ptr [rax - 0x73]; adc eax, 0x23f82; lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d46: add cl, byte ptr [rax - 0x73]; adc eax, 0x240f2; lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fa8: add cl, byte ptr [rax - 0x73]; adc eax, 0x24260; lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e38: add cl, byte ptr [rax - 0x73]; adc eax, 0x243c0; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426cd8: add cl, byte ptr [rax - 0x73]; adc eax, 0x24530; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426ffa: add cl, byte ptr [rax - 0x73]; adc eax, 0x2464e; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e8a: add cl, byte ptr [rax - 0x73]; adc eax, 0x247ae; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x0000000000426d2a: add cl, byte ptr [rax - 0x73]; adc eax, 0x2491e; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426dea: add cl, byte ptr [rax - 0x73]; adc eax, 0x250be; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x0000000000426f54: add cl, byte ptr [rax - 0x73]; add eax, 0x14eb4; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000426f01: add cl, byte ptr [rax - 0x73]; add eax, 0x1da27; lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x0000000000426171: add cl, byte ptr [rax - 0x73]; add eax, 0x1e6c7; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x000000000042645b: add cl, byte ptr [rax - 0x73]; add eax, 0x39fd; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x0000000000478ef4: add cl, byte ptr [rax - 0x73]; add eax, 0x7f4; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000426c62: add cl, byte ptr [rax - 0x73]; add eax, 0x8026; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x0000000000426111: add cl, byte ptr [rax - 0x73]; add eax, 0xf97; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x000000000042323d: add cl, byte ptr [rax - 0x73]; push rsp; ret; 
0x0000000000447985: add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446175: add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000004460a5: add cl, byte ptr [rax - 0x75]; or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x00000000004460e8: add cl, byte ptr [rax - 0x76b7fdbe]; clc; ret; 
0x0000000000446055: add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000048a83d: add cl, byte ptr [rax - 0x77]; fimul dword ptr [rax - 0x77]; ret; 
0x0000000000474227: add cl, byte ptr [rax - 0x77]; ret 0x51ff; 
0x000000000048887a: add cl, byte ptr [rax - 0x7b]; sal byte ptr [rax + rsi*2 + 0x48], 0x89; ret 0x8b48; 
0x00000000004448a0: add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x000000000040911b: add cl, byte ptr [rax - 0x7d]; ret 0x8301; 
0x0000000000444903: add cl, byte ptr [rax - 0x7d]; ret 0xe908; 
0x000000000040428d: add cl, byte ptr [rax - 0x7d]; ret 0xf01; 
0x000000000040f78f: add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000048a94d: add cl, byte ptr [rbp + rcx*4 + 0x7a]; or byte ptr [rax + 1], cl; ret; 
0x0000000000438912: add cl, byte ptr [rbx + 0x257890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000446123: add cl, byte ptr [rbx + 0x42890341]; add ecx, dword ptr [rax - 0x77]; clc; ret; 
0x0000000000447905: add cl, byte ptr [rbx + 0x42890541]; add eax, 0x8428d48; ret; 
0x0000000000446165: add cl, byte ptr [rbx + 0x42890841]; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000473cf8: add cl, byte ptr [rcx + rcx*4 - 0x16]; call qword ptr [rax + 0x38]; 
0x000000000040263b: add cl, byte ptr [rcx - 0x4029763e]; add dh, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x0000000000499b37: add cl, byte ptr [rcx - 0x75]; adc al, 0x24; mov edi, 1; call rax; 
0x0000000000477d5c: add cl, byte ptr [rcx - 0x77]; ret; 
0x0000000000416d97: add cl, byte ptr [rcx - 0x77]; ror dword ptr [rax - 0x77], cl; ret 0x1de9; 
0x0000000000416f25: add cl, byte ptr [rcx - 0x77]; ror dword ptr [rax - 0x77], cl; ret 0x8fe9; 
0x0000000000417112: add cl, byte ptr [rcx - 0x7d]; ret; 
0x000000000040ceee: add cl, byte ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000477302: add cl, byte ptr [rdi]; xchg eax, ebp; ret 0x5389; 
0x0000000000493195: add cl, byte ptr [rdi]; xchg eax, esp; ret 0xfb83; 
0x00000000004460e5: add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x00000000004478c3: add cl, byte ptr [rdx + 0x42880441]; add al, 0x48; lea eax, dword ptr [rdx + 4]; ret; 
0x0000000000446103: add cl, byte ptr [rdx + 0x42880441]; add al, 0x48; mov eax, edi; ret; 
0x0000000000475df1: add cl, ch; insb byte ptr [rdi], dx; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000049caf0: add cl, ch; mov ah, byte ptr [rdi]; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000046c173: add cl, ch; mov ebp, 0xe8fffffd; ret 0xfe46; 
0x000000000046b409: add cl, ch; nop; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000405f30: add cl, ch; push rdx; mov cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000040ba20: add cl, ch; rcr cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000040b213: add cl, ch; ret 0xffe4; 
0x0000000000498142: add cl, ch; ret 0xfff7; 
0x00000000004963b8: add cl, ch; ret 0xfff8; 
0x0000000000405a5e: add cl, ch; ret; 
0x0000000000401d62: add cl, cl; ret; 
0x0000000000438ac3: add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000493485: add dh, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; sete sil; add esi, esi; syscall; 
0x0000000000402641: add dh, byte ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x00000000004784ee: add dh, byte ptr [rbp + 0x1e]; mov rax, qword ptr [rsi + 0xe0]; call qword ptr [rax + 0x68]; 
0x0000000000426cf6: add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x000000000043b80c: add dh, byte ptr [rdx + 0x10]; mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000044ac93: add dh, byte ptr [rdx + 8]; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000041f92c: add dh, byte ptr [rsi + 1]; ret; 
0x0000000000426fbf: add dh, dh; add eax, 0xa5d62; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000426e4f: add dh, dh; add eax, 0xa5ed2; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000426cef: add dh, dh; add eax, 0xa6032; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x00000000004020db: add dh, dh; ret 0x7402; 
0x0000000000489b2c: add dh, dh; ret 0x7403; 
0x0000000000402687: add dh, dh; ret 0x7404; 
0x0000000000402097: add dh, dh; ret 0x7408; 
0x000000000041a68f: add dh, dh; ret 0x7420; 
0x00000000004020ea: add dh, dh; ret 0x7440; 
0x0000000000448b57: add dh, dh; ret 0x7501; 
0x0000000000448b64: add dh, dh; ret 0x7502; 
0x0000000000448b71: add dh, dh; ret 0x7504; 
0x0000000000448b29: add dh, dh; ret 0x7510; 
0x0000000000448b36: add dh, dh; ret 0x7520; 
0x0000000000448b43: add dh, dh; ret 0x7540; 
0x00000000004931ac: add dh, dh; ret 0xf03; 
0x000000000048a63b: add dh, dh; ret 0xf04; 
0x0000000000483971: add dh, dh; ret 0xf07; 
0x000000000046ff2f: add dh, dh; ret 0xf08; 
0x0000000000471ac7: add dh, dh; ret 0xf40; 
0x000000000046f237: add dh, dh; ret 0xf50; 
0x000000000049987b: add dh, dh; ret; 
0x00000000004862c6: add dil, al; nop; sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000046d666: add dil, al; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x0000000000479125: add dword ptr [eax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x0000000000458a55: add dword ptr [eax], eax; add byte ptr [rbp - 0x77], cl; ret; 
0x000000000040610c: add dword ptr [r8 - 0x7d], ecx; ret; 
0x0000000000447871: add dword ptr [rax + 0x28d4802], ecx; ret; 
0x000000000046cb2a: add dword ptr [rax + 0x29], ecx; fimul dword ptr [rax + 0x39]; ret 0xe57f; 
0x0000000000408418: add dword ptr [rax + 0x29], ecx; fmul dword ptr [rax - 0x3f]; call 0x648dd026; ret; 
0x0000000000408bc3: add dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x000000000046f4d1: add dword ptr [rax + 0x39], ecx; ret 0xe975; 
0x0000000000423344: add dword ptr [rax + 0x39], ecx; ret; 
0x000000000049a6e6: add dword ptr [rax + 0x63], ecx; ret; 
0x000000000047045a: add dword ptr [rax + 0x63], ecx; ror byte ptr [rax + 0x39], cl; ret 0x9c0f; 
0x000000000048eaf7: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x00000000004078c7: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x000000000044fc2b: add dword ptr [rax + 9], ecx; ret 0x8948; 
0x000000000041d8b5: add dword ptr [rax + rbp - 0x77], esi; ret 0xc883; 
0x00000000004143af: add dword ptr [rax - 0x50743], eax; jmp qword ptr [rax]; 
0x0000000000414670: add dword ptr [rax - 0x73], ecx; or eax, 0xb2cc8; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d29: add dword ptr [rax - 0x73], ecx; or eax, 0xb360f; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x00000000004460c1: add dword ptr [rax - 0x776b7fe], ecx; ret; 
0x000000000041fa15: add dword ptr [rax - 0x77], ecx; adc eax, 0xaad33; ret; 
0x000000000040918b: add dword ptr [rax - 0x77], ecx; adc eax, dword ptr [rax - 0x78]; sub byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000478e8c: add dword ptr [rax - 0x77], ecx; add byte ptr [r9 + rcx*4 - 0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x0000000000447982: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446172: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000004460a2: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000446052: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000447902: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rbx + 0x42890541]; add eax, 0x8428d48; ret; 
0x0000000000446162: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rbx + 0x42890841]; or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000048c437: add dword ptr [rax - 0x77], ecx; add eax, 0x40ed1; ret; 
0x000000000040f786: add dword ptr [rax - 0x77], ecx; lea edx, dword ptr [rax - 0x77000005]; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000040cee5: add dword ptr [rax - 0x77], ecx; lea edx, dword ptr [rax - 0x77000005]; add cl, byte ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000046f8e1: add dword ptr [rax - 0x77], ecx; push rbp; sub dh, al; add byte ptr [rip - 0x60d17], ch; jmp qword ptr [rsi - 0x70]; 
0x0000000000470171: add dword ptr [rax - 0x77], ecx; push rbp; sub dh, al; add byte ptr [rip - 0xaa517], ch; jmp qword ptr [rsi - 0x70]; 
0x0000000000454957: add dword ptr [rax - 0x77], ecx; ret 0x2b48; 
0x000000000041bf76: add dword ptr [rax - 0x77], ecx; ret 0x3075; 
0x0000000000425801: add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x000000000046065b: add dword ptr [rax - 0x77], ecx; ret 0x44f6; 
0x00000000004836fb: add dword ptr [rax - 0x77], ecx; ret 0x8948; 
0x0000000000488072: add dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x000000000046a708: add dword ptr [rax - 0x77], ecx; ret 0xf641; 
0x0000000000406b7f: add dword ptr [rax - 0x7cb700b8], ecx; ret 0x4901; 
0x00000000004929ef: add dword ptr [rax - 0x7d], ecx; ret 0x3901; 
0x000000000041c442: add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x000000000045f0a9: add dword ptr [rax - 0x7d], ecx; ret 0x4001; 
0x00000000004113d3: add dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x000000000044f94a: add dword ptr [rax - 0x7d], ecx; ret 0x4808; 
0x000000000048ad2a: add dword ptr [rax - 0x7d], ecx; ret 0x4810; 
0x0000000000455739: add dword ptr [rax - 0x7d], ecx; ret 0x4901; 
0x0000000000457933: add dword ptr [rax - 0x7d], ecx; ret 0x4c01; 
0x000000000048ad3f: add dword ptr [rax - 0x7d], ecx; ret 0x4f10; 
0x0000000000406163: add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000470a94: add dword ptr [rax - 0x7d], ecx; ret 0x8404; 
0x0000000000403821: add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x000000000040610d: add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000498186: add dword ptr [rax - 0x7d], ecx; rol byte ptr [rbx], 0xeb; ret; 
0x000000000041224e: add dword ptr [rax - 0x8ff43], eax; jmp qword ptr [rax]; 
0x000000000047280b: add dword ptr [rax - 0x93743], eax; jmp qword ptr [rax]; 
0x0000000000406848: add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000424fc3: add dword ptr [rax], 0x89480000; fistp qword ptr [rax + 0xca]; syscall; 
0x00000000004218a8: add dword ptr [rax], 0x89480000; out dx, eax; mov eax, 0xca; syscall; 
0x00000000004249e4: add dword ptr [rax], 0x894c0000; out dx, eax; mov eax, 0xca; syscall; 
0x0000000000470c86: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5c29a; syscall; 
0x00000000004709fa: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5c522; syscall; 
0x000000000046ec66: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x5e2ae; syscall; 
0x000000000045f81e: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6d6f2; syscall; 
0x000000000045f759: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6d7b7; syscall; 
0x000000000045f5bc: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6d954; syscall; 
0x000000000045f4ed: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6da23; syscall; 
0x0000000000454746: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x7915a; syscall; 
0x0000000000454632: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x7926e; syscall; 
0x0000000000454512: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x7938e; syscall; 
0x000000000044d35a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x80546; syscall; 
0x0000000000425e1a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa4976; syscall; 
0x0000000000424152: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa663e; syscall; 
0x000000000042411a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6676; syscall; 
0x0000000000423c42: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b4e; syscall; 
0x0000000000423c0a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6b86; syscall; 
0x0000000000423aca: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa6cc6; syscall; 
0x0000000000423626: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa716a; syscall; 
0x0000000000424c76: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa802a; syscall; 
0x000000000042430e: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xa8982; syscall; 
0x0000000000420d72: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xabf2e; syscall; 
0x0000000000420cfc: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xabf94; syscall; 
0x0000000000420aba: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xac1e6; syscall; 
0x0000000000420596: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xac70a; syscall; 
0x000000000041f04c: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xadbd4; syscall; 
0x000000000041f04c: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xadbd4; syscall; ret; 
0x000000000041eb4c: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xae0d4; syscall; 
0x000000000041e7e8: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xae438; syscall; 
0x000000000041e49e: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xae782; syscall; 
0x000000000041d3d8: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xaf848; syscall; 
0x000000000041d138: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xafae8; syscall; 
0x000000000041cde4: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xafe3c; syscall; 
0x000000000041cde4: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xafe3c; syscall; ret; 
0x000000000041788a: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xb6016; syscall; 
0x00000000004086e9: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc5057; syscall; 
0x00000000004084b2: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc528e; syscall; 
0x0000000000408477: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc52c9; syscall; 
0x0000000000408393: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc53ad; syscall; 
0x00000000004065d7: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc61d1; syscall; 
0x0000000000404de4: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc798c; syscall; 
0x0000000000403dfb: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc88cd; syscall; 
0x0000000000403dd2: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc88f6; syscall; 
0x0000000000403ca7: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xc8a21; syscall; 
0x0000000000401213: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xcb5ad; syscall; 
0x000000000041ce44: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000420e72: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004242e3: add dword ptr [rax], 0xd8890000; syscall; 
0x000000000045832e: add dword ptr [rax], eax; add bh, dh; ret 0xf800; 
0x0000000000422bd8: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret 0x820f; 
0x000000000048b130: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000481c87: add dword ptr [rax], eax; add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000000042e8ef: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x0000000000471118: add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x00000000004900cf: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x000000000040f612: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; lea edx, dword ptr [rax - 0x7c000005]; ret 0x4830; 
0x0000000000494fcf: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x000000000041aaed: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000041b401: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000497c92: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000045a99c: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xb7eb; 
0x0000000000499a85: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000453de5: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044af42: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000497974: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rcx]; 
0x000000000049578f: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000042dc57: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000048c1f0: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x00000000004237c4: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x0000000000479126: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000044318f: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042dc85: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000406cea: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004535a1: add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000048b7e1: add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000478555: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x78010; mov eax, 1; pop rbp; ret; 
0x0000000000499b3d: add dword ptr [rax], eax; add byte ptr [rax], al; call rax; 
0x000000000041467d: add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000048f78e: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000041f95d: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000049a108: add dword ptr [rax], eax; add byte ptr [rax], al; mov edi, 1; call rax; 
0x0000000000470c81: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f5: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec61: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f819: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f754: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5b7: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4e8: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454741: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x000000000045462d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x000000000045450d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d355: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e15: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x000000000042414d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424115: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c3d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c05: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac5: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423621: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c71: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424309: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d6d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf7: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab5: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420591: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f047: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041eb47: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e3: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e499: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d3: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d133: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cddf: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x0000000000417885: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e4: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084ad: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408472: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040838e: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d2: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404ddf: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df6: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dcd: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca2: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040120e: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x000000000040137d: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470deb: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004242de: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004246ed: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249df: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425762: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a3: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fbe: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000048f6b6: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x000000000041f9ad: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f97d: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041c17a: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000417055: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call rax; 
0x0000000000475052: add dword ptr [rax], eax; add byte ptr [rax], al; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000470aea: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x000000000041de22: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000047855f: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; ret; 
0x0000000000426024: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000454c65: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x000000000041f93d: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000044e571: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000041ec64: add dword ptr [rax], eax; add byte ptr [rbp + 0xf], dh; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000458a56: add dword ptr [rax], eax; add byte ptr [rbp - 0x77], cl; ret; 
0x0000000000499a15: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000452e63: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000040208f: add dword ptr [rax], eax; add byte ptr [rbx + 0xcaca415], cl; add dh, dh; ret 0x7408; 
0x00000000004581a4: add dword ptr [rax], eax; add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x0000000000406293: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 + 0xd], cl; ret; 
0x000000000048efe2: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x00000000004176d6: add dword ptr [rax], eax; add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x000000000049854c: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [r11 + rax*4]; add rax, r11; jmp rax; 
0x000000000045b106: add dword ptr [rax], eax; add byte ptr [rsi - 0x3f], ah; ret 0x4808; 
0x000000000040b211: add dword ptr [rax], eax; add cl, ch; ret 0xffe4; 
0x0000000000448b55: add dword ptr [rax], eax; add dh, dh; ret 0x7501; 
0x0000000000448b62: add dword ptr [rax], eax; add dh, dh; ret 0x7502; 
0x0000000000448b6f: add dword ptr [rax], eax; add dh, dh; ret 0x7504; 
0x0000000000448b27: add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000448b34: add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x0000000000448b41: add dword ptr [rax], eax; add dh, dh; ret 0x7540; 
0x0000000000499879: add dword ptr [rax], eax; add dh, dh; ret; 
0x00000000004263be: add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x000000000042617e: add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x0000000000427097: add dword ptr [rax], eax; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263b7: add dword ptr [rax], eax; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263f7: add dword ptr [rax], eax; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x0000000000426f5a: add dword ptr [rax], eax; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000426177: add dword ptr [rax], eax; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x0000000000426f07: add dword ptr [rax], eax; lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x00000000004260b7: add dword ptr [rax], eax; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x0000000000406e62: add dword ptr [rax], eax; nop dword ptr [rax]; ret; 
0x000000000042581b: add dword ptr [rax], ecx; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000402354: add dword ptr [rax], esi; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x000000000042581a: add dword ptr [rax], r9d; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000478bdb: add dword ptr [rbp + 0x12], esi; mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x000000000044f4e2: add dword ptr [rbp + 0x1b], esi; ret; 
0x0000000000420e68: add dword ptr [rbp + 0x31], 0x1bad2; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000044f4ae: add dword ptr [rbp + 0x3f], esi; ret; 
0x00000000004988ca: add dword ptr [rbp + 1], ecx; ror dword ptr [rdi], -0x4a; add dword ptr [r8 - 0x7d], ecx; ret; 
0x000000000044c9e0: add dword ptr [rbp + rcx*4 + 0x4c], ecx; and al, 0x20; call rbx; 
0x00000000004823a4: add dword ptr [rbp + rcx*4 + 0x4c], ecx; and al, 0x28; call rbx; 
0x000000000044d56f: add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000044ff99: add dword ptr [rbp - 0xc], esi; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000438982: add dword ptr [rbx + 0x157890e], ecx; mov dword ptr [rdi], ecx; ret; 
0x0000000000454701: add dword ptr [rbx + 0x31], ebx; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000046ec09: add dword ptr [rbx + 0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000424c13: add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x00000000004221a0: add dword ptr [rbx + 0xa858905], ecx; add byte ptr [rcx], bh; ret 0xa7e; 
0x00000000004748c2: add dword ptr [rbx - 0x4ff43], eax; jmp qword ptr [rax]; 
0x0000000000474895: add dword ptr [rbx - 0x50743], eax; call qword ptr [rax]; 
0x000000000044c429: add dword ptr [rbx - 0x50f0fe40], eax; ret 0xda89; 
0x0000000000414386: add dword ptr [rbx - 0x50f43], eax; call qword ptr [rax]; 
0x000000000040f473: add dword ptr [rbx - 0x63f7b], ecx; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000412228: add dword ptr [rbx - 0x92b43], eax; call qword ptr [rax]; 
0x000000000041fb6d: add dword ptr [rcx + 0x21], ecx; ret 0x8d4d; 
0x00000000004478f1: add dword ptr [rcx + 0x3418b02], ecx; mov dword ptr [rdx + 3], eax; lea rax, qword ptr [rdx + 6]; ret; 
0x0000000000446121: add dword ptr [rcx + 0x3418b02], ecx; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000404b2e: add dword ptr [rcx + 0x39], ecx; ror byte ptr [rdi], cl; test al, al; add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x00000000004478d1: add dword ptr [rcx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446111: add dword ptr [rcx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x00000000004478c1: add dword ptr [rcx + 0x4418a02], ecx; mov byte ptr [rdx + 4], al; lea rax, qword ptr [rdx + 4]; ret; 
0x0000000000446101: add dword ptr [rcx + 0x4418a02], ecx; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000470992: add dword ptr [rcx + 0x5c], eax; ret; 
0x000000000044c39c: add dword ptr [rcx + 0xf], eax; xchg eax, esp; ret 0xfa83; 
0x000000000044f54c: add dword ptr [rcx + 9], ecx; ret 0x894d; 
0x000000000045ee16: add dword ptr [rcx + rcx*4 - 0x19], ecx; call rbx; 
0x0000000000470c3d: add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x0000000000417fbf: add dword ptr [rcx + rcx*4 - 0x40], ecx; pop rbx; pop rbp; pop r12; ret; 
0x000000000041da8d: add dword ptr [rcx + rcx*4 - 9], ecx; call qword ptr [rbx + 0x18]; 
0x000000000049412e: add dword ptr [rcx - 0x4977b], ecx; dec dword ptr [rax - 0x75]; adc byte ptr [r8 - 0x7d], cl; ret; 
0x000000000048239a: add dword ptr [rcx - 0x75], ecx; cmp al, 0x24; push 0; lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x00000000004460f1: add dword ptr [rcx - 0x776b7fe], ecx; ret; 
0x0000000000460d39: add dword ptr [rcx - 0x77], ecx; fld qword ptr [rbp + 1]; dec dword ptr [rax - 0x77]; ret; 
0x000000000040bda3: add dword ptr [rcx - 0x77], ecx; or byte ptr [rdi + r9 - 0x4a], r8b; and byte ptr [rcx + 0xf], al; mov dh, 0x45; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000411707: add dword ptr [rcx - 0x77], ecx; push rsi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000468600: add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x0000000000460420: add dword ptr [rcx - 0x77], ecx; xlatb; or byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000450cb4: add dword ptr [rcx - 0x7d], ecx; ret; 
0x000000000044e3e5: add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x0000000000472036: add dword ptr [rcx], eax; ret; 
0x000000000042ecd4: add dword ptr [rcx], ebp; ror byte ptr [rdi], 1; test dword ptr [rax + rax - 0x8b70000], ecx; ret 2; 
0x00000000004794ca: add dword ptr [rcx], ecx; ret 0x3949; 
0x000000000044c9dc: add dword ptr [rcx], esi; shr byte ptr [rdx + 1], cl; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000044e2e0: add dword ptr [rdi + 0x2d], esi; mov eax, 4; syscall; 
0x0000000000483470: add dword ptr [rdi + 0x2d], esi; mov eax, 6; syscall; 
0x000000000044e33f: add dword ptr [rdi + 0x2e], esi; mov eax, 5; syscall; 
0x00000000004834d5: add dword ptr [rdi + 0x30], esi; mov eax, 0x106; syscall; 
0x0000000000405515: add dword ptr [rdi + 0x9e90009], ecx; idiv bh; jmp qword ptr [rsi - 0x70]; 
0x000000000044c42c: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ret 0xda89; 
0x000000000044c43a: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ror dword ptr [rdi], -0x51; ret 0xfee9; 
0x0000000000461ca6: add dword ptr [rdi], ecx; xchg eax, esp; ret 0x2040; 
0x00000000004801fb: add dword ptr [rdx + 0x1c0d8d48], edx; add al, byte ptr [rax]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044c69f: add dword ptr [rdx + 0x2b], 0xe2748104; ret; 
0x000000000044aca0: add dword ptr [rdx + 2], esi; mov byte ptr [rdi], cl; ret; 
0x000000000043b821: add dword ptr [rdx + 4], esi; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004903f6: add dword ptr [rdx + rax*2], 1; ret; 
0x000000000044ca4a: add dword ptr [rdx], ebp; lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000041efd6: add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x000000000040858d: add dword ptr [rip + 0xc51c4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000470de4: add dword ptr [rsi + 0x14], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000424aeb: add dword ptr [rsi + 0x4890ffff], esi; add esp, 0x18; ret; 
0x00000000004242d7: add dword ptr [rsi - 0x33], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000000417a04: add dword ptr [rsi - 0x44], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004173e4: add dword ptr [rsi - 0x4e], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000041764c: add dword ptr [rsi - 0x53], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000420e16: add dword ptr [rsi - 0x69], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000418374: add dword ptr [rsi - 0x73], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004460d2: add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x00000000004460e2: add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000486f0b: add dword ptr [rsi - 0x7b], esp; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x0000000000420e66: add dword ptr [rsi - 0x7f], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401376: add dword ptr [rsi - 0xf], edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000481ad7: add dword ptr es:[rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000426f57: add eax, 0x14eb4; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000478eed: add eax, 0x15748000; and dh, 2; lea rax, qword ptr [rip + 0x7f4]; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000450e83: add eax, 0x15b800; add byte ptr [rax], al; syscall; 
0x000000000045e936: add eax, 0x18c48348; ret; 
0x000000000042709b: add eax, 0x1c560; cmove rax, rdx; ret; 
0x00000000004260b4: add eax, 0x1d317; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x00000000004263bb: add eax, 0x1d870; cmove rax, rdx; ret; 
0x00000000004263fb: add eax, 0x1d9d0; cmove rax, rdx; ret; 
0x0000000000426f04: add eax, 0x1da27; lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x0000000000426174: add eax, 0x1e6c7; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x000000000045e8da: add eax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044dbfa: add eax, 0x20; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444115: add eax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea7a: add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000496c9a: add eax, 0x236d9; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000426be4: add eax, 0x23927; cmove rax, rdx; ret; 
0x0000000000427020: add eax, 0x23edb; cmove rax, rdx; ret; 
0x0000000000426eb0: add eax, 0x2403b; cmove rax, rdx; ret; 
0x0000000000426d50: add eax, 0x241ab; cmove rax, rdx; ret; 
0x0000000000426fb2: add eax, 0x242a9; cmove rax, rdx; ret; 
0x0000000000426e42: add eax, 0x24409; cmove rax, rdx; ret; 
0x00000000004555ba: add eax, 0x2444c749; cmp byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000426ce2: add eax, 0x24579; cmove rax, rdx; ret; 
0x0000000000427004: add eax, 0x24697; cmove rax, rdx; ret; 
0x0000000000426e94: add eax, 0x247f7; cmove rax, rdx; ret; 
0x00000000004261a4: add eax, 0x24807; cmovne rax, rdx; ret; 
0x0000000000426d34: add eax, 0x24967; cmove rax, rdx; ret; 
0x0000000000426dcb: add eax, 0x24de0; cmovne rax, rdx; ret; 
0x0000000000426dac: add eax, 0x24fcf; cmove rax, rdx; ret; 
0x0000000000426df4: add eax, 0x25117; cmove rax, rdx; ret; 
0x00000000004821bb: add eax, 0x260; cmove rax, rdx; ret; 
0x000000000044f1bf: add eax, 0x28c48348; ret; 
0x0000000000420ed0: add eax, 0x2abb; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000044ff49: add eax, 0x2fd0e800; sti; call qword ptr [rbp + 0x48]; 
0x000000000049cf52: add eax, 0x2ffbd; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000420ec2: add eax, 0x3029; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000049cb4d: add eax, 0x302a2; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000049bdb0: add eax, 0x3153b; mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bcfc: add eax, 0x315ef; mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x00000000004995aa: add eax, 0x38b5277; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x000000000048ed9b: add eax, 0x38c48348; ret; 
0x000000000042645e: add eax, 0x39fd; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x00000000004900c5: add eax, 0x3cc5f; adc byte ptr [rax - 0x73], cl; adc eax, 0x11e; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x00000000004905a5: add eax, 0x3d27e; ret; 
0x000000000048f909: add eax, 0x3d6ba; ret; 
0x000000000048f8f2: add eax, 0x3d6d1; add rsp, 8; ret; 
0x000000000048f902: add eax, 0x3d6d9; mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x000000000048f8eb: add eax, 0x3d6f0; mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x000000000044ce2c: add eax, 0x3d8d4800; and dword ptr [rsi + 5], ecx; add al, ch; out 0x60, al; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000044caf6: add eax, 0x3d8d4800; mov dword ptr [rax + 5], edx; add al, ch; sbb al, 0x64; sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000004625bd: add eax, 0x3d8d4800; ret 0x4fe; 
0x000000000044f16a: add eax, 0x3dafe800; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000048c596: add eax, 0x3db55; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x000000000048e732: add eax, 0x3e865; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000044e612: add eax, 0x401f0fc3; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x000000000044dc1a: add eax, 0x40; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444135: add eax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea9a: add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000048c5a0: add eax, 0x40d63; mov qword ptr [rsi], rax; ret; 
0x000000000048c52f: add eax, 0x40ddc; mov rax, r8; ret; 
0x000000000048c43a: add eax, 0x40ed1; ret; 
0x000000000046ec07: add eax, 0x445b0100; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000044c0b7: add eax, 0x4634800; mov esi, 0x3ef00148; jmp rax; 
0x0000000000474fd7: add eax, 0x48000532; mov eax, dword ptr [rdi + rax*8]; jmp rax; 
0x0000000000447908: add eax, 0x48054289; lea eax, dword ptr [rdx + 8]; ret; 
0x0000000000446138: add eax, 0x48054289; mov eax, edi; ret; 
0x0000000000438603: add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448476: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e06: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; ret; 
0x000000000043badf: add eax, 0x487c5162; adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000044ae14: add eax, 0x487cf162; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x0000000000478e1a: add eax, 0x53f61; cmp rax, rdx; lea rdx, qword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000447989: add eax, 0x5428948; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446179: add eax, 0x5428948; mov rax, rdi; ret; 
0x000000000044d75e: add eax, 0x57bbe800; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000044ee9c: add eax, 0x58c48348; ret; 
0x0000000000470990: add eax, 0x5c410100; ret; 
0x000000000044dc3a: add eax, 0x60; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444181: add eax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eaba: add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000044ce33: add eax, 0x60e6e800; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000044cc5b: add eax, 0x62bee800; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000044cafd: add eax, 0x641ce800; sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000004900d4: add eax, 0x67; cmovne rax, rdx; ret; 
0x000000000044c4cc: add eax, 0x6a4de800; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000044c23a: add eax, 0x6cdfe800; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000045c216: add eax, 0x70bd5; ret; 
0x000000000046b545: add eax, 0x72b90000; add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; ret; 
0x0000000000496676: add eax, 0x75c08445; adc ecx, dword ptr [rax + 0x39]; ret 0x575; 
0x000000000042705b: add eax, 0x7600; cmove rax, rdx; ret; 
0x0000000000426c1b: add eax, 0x7710; cmove rax, rdx; ret; 
0x000000000045204b: add eax, 0x77a70; pop rbx; ret; 
0x0000000000452016: add eax, 0x79205; ret; 
0x00000000004536e6: add eax, 0x7a1bd; ret; 
0x0000000000452dce: add eax, 0x7aa21; ret; 
0x0000000000452dc1: add eax, 0x7aa2e; pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x7aa21], eax; ret; 
0x0000000000452d9e: add eax, 0x7aa51; ret; 
0x0000000000452d91: add eax, 0x7aa5e; pop rbx; and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x7aa51], eax; ret; 
0x0000000000452d6d: add eax, 0x7aa82; pop rbx; ret; 
0x0000000000452d61: add eax, 0x7aa8e; and eax, 0xffffffc7; or eax, 0x10; mov dword ptr [rip + 0x7aa82], eax; pop rbx; ret; 
0x0000000000452d2e: add eax, 0x7aac1; ret; 
0x0000000000452d21: add eax, 0x7aace; pop rbx; and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x7aac1], eax; ret; 
0x0000000000452cfe: add eax, 0x7aaf1; ret; 
0x0000000000452cf1: add eax, 0x7aafe; pop rbx; and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x7aaf1], eax; ret; 
0x0000000000452ccd: add eax, 0x7ab22; pop rbx; ret; 
0x0000000000452cc1: add eax, 0x7ab2e; and eax, 0xfffffff8; or eax, 2; mov dword ptr [rip + 0x7ab22], eax; pop rbx; ret; 
0x00000000004504ae: add eax, 0x7abdd; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000450455: add eax, 0x7d3ce; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000000478ef7: add eax, 0x7f4; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x000000000044ce6c: add eax, 0x7feb8; or byte ptr [rax - 0x73], cl; add eax, 0xb17; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000426c65: add eax, 0x8026; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x000000000044c396: add eax, 0x8307e083; clc; add dword ptr [rcx + 0xf], eax; xchg eax, esp; ret 0xfa83; 
0x000000000042d897: add eax, 0x83480000; ret 0x4910; 
0x0000000000441771: add eax, 0x83480000; ret 0xe910; 
0x000000000042d8c5: add eax, 0x83480000; ret 0xeb10; 
0x000000000044790b: add eax, 0x8428d48; ret; 
0x0000000000414017: add eax, 0x8900001b; ret 0xc083; 
0x0000000000407a26: add eax, 0x8944c689; ret 0xeab8; 
0x000000000048facf: add eax, 0x8948ffb7; ret; 
0x000000000041a6a7: add eax, 0x89490000; call 0xffffffffceecba3c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000048217b: add eax, 0x8a0; cmove rax, rdx; ret; 
0x00000000004821b6: add eax, 0x8d480000; add eax, 0x260; cmove rax, rdx; ret; 
0x0000000000478e2b: add eax, 0x8e00; cmove rax, rdx; ret; 
0x000000000045dcab: add eax, 0x90660000; ret; 
0x0000000000426fd3: add eax, 0x9b08; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e63: add eax, 0x9c58; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000426fc1: add eax, 0xa5d62; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000426e51: add eax, 0xa5ed2; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000426d25: add eax, 0xa600a; add cl, byte ptr [rax - 0x73]; adc eax, 0x2491e; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426cf1: add eax, 0xa6032; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000426cd3: add eax, 0xa605c; add cl, byte ptr [rax - 0x73]; adc eax, 0x24530; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426bd5: add eax, 0xa61a9; adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffd0e; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x0000000000424411: add eax, 0xa636a; ret; 
0x0000000000424403: add eax, 0xa6380; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x00000000004263ea: add eax, 0xa6991; cmp rax, rdx; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x0000000000426195: add eax, 0xa6b8f; adc byte ptr [rax - 0x73], cl; adc eax, 0x248be; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x00000000004260ac: add eax, 0xa6cd2; lea rax, qword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x00000000004243be: add eax, 0xa88d9; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000420ed7: add eax, 0xa98a4; ret; 
0x0000000000420ec9: add eax, 0xa98ba; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420dca: add eax, 0xa99d1; add rsp, 0x10; pop rbp; ret; 
0x000000000041fdf5: add eax, 0xaa93e; mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000041fa49: add eax, 0xaad1a; ret; 
0x000000000041fa32: add eax, 0xaad29; ret; 
0x000000000041f9d9: add eax, 0xaad3a; ret; 
0x000000000041f9b3: add eax, 0xaad48; ret; 
0x000000000041f9c9: add eax, 0xaad52; ret; 
0x000000000041f983: add eax, 0xaad80; ret; 
0x000000000041f9a8: add eax, 0xaad83; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f978: add eax, 0xaadb3; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f962: add eax, 0xaadc5; ret; 
0x000000000041f958: add eax, 0xaadd3; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f932: add eax, 0xaadd9; mov dword ptr [rip + 0xaadf3], 1; ret; 
0x000000000041f938: add eax, 0xaadf3; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000041ef66: add eax, 0xab1b5; ret; 
0x0000000000420ebb: add eax, 0xabdb8; lea rax, qword ptr [rip + 0x3029]; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041fa76: add eax, 0xad23d; ret; 
0x000000000041f998: add eax, 0xad317; ret; 
0x000000000041f071: add eax, 0xadbbe; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000044ce74: add eax, 0xb17; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x000000000046121c: add eax, 0xb8480000; ret 0xffff; 
0x0000000000407a1c: add eax, 0xb8c78948; mov edx, 0xf000000; add eax, 0x8944c689; ret 0xeab8; 
0x00000000004304ca: add eax, 0xc0310000; ret; 
0x000000000044798d: add eax, 0xc428d48; ret; 
0x000000000044847d: add eax, 0xc478d48; ret; 
0x0000000000426d03: add eax, 0xc7b8; lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x0000000000401c55: add eax, 0xca5c5; add ebx, esi; ret; 
0x0000000000401f6f: add eax, 0xcae2c; add rsp, 0x88; pop rbx; ret; 
0x0000000000478e1d: add eax, 0xd0394800; lea rdx, qword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000402347: add eax, 0xeb82e800; add al, 0; lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000000412249: add eax, 0xeb830000; add dword ptr [rax - 0x8ff43], eax; jmp qword ptr [rax]; 
0x000000000043896a: add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438973: add eax, 0xf7f0ff3; ret; 
0x0000000000426114: add eax, 0xf97; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x000000000049c819: add eax, 0xfb6e11e8; dec dword ptr [rax - 0x7d]; ret; 
0x000000000040267c: add eax, 0xfffce6e9; dec dword ptr [rbx + 0xca6f815]; add dh, dh; ret 0x7404; 
0x0000000000425774: add eax, 0xfffebee9; jmp qword ptr [rsi + 0xf]; 
0x0000000000425e2b: add eax, 0xfffec6e9; jmp qword ptr [rsi + 0x66]; 
0x00000000004065e8: add eax, 0xfffefbe9; jmp qword ptr [rsi - 0x70]; 
0x00000000004237a4: add eax, 0xffff01e9; jmp qword ptr [rsi + 0xf]; 
0x00000000004083a4: add eax, 0xffff28e9; jmp qword ptr [rsi + 0xf]; 
0x0000000000403e0c: add eax, 0xffff43e9; jmp qword ptr [rsi + 0x66]; 
0x000000000041ce4e: add eax, 0xffff44e9; jmp qword ptr [rsi + 0x66]; 
0x0000000000420e7c: add eax, 0xffff68e9; jmp qword ptr [rsi + 0x66]; 
0x000000000042440a: add eax, 0xfffff581; mov qword ptr [rip + 0xa636a], rax; ret; 
0x00000000004243fc: add eax, 0xfffffaef; mov qword ptr [rip + 0xa6380], rax; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x0000000000453585: add eax, 1; push rax; call rbx; 
0x0000000000482c21: add eax, 1; ret; 
0x0000000000482c18: add eax, 2; ret; 
0x0000000000482c31: add eax, 3; ret; 
0x000000000049c30c: add eax, 8; mov qword ptr [rbx], r8; pop rbx; ret; 
0x000000000045e83d: add eax, dword ptr [0]; ret; 
0x00000000004900c8: add eax, dword ptr [rax]; adc byte ptr [rax - 0x73], cl; adc eax, 0x11e; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x000000000048cb07: add eax, dword ptr [rax]; add al, ch; adc dword ptr [rcx - 7], edi; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000492669: add eax, dword ptr [rax]; add al, ch; jmp qword ptr [rbx]; 
0x000000000048b084: add eax, dword ptr [rax]; add byte ptr [rax + 0x63], cl; ret; 
0x000000000049510c: add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x0000000000470474: add eax, dword ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x00000000004887ff: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887cd: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000049400c: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000495f6e: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x894d; 
0x000000000048804a: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042da77: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441911: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042daa5: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000491d63: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], -0x7d; ret 0x4801; 
0x000000000048e735: add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000041c175: add eax, dword ptr [rax]; add byte ptr [rax], al; mov edx, 1; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000482c73: add eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000044ed95: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000004567f8: add eax, dword ptr [rax]; add byte ptr [rbp - 0x7a7bf00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x00000000004931a4: add eax, dword ptr [rax]; add byte ptr [rbx + 0x3a64315], cl; add dh, dh; ret 0xf03; 
0x000000000048b07b: add eax, dword ptr [rax]; add byte ptr [rbx - 0x70f0c005], al; int1; add eax, dword ptr [rax]; add byte ptr [rax + 0x63], cl; ret; 
0x000000000049621d: add eax, dword ptr [rax]; add byte ptr [rbx - 0x70f0c006], al; syscall; 
0x00000000004155c5: add eax, dword ptr [rax]; add byte ptr [rbx - 0x78f0d008], al; sub eax, 0x89000009; ret 0xc083; 
0x0000000000422ff1: add eax, dword ptr [rax]; add byte ptr [rcx - 0x73], cl; push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x0000000000478cf9: add eax, dword ptr [rax]; add byte ptr [rcx - 0x77], al; ret; 
0x0000000000401895: add eax, dword ptr [rax]; add byte ptr [rcx - 0x77], al; rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x0000000000472805: add eax, dword ptr [rax]; add byte ptr [rcx - 0x7d], al; out dx, eax; add dword ptr [rax - 0x93743], eax; jmp qword ptr [rax]; 
0x0000000000478d99: add eax, dword ptr [rax]; add byte ptr [rsi + 0x80], bh; syscall; 
0x00000000004516fe: add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x0000000000489b2a: add eax, dword ptr [rax]; add dh, dh; ret 0x7403; 
0x000000000048396f: add eax, dword ptr [rax]; add dh, dh; ret 0xf07; 
0x000000000048f8f5: add eax, dword ptr [rax]; add rsp, 8; ret; 
0x00000000004903f3: add eax, dword ptr [rax]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000044c13c: add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000049328c: add eax, dword ptr [rax]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x000000000048ed1c: add eax, dword ptr [rax]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x000000000048fdae: add eax, dword ptr [rax]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000045ca44: add eax, dword ptr [rax]; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000048c599: add eax, dword ptr [rax]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x000000000049bdb3: add eax, dword ptr [rax]; mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bcff: add eax, dword ptr [rax]; mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000048f905: add eax, dword ptr [rax]; mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x000000000048f8ee: add eax, dword ptr [rax]; mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x000000000049bd06: add eax, dword ptr [rax]; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x0000000000452098: add eax, dword ptr [rax]; nop word ptr [rax + rax]; ret; 
0x000000000044c121: add eax, dword ptr [rax]; ret; 
0x0000000000494d9d: add eax, dword ptr [rbp - 0x72de8b2e]; dec dword ptr [rbp + r9*4 + 0x74]; ret; 
0x000000000044fc8f: add eax, dword ptr [rbx + 0x94801e0]; ret 0x8948; 
0x0000000000494d73: add eax, dword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000452e84: add eax, dword ptr [rcx + 0x5c]; shl eax, cl; ret; 
0x0000000000450609: add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000491b21: add eax, dword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x0000000000496ca4: add eax, ebp; jmp rax; 
0x0000000000498557: add eax, ebx; jmp rax; 
0x0000000000443ab8: add eax, ecx; add rax, rdi; vzeroupper; ret; 
0x000000000041ed19: add eax, ecx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041ecdd: add eax, ecx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000042e3b9: add eax, ecx; ret; 
0x000000000044ab06: add eax, ecx; sub rax, rdi; ret; 
0x000000000044da56: add eax, ecx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044404d: add eax, ecx; sub rax, rdx; vzeroupper; ret; 
0x000000000042e8f6: add eax, ecx; vzeroupper; ret; 
0x000000000042e3b6: add eax, edi; add rax, rcx; ret; 
0x000000000044da53: add eax, edi; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044404a: add eax, edi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042e8f3: add eax, edi; add rax, rcx; vzeroupper; ret; 
0x00000000004995b4: add eax, edi; jmp rax; 
0x000000000042e5e4: add eax, edi; ret; 
0x000000000044dbda: add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444105: add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea6a: add eax, edi; vzeroupper; ret; 
0x0000000000443dc6: add eax, edx; sub rax, rdi; ret; 
0x000000000044d92b: add eax, edx; sub rax, rdi; shr rax, 2; ret; 
0x000000000048c36a: add eax, esi; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000049818a: add ebp, ebx; ret; 
0x0000000000494f09: add ebx, 8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000004956de: add ebx, dword ptr [rax + 0x5a]; pop rbx; ret; 
0x000000000041d96e: add ebx, dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000041fde1: add ebx, dword ptr [rbx + 0x5d]; ret; 
0x000000000041de1f: add ebx, dword ptr [rbx - 0x48]; add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000046161b: add ebx, ebp; cmp eax, 0xbe0f9066; rol byte ptr [rbx - 0x57ccf16], 1; or dword ptr [rdi], ecx; xchg eax, edi; ret 0xd284; 
0x0000000000416f98: add ebx, ebp; ret; 
0x0000000000438b33: add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x0000000000401c5a: add ebx, esi; ret; 
0x0000000000446125: add ecx, dword ptr [r9 - 0x76b7fcbe]; clc; ret; 
0x0000000000484a5f: add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x00000000004207b3: add ecx, dword ptr [rax + 0x29]; ret; 
0x000000000048fc8c: add ecx, dword ptr [rax - 0x75]; sbb byte ptr [r8 - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x00000000004504ab: add ecx, dword ptr [rax - 0x77]; add eax, 0x7abdd; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000446129: add ecx, dword ptr [rax - 0x77]; clc; ret; 
0x000000000041d8ae: add ecx, dword ptr [rax - 0x7b]; push qword ptr [rsp + rax - 0x58]; add dword ptr [rax + rbp - 0x77], esi; ret 0xc883; 
0x0000000000479665: add ecx, dword ptr [rax - 0x7d]; ret 0x4801; 
0x0000000000498499: add ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000040841f: add ecx, dword ptr [rbp + rcx*4 + 0x64]; ret; 
0x000000000049c227: add ecx, dword ptr [rbp - 0x75]; add byte ptr [rcx + rcx*4 + 3], cl; pop rbx; ret; 
0x00000000004388a2: add ecx, dword ptr [rbx + 0x357890e]; mov dword ptr [rdi], ecx; ret; 
0x00000000004483e4: add ecx, dword ptr [rcx + 0x357890f]; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000447da4: add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x0000000000456a33: add ecx, dword ptr [rcx + 0x39]; ret 0xdf75; 
0x0000000000455749: add ecx, dword ptr [rcx + 0x39]; ret; 
0x00000000004995ae: add ecx, dword ptr [rcx + 0x63]; add al, 0x87; add rax, r15; jmp rax; 
0x0000000000494d74: add ecx, dword ptr [rcx + rcx*4 - 0x1a]; mov edi, ebp; call rax; 
0x0000000000446126: add ecx, dword ptr [rcx - 0x76b7fcbe]; clc; ret; 
0x000000000047bd19: add ecx, dword ptr [rdi + 0xc8b0002]; mov cl, byte ptr [rbx - 0x37d67dfc]; ret; 
0x0000000000455ca2: add ecx, dword ptr [rdi + r9 + 0x49]; ret 0xc149; 
0x0000000000455ca3: add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x000000000044d575: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000044d5c5: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x0000000000498658: add ecx, eax; jmp rcx; 
0x000000000046c1c1: add ecx, eax; mov eax, r9d; ret; 
0x0000000000429d20: add ecx, eax; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000045a147: add ecx, ebp; ret 0xfffc; 
0x0000000000422119: add ecx, ebp; ret; 
0x00000000004978e8: add ecx, edi; jmp rcx; 
0x00000000004883d9: add edi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000478d96: add edi, 0x308; mov esi, 0x80; syscall; 
0x0000000000426022: add edi, dword ptr [rax + 1]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407d51: add edi, dword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000045d5f2: add edi, eax; pop rbx; pop r14; mov byte ptr [rdi], 0; ret; 
0x000000000046d6fc: add edi, eax; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x000000000045ee69: add edi, ebp; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x000000000041ec32: add edx, 0x60; mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x0000000000468122: add edx, eax; mov rax, rdx; pop rbx; ret; 
0x0000000000498c62: add edx, ebp; jmp rdx; 
0x0000000000498e57: add edx, ecx; jmp rdx; 
0x0000000000481c19: add esi, dword ptr [rax]; add al, byte ptr [rax]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000402672: add esi, dword ptr [rax]; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x0000000000452e5c: add esi, dword ptr [rbp - 0x51]; add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000048fc0e: add esi, dword ptr [rdi - 0x7fe0f001]; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x00000000004120e5: add esi, eax; test dword ptr [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x00000000004726db: add esi, eax; test eax, ecx; idiv bh; jmp qword ptr [rax]; 
0x0000000000438a53: add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000044aece: add esi, ebx; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x00000000004236e1: add esi, ebx; stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000044c21c: add esi, edi; int1; mov eax, eax; ret; 
0x0000000000492bc7: add esi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000048ada8: add esi, esi; ret 0x7501; 
0x0000000000498310: add esi, esi; ret 0xf304; 
0x0000000000493492: add esi, esi; syscall; 
0x000000000044aa4d: add esp, 0x100; sub rax, rdx; ret; 
0x0000000000497662: add esp, 0x10; and eax, 2; sub rax, 1; pop rbx; ret; 
0x00000000004976eb: add esp, 0x10; mov eax, 2; pop rbx; ret; 
0x000000000045cba0: add esp, 0x10; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000477206: add esp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000497706: add esp, 0x10; or rax, 1; pop rbx; ret; 
0x000000000045cb78: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000420434: add esp, 0x10; pop rbp; ret; 
0x000000000041d615: add esp, 0x10; pop rbx; jmp rax; 
0x0000000000418b06: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004906d1: add esp, 0x10; pop rbx; ret; 
0x000000000048c669: add esp, 0x10; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000048efdf: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000407a6c: add esp, 0x118; ret; 
0x000000000045ebb6: add esp, 0x148; ret; 
0x0000000000424afe: add esp, 0x18; jmp rax; 
0x00000000004711a8: add esp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000419507: add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000424af1: add esp, 0x18; ret; 
0x0000000000499a12: add esp, 0x198; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000452e60: add esp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000041db71: add esp, 0x20; pop rbx; jmp rax; 
0x000000000045c49d: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000044cf36: add esp, 0x20; pop rbx; ret; 
0x000000000041dda3: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000049a077: add esp, 0x278; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000049a084: add esp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000041739a: add esp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000495d6c: add esp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000046bb5d: add esp, 0x28; pop rbx; pop rbp; ret; 
0x000000000044e2ae: add esp, 0x28; ret; 
0x000000000046be7d: add esp, 0x30; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000493b64: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000041d00a: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000041eab9: add esp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000419dd4: add esp, 0x38; pop rbx; pop rbp; ret; 
0x000000000046bd66: add esp, 0x38; ret; 
0x000000000048e860: add esp, 0x48; jmp qword ptr [rax]; 
0x000000000044df05: add esp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000048ea9e: add esp, 0x48; ret; 
0x000000000048e7de: add esp, 0x58; jmp qword ptr [rax]; 
0x000000000044ee9e: add esp, 0x58; ret; 
0x000000000044e40c: add esp, 0x68; pop rbp; pop r12; ret; 
0x00000000004822fe: add esp, 0x68; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000044ca7a: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000000401f75: add esp, 0x88; pop rbx; ret; 
0x0000000000402972: add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000000045ecaf: add esp, 0x98; ret; 
0x000000000041add6: add esp, 0xa0; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000047748a: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000048306e: add esp, 0xa8; pop rbp; pop r12; ret; 
0x000000000041b03d: add esp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000045c36f: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000049053c: add esp, 0xc8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408f2d: add esp, 0xd8; ret; 
0x000000000041760d: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041988e: add esp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000000454c61: add esp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x00000000004198ab: add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000048cd02: add esp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000046bde1: add esp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004179c4: add esp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000044f0ee: add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000041b16a: add esp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000000493aad: add esp, 8; movzx eax, al; neg eax; ret; 
0x0000000000482ec6: add esp, 8; pop rbp; pop r12; ret; 
0x0000000000406f0a: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004031d7: add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000423a97: add esp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000454c54: add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000004085f5: add esp, 8; xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000048db3e: add esp, edi; jmp qword ptr [rsi + 0x66]; 
0x0000000000408803: add qword ptr [r8 - 0x7d], rcx; ret; 
0x000000000046041f: add qword ptr [r9 - 0x77], r9; xlatb; or byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000040f785: add qword ptr [rax - 0x77], rcx; lea edx, dword ptr [rax - 0x77000005]; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000040cee4: add qword ptr [rax - 0x77], rcx; lea edx, dword ptr [rax - 0x77000005]; add cl, byte ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000426f59: add qword ptr [rax], r8; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x00000000004823a3: add qword ptr [rbp + rcx*4 + 0x4c], rcx; and al, 0x28; call rbx; 
0x000000000040bda2: add qword ptr [rcx - 0x77], rcx; or byte ptr [rdi + r9 - 0x4a], r8b; and byte ptr [rcx + 0xf], al; mov dh, 0x45; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000040858c: add qword ptr [rip + 0xc51c4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000438b32: add r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x000000000046be7c: add r12d, 0x30; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000438ac2: add r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x0000000000438a52: add r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x0000000000407d50: add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000045ee68: add r15, r13; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000000401c4f: add r15b, dil; rcr byte ptr [rbp - 0x3a], 1; add eax, 0xca5c5; add ebx, esi; ret; 
0x000000000047fef0: add r8, qword ptr [r8]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042daa4: add r8, qword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000426ce4: add r8b, byte ptr [r8]; cmove rax, rdx; ret; 
0x0000000000426dcd: add r8b, byte ptr [r8]; cmovne rax, rdx; ret; 
0x00000000004489d7: add r8b, byte ptr [r8]; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x0000000000426cdd: add r8b, byte ptr [r8]; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426e8f: add r8b, byte ptr [r8]; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x0000000000426da7: add r8b, byte ptr [r8]; lea rax, qword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x00000000004804e0: add r8b, byte ptr [r8]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004447b7: add r8b, byte ptr [r8]; vzeroupper; ret; 
0x0000000000426e44: add r8b, byte ptr [rax]; cmove rax, rdx; ret; 
0x0000000000426fff: add r8b, byte ptr [rax]; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426dc6: add r8b, byte ptr [rax]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x000000000046c1c0: add r9d, eax; mov eax, r9d; ret; 
0x00000000004816b2: add rax, -0x7cb80000; ret 0xe910; 
0x000000000045e8d9: add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044dbf9: add rax, 0x20; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444114: add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea79: add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000044ce2b: add rax, 0x3d8d4800; and dword ptr [rsi + 5], ecx; add al, ch; out 0x60, al; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000044dc19: add rax, 0x40; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444134: add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea99: add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000044dc39: add rax, 0x60; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444180: add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eab9: add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000044ce32: add rax, 0x60e6e800; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000044cc5a: add rax, 0x62bee800; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000482c20: add rax, 1; ret; 
0x0000000000482c17: add rax, 2; ret; 
0x0000000000482c30: add rax, 3; ret; 
0x000000000049c30b: add rax, 8; mov qword ptr [rbx], r8; pop rbx; ret; 
0x000000000045e83c: add rax, qword ptr [0]; ret; 
0x000000000049400b: add rax, qword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000494d72: add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000491b20: add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000045e83b: add rax, qword ptr fs:[0]; ret; 
0x0000000000498556: add rax, r11; jmp rax; 
0x0000000000496ca3: add rax, r13; jmp rax; 
0x00000000004995b3: add rax, r15; jmp rax; 
0x0000000000443ab7: add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000041ed18: add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041ecdc: add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000042e3b8: add rax, rcx; ret; 
0x000000000044ab05: add rax, rcx; sub rax, rdi; ret; 
0x000000000044da55: add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044404c: add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042e8f5: add rax, rcx; vzeroupper; ret; 
0x000000000042e3b5: add rax, rdi; add rax, rcx; ret; 
0x000000000044da52: add rax, rdi; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444049: add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042e8f2: add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000042e5e3: add rax, rdi; ret; 
0x000000000044dbd9: add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444104: add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea69: add rax, rdi; vzeroupper; ret; 
0x0000000000443dc5: add rax, rdx; sub rax, rdi; ret; 
0x000000000044d92a: add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000494f08: add rbx, 8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000004978e7: add rcx, r15; jmp rcx; 
0x0000000000429d1f: add rcx, r8; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000498657: add rcx, rax; jmp rcx; 
0x0000000000497a3c: add rcx, rdi; jmp rcx; 
0x00000000004883d8: add rdi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000478d95: add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000045d5f1: add rdi, rax; pop rbx; pop r14; mov byte ptr [rdi], 0; ret; 
0x000000000041ec31: add rdx, 0x60; mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x0000000000468121: add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000000498c61: add rdx, rbp; jmp rdx; 
0x0000000000498e56: add rdx, rcx; jmp rdx; 
0x000000000044aa4c: add rsp, 0x100; sub rax, rdx; ret; 
0x0000000000497661: add rsp, 0x10; and eax, 2; sub rax, 1; pop rbx; ret; 
0x00000000004976ea: add rsp, 0x10; mov eax, 2; pop rbx; ret; 
0x000000000045cb9f: add rsp, 0x10; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000477205: add rsp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000497705: add rsp, 0x10; or rax, 1; pop rbx; ret; 
0x000000000045cb77: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000420433: add rsp, 0x10; pop rbp; ret; 
0x000000000041d614: add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000418b05: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004906d0: add rsp, 0x10; pop rbx; ret; 
0x000000000048c668: add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000048efde: add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000407a6b: add rsp, 0x118; ret; 
0x000000000045ebb5: add rsp, 0x148; ret; 
0x0000000000424afd: add rsp, 0x18; jmp rax; 
0x00000000004711a7: add rsp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000419506: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000424af0: add rsp, 0x18; ret; 
0x0000000000499a11: add rsp, 0x198; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000452e5f: add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000041db70: add rsp, 0x20; pop rbx; jmp rax; 
0x000000000045c49c: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000044cf35: add rsp, 0x20; pop rbx; ret; 
0x000000000041dda2: add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000049a076: add rsp, 0x278; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000049a083: add rsp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000417399: add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000495d6b: add rsp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000046bb5c: add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000044e2ad: add rsp, 0x28; ret; 
0x0000000000493b63: add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000041d009: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000000041eab8: add rsp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000419dd3: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000046bd65: add rsp, 0x38; ret; 
0x000000000048e85f: add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000044df04: add rsp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000048ea9d: add rsp, 0x48; ret; 
0x000000000048e7dd: add rsp, 0x58; jmp qword ptr [rax]; 
0x000000000044ee9d: add rsp, 0x58; ret; 
0x000000000044e40b: add rsp, 0x68; pop rbp; pop r12; ret; 
0x00000000004822fd: add rsp, 0x68; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000044ca79: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000000401f74: add rsp, 0x88; pop rbx; ret; 
0x0000000000402971: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000000045ecae: add rsp, 0x98; ret; 
0x000000000041add5: add rsp, 0xa0; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000477489: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000048306d: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000041b03c: add rsp, 0xa8; pop rbx; pop rbp; ret; 
0x000000000045c36e: add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000049053b: add rsp, 0xc8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408f2c: add rsp, 0xd8; ret; 
0x000000000041760c: add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041988d: add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000000454c60: add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x00000000004198aa: add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000048cd01: add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000046bde0: add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004179c3: add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000044f0ed: add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000041b169: add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000000493aac: add rsp, 8; movzx eax, al; neg eax; ret; 
0x0000000000482ec5: add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000406f09: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004031d6: add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x0000000000423a96: add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000454c53: add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000004085f4: add rsp, 8; xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000426fbe: add sil, sil; add eax, 0xa5d62; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000426e4e: add sil, sil; add eax, 0xa5ed2; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000426cee: add sil, sil; add eax, 0xa6032; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x00000000004903f5: add word ptr [rdx + rax*2], 1; ret; 
0x0000000000418148: and al, 0; add bl, ch; ret; 
0x000000000047169a: and al, 0; add byte ptr [rax - 0x75], cl; test dword ptr [rax], edi; idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x000000000048e8a3: and al, 0; add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000048eff4: and al, 0; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000047858b: and al, 0; add byte ptr [rax], al; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000041940f: and al, 0; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000499f48: and al, 0x10; add rsp, 0x28; ret; 
0x00000000004225d8: and al, 0x10; call rax; 
0x0000000000422572: and al, 0x10; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rax; call rsi; 
0x000000000044e59f: and al, 0x10; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000044e4ff: and al, 0x10; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x00000000004025b7: and al, 0x10; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000048effc: and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000048ef9f: and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000041dba0: and al, 0x10; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000044cd6d: and al, 0x10; mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000045f14d: and al, 0x10; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000000044ca47: and al, 0x10; push 1; push 0; lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000044c9d9: and al, 0x10; push 1; xor edx, edx; push 1; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x0000000000424afb: and al, 0x18; add rsp, 0x18; jmp rax; 
0x000000000048b62a: and al, 0x18; call 0x8af50; add rsp, 0xd8; ret; 
0x00000000004025bc: and al, 0x18; call rax; 
0x000000000044cd75: and al, 0x18; call rbx; 
0x000000000048efa4: and al, 0x18; call rcx; 
0x000000000044f672: and al, 0x18; mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x00000000004225d3: and al, 0x18; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000044d503: and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000044e59a: and al, 0x18; mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000044e4fa: and al, 0x18; mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x000000000041db9b: and al, 0x18; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000004570ce: and al, 0x18; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045ad98: and al, 0x18; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000456b82: and al, 0x18; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x0000000000424593: and al, 0x18; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000453510: and al, 0x18; xor r8d, r8d; call rbx; 
0x000000000045cb75: and al, 0x20; add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000459731: and al, 0x20; call rax; 
0x000000000044c9e4: and al, 0x20; call rbx; 
0x000000000044d685: and al, 0x20; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000456555: and al, 0x20; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x000000000045632f: and al, 0x20; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045604e: and al, 0x20; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x000000000045589b: and al, 0x28; call rax; 
0x00000000004823a8: and al, 0x28; call rbx; 
0x000000000048e84e: and al, 0x28; mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7cc: and al, 0x28; mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000425313: and al, 0x28; mov rdi, r12; call rax; 
0x0000000000456ebe: and al, 0x28; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000048358c: and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000045633e: and al, 0x30; call rax; 
0x000000000044cc1f: and al, 0x30; call rbx; 
0x000000000048e853: and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d1: and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000458294: and al, 0x30; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000459722: and al, 0x30; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000466cc1: and al, 0x31; inc dword ptr [rcx - 0x45]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000048e858: and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d6: and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000458afa: and al, 0x38; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000046c16f: and al, 0x40; add al, 0; add cl, ch; mov ebp, 0xe8fffffd; ret 0xfe46; 
0x000000000048e85d: and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7db: and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000000045829e: and al, 0x40; call rbx; 
0x0000000000458b04: and al, 0x40; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004570d3: and al, 0x40; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000456ec3: and al, 0x40; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x00000000004795c4: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000000407a67: and al, 0x44; mov eax, eax; add rsp, 0x118; ret; 
0x000000000041d638: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x000000000049a815: and al, 0x48; add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x00000000004570d8: and al, 0x48; call rbx; 
0x000000000044f67f: and al, 0x48; mov dword ptr [rsp + 0x10], ebx; call rax; 
0x000000000041b46a: and al, 0x48; mov edi, ebp; call rax; 
0x000000000048feab: and al, 0x48; mov edx, dword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000456ec8: and al, 0x48; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045972c: and al, 0x48; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000458299: and al, 0x48; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000458aff: and al, 0x48; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000407d53: and al, 0x4c; mov edi, esp; call rcx; 
0x0000000000407bd4: and al, 0x4c; mov edx, esi; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000041da88: and al, 0x4d; lea edi, dword ptr [rsp + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000045a38b: and al, 0x50; call rbx; 
0x000000000047046e: and al, 0x50; cmp dword ptr [rdi], ecx; test byte ptr [rbx], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x000000000045781a: and al, 0x50; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000459727: and al, 0x50; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000045655a: and al, 0x50; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x00000000004568e8: and al, 0x50; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000455891: and al, 0x50; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000456334: and al, 0x50; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x0000000000497972: and al, 0x58; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rcx]; 
0x000000000045655f: and al, 0x58; call rbx; 
0x00000000004568ed: and al, 0x58; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000455896: and al, 0x58; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000456339: and al, 0x58; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045a386: and al, 0x58; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x0000000000456053: and al, 0x58; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x0000000000455dbf: and al, 0x58; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000491b1e: and al, 0x5b; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000041fdfd: and al, 0x5d; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000456058: and al, 0x60; call rbx; 
0x0000000000455dc4: and al, 0x60; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000455dba: and al, 0x68; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000048239e: and al, 0x6a; add byte ptr [rax - 0x73], cl; add qword ptr [rbp + rcx*4 + 0x4c], rcx; and al, 0x28; call rbx; 
0x0000000000402351: and al, 0x70; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000000045ca2b: and al, 0x83; call 0x8485333; pop rbx; ret; 
0x0000000000498aab: and al, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000046fcb7: and al, 0xa0; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000498630: and al, 0xb0; add byte ptr [rax], al; add byte ptr [rcx - 0x80], al; call qword ptr [rax + 0xf]; 
0x0000000000484a0d: and al, 0xb8; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x00000000004181da: and al, 0xb; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000499b3b: and al, 0xbf; add dword ptr [rax], eax; add byte ptr [rax], al; call rax; 
0x0000000000485306: and al, 0xc0; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x000000000041d633: and al, 0xc; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000044f677: and al, 0xc; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x00000000004025b2: and al, 0xc; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000473cb5: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000413e96: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x00000000004852f9: and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x0000000000468ed9: and al, 0xe8; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x000000000046bc25: and al, 0xe8; pinsrw xmm0, eax, 6; ret; 
0x0000000000468ee2: and al, 0xe8; ret; 
0x0000000000468ede: and al, 0xf0; fld xword ptr [rsp - 0x18]; ret; 
0x000000000046bc1f: and al, 0xf0; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x000000000049d033: and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x000000000048cde0: and al, 0xfc; inc dword ptr [rbp + 0x481975c0]; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x000000000045ee15: and al, 1; mov rdi, r12; call rbx; 
0x000000000041da8c: and al, 1; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000048c658: and al, 8; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000041dba5: and al, 8; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000044e524: and al, 8; add rsp, 0x28; ret; 
0x000000000044e51a: and al, 8; call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000407bdb: and al, 8; call rax; 
0x000000000044e5a6: and al, 8; mov eax, 1; syscall; 
0x0000000000418985: and al, 8; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000422577: and al, 8; mov qword ptr [rsp], rax; call rsi; 
0x0000000000418d21: and al, 8; mov rdi, r15; call rax; 
0x0000000000407d48: and al, 8; mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407b68: and al, 8; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000045ee27: and al, 8; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000000407cfe: and al, 8; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000044e506: and al, 8; xor eax, eax; syscall; 
0x000000000042140b: and al, 8; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000044491a: and al, byte ptr [rsp - 0xb7f68c]; ret 0xc148; 
0x000000000042701a: and bh, byte ptr [rsi]; add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000419187: and byte ptr [r8 + 1], r9b; ret; 
0x00000000004231e2: and byte ptr [r9 - 0x75], cl; push rcx; or dh, dh; ret 0xf04; 
0x000000000041d556: and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000041ff24: and byte ptr [rax + 0x3948000a], ch; sal byte ptr [rbp + 1], 1; ret; 
0x00000000004238bd: and byte ptr [rax + 0x39], cl; ret 0x4273; 
0x0000000000492793: and byte ptr [rax + 0x39], cl; ret 0x840f; 
0x0000000000422ff7: and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x000000000041879e: and byte ptr [rax + 0x39], cl; ret 0x894c; 
0x000000000049c502: and byte ptr [rax + 0x39], cl; ret; 
0x0000000000478582: and byte ptr [rax + 0x3b], cl; push rax; sbb byte ptr [rsi + 0x1f], dh; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000044dbfc: and byte ptr [rax + 1], cl; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444117: and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea7c: and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x00000000004021dc: and byte ptr [rax + 1], cl; ret 0xb70f; 
0x0000000000419188: and byte ptr [rax + 1], cl; ret; 
0x000000000041466a: and byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb2cc8]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d23: and byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb360f]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000414713: and byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414aee: and byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a55: and byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000049b5ba: and byte ptr [rax - 0x75], cl; push rsp; ret 0x4910; 
0x000000000044d686: and byte ptr [rax - 0x77], cl; out dx, eax; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x00000000004540bb: and byte ptr [rax - 0x77], cl; ret; 
0x000000000049a029: and byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004879d4: and byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x000000000049a7bc: and byte ptr [rax - 0x80], al; call qword ptr [rax + 0xf]; 
0x000000000041af82: and byte ptr [rax - 1], bh; pop rbx; ret; 
0x0000000000499f3d: and byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x48], 0x8b; and al, 0x10; add rsp, 0x28; ret; 
0x0000000000450027: and byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret; 
0x0000000000499ffa: and byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000473e14: and byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x0000000000474fcc: and byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000044c1db: and byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000496297: and byte ptr [rax], al; add byte ptr [rcx + 0xf], al; xchg eax, esp; ret; 
0x00000000004020e8: and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x0000000000426fcb: and byte ptr [rbp + 0x42], dh; and edx, 8; lea rax, qword ptr [rip + 0x9b08]; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e5b: and byte ptr [rbp + 0x42], dh; and edx, 8; lea rax, qword ptr [rip + 0x9c58]; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000426cfb: and byte ptr [rbp + 0x42], dh; and edx, 8; lea rax, qword ptr [rip + 0xc7b8]; lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x0000000000470457: and byte ptr [rbp + 0x63480156], cl; ror byte ptr [rax + 0x39], cl; ret 0x9c0f; 
0x000000000048d3d4: and byte ptr [rbp + rcx*4 + 0x43], cl; adc al, ch; xchg eax, edx; xor eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000045c49f: and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000424404: and byte ptr [rbx + 0xa], 0; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x000000000048f123: and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000040bdab: and byte ptr [rcx + 0xf], al; mov dh, 0x45; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000404bb9: and byte ptr [rcx + 0xf], al; xchg eax, esp; ret; 
0x0000000000467819: and byte ptr [rcx + 0xfffffe2], al; add byte ptr [rcx], cl; ret 0x8f74; 
0x000000000046f40d: and byte ptr [rcx + 9], cl; ret; 
0x0000000000411b9b: and byte ptr [rcx + rcx*4 - 9], cl; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000408337: and byte ptr [rcx - 0x353eb711], cl; adc dword ptr [rax + rcx*2 + 0x33], esp; adc al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x00000000004231e3: and byte ptr [rcx - 0x75], cl; push rcx; or dh, dh; ret 0xf04; 
0x000000000048511a: and byte ptr [rcx - 0x75], cl; sub byte ptr [rax + 0x39], r9b; ret 0x870f; 
0x000000000049a0fc: and byte ptr [rcx - 0x77], cl; fmul dword ptr [rcx + rcx*4 - 0x17]; mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x000000000046bba1: and byte ptr [rcx], cl; ret 0x9574; 
0x000000000041d557: and byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000044af10: and byte ptr [rdi + 0x7e], dh; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044bc45: and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044b125: and byte ptr [rdi], cl; adc dword ptr [rdi + 0x30], edi; movups xmmword ptr [r11], xmm8; ret; 
0x000000000049914d: and byte ptr [rdi], cl; lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff]; ret 0x8941; 
0x0000000000429c04: and byte ptr [rdi], cl; mov dh, 0x54; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000000448b30: and byte ptr [rdi], cl; test ecx, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x000000000044bbd5: and byte ptr [rdi], cl; xchg dword ptr [rax - 0xd000000], eax; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043b7ba: and byte ptr [rdx + 0x14], dh; vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000044ac5c: and byte ptr [rdx + 0xa], dh; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000482398: and byte ptr [rdx + 1], ch; mov rdi, qword ptr [r12]; push 0; lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000042f52a: and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042f525: and byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044c198: and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000042ea4c: and ch, al; std; xlatb; rol dword ptr [rbp + 0x311b75c0], -0x40; vzeroupper; ret; 
0x0000000000499c2d: and cl, byte ptr [rcx - 0x77]; call 0x49f32581; mov edx, dword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000046fb88: and cl, ch; push rdx; idiv edi; jmp qword ptr [rsi - 0x70]; 
0x000000000049b71e: and cl, ch; ret 0xfffb; 
0x00000000004573a7: and cl, ch; ret; 
0x000000000044c103: and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000426f52: and dh, 2; lea rax, qword ptr [rip + 0x14eb4]; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000426459: and dh, 2; lea rax, qword ptr [rip + 0x39fd]; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x0000000000478ef2: and dh, 2; lea rax, qword ptr [rip + 0x7f4]; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000426c60: and dh, 2; lea rax, qword ptr [rip + 0x8026]; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x000000000044dd4d: and dh, ah; mov edi, edx; mov eax, r8d; syscall; 
0x0000000000450941: and dh, al; sub byte ptr [r9], r8b; ret; 
0x0000000000421907: and dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x0000000000491c5e: and dword ptr [rax - 0x4617fffe], eax; adc dh, bh; jmp qword ptr [rsi + 0xf]; 
0x000000000048f7fe: and dword ptr [rax - 0x7b], ecx; sal byte ptr [rbp + 0x5c], 0xc7; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x0000000000415eb9: and dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret; 
0x000000000045de9c: and dword ptr [rbp + 4], ebx; add al, ch; jnp 0x5def3; cli; jmp qword ptr [rsi + 0x66]; 
0x000000000041e14b: and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041e1a3: and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000456a21: and dword ptr [rcx - 0x77], ecx; add byte ptr [r15 + rcx - 0x4a], r8b; dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x000000000042ed6e: and dword ptr [rcx - 0x77], ecx; ret; 
0x000000000044ce31: and dword ptr [rsi + 5], ecx; add al, ch; out 0x60, al; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000045e83f: and eax, 0; ret; 
0x000000000048f69a: and eax, 0x2c7; add byte ptr [rax], al; mov eax, 1; ret; 
0x0000000000408324: and eax, 0x30; call rax; 
0x0000000000408306: and eax, 0x30; call rdx; 
0x000000000044c11e: and eax, 0x3fc00; ret; 
0x000000000044c218: and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000044c169: and eax, 0x3fffc00; ret; 
0x000000000041e028: and eax, 0x48000000; mov dword ptr [rdi + 0xa8], 0; ret; 
0x000000000049aa0a: and eax, 0x48028b48; add esp, 8; ret; 
0x000000000044c201: and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000044c1b7: and eax, 0x7ff80000; ret; 
0x0000000000468e64: and eax, 0x7fffff; or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x0000000000474308: and eax, 0x83480000; ret; 
0x00000000004956d9: and eax, 0x8948ffff; add ebx, dword ptr [rax + 0x5a]; pop rbx; ret; 
0x000000000046eb4c: and eax, 0x97e9fff9; out 0xff, al; jmp qword ptr [rsi + 0x66]; 
0x0000000000430aa0: and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000004301d3: and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000401f6a: and eax, 0xffffffc0; mov qword ptr [rip + 0xcae2c], rax; add rsp, 0x88; pop rbx; ret; 
0x0000000000452d66: and eax, 0xffffffc7; or eax, 0x10; mov dword ptr [rip + 0x7aa82], eax; pop rbx; ret; 
0x0000000000452dc7: and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x7aa21], eax; ret; 
0x0000000000452d97: and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x7aa51], eax; ret; 
0x000000000041fa07: and eax, 0xfffffff0; sub rax, 0x11; shr rax, 4; lea rdx, qword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x000000000049c305: and eax, 0xfffffff8; mov r8, qword ptr [rax]; add rax, 8; mov qword ptr [rbx], r8; pop rbx; ret; 
0x0000000000452cf7: and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x7aaf1], eax; ret; 
0x0000000000452cc6: and eax, 0xfffffff8; or eax, 2; mov dword ptr [rip + 0x7ab22], eax; pop rbx; ret; 
0x0000000000452d27: and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x7aac1], eax; ret; 
0x0000000000425821: and eax, 1; cmovne rax, rdx; ret; 
0x000000000044f55e: and eax, 1; or rdi, rax; mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x00000000004679dc: and eax, 2; sub eax, 1; ret; 
0x0000000000497665: and eax, 2; sub rax, 1; pop rbx; ret; 
0x000000000049aa1c: and eax, dword ptr [rax - 0x80]; call qword ptr [rax]; 
0x0000000000415d02: and eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000044ff48: and eax, dword ptr [rip + 0x2fd0e800]; sti; call qword ptr [rbp + 0x48]; 
0x0000000000478e19: and eax, dword ptr [rip + 0x53f61]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x00000000004263e9: and eax, dword ptr [rip + 0xa6991]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x000000000041e14c: and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041e1a4: and ebp, edi; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041a684: and ebx, dword ptr [rbx + 0x4c]; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004953a4: and ecx, 0x39447fff; ret; 
0x000000000044c138: and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000430aa5: and ecx, 0xff; sub eax, ecx; ret; 
0x00000000004301d8: and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000420534: and ecx, dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000450602: and ecx, dword ptr [rsi + 0x10]; lea rcx, qword ptr [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000490d8f: and edi, esi; jmp qword ptr [rsi + 0x66]; 
0x000000000041fa65: and edx, 0xfffffff0; test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x0000000000426fce: and edx, 8; lea rax, qword ptr [rip + 0x9b08]; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e5e: and edx, 8; lea rax, qword ptr [rip + 0x9c58]; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000426cfe: and edx, 8; lea rax, qword ptr [rip + 0xc7b8]; lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x0000000000481e1e: and edx, eax; cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000468ed0: and esi, 0xd6097fff; mov qword ptr [rsp - 0x18], rax; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000490b1f: and esi, edi; jmp qword ptr [rsi + 0x66]; 
0x000000000042ea4b: and r13b, r8b; std; xlatb; rol dword ptr [rbp + 0x311b75c0], -0x40; vzeroupper; ret; 
0x000000000041fa06: and rax, 0xfffffffffffffff0; sub rax, 0x11; shr rax, 4; lea rdx, qword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x000000000049c304: and rax, 0xfffffffffffffff8; mov r8, qword ptr [rax]; add rax, 8; mov qword ptr [rbx], r8; pop rbx; ret; 
0x0000000000478e18: and rax, qword ptr [rip + 0x53f61]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x00000000004263e8: and rax, qword ptr [rip + 0xa6991]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x000000000041fa64: and rdx, 0xfffffffffffffff0; test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x0000000000481e1d: and rdx, r8; cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000468ecf: and si, 0x7fff; or esi, edx; mov qword ptr [rsp - 0x18], rax; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000470c39: bnd ret 5; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x0000000000444111: bsf eax, eax; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eaf1: bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000444131: bsf eax, eax; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb01: bsf eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000044417d: bsf eax, eax; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb2f: bsf eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000443ab4: bsf eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000042e6ca: bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x0000000000444046: bsf eax, eax; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb96: bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000042e5e0: bsf eax, eax; add rax, rdi; ret; 
0x000000000044dc71: bsf eax, eax; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444101: bsf eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eae1: bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000042e5f0: bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x10]; ret; 
0x000000000042e600: bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x20]; ret; 
0x000000000042e5d0: bsf eax, eax; lea rax, qword ptr [rax + rdi - 0x10]; ret; 
0x000000000042e52f: bsf eax, eax; lea rax, qword ptr [rdi + rax + 0x30]; ret; 
0x0000000000443647: bsf eax, eax; lea rax, qword ptr [rdi + rax]; ret; 
0x0000000000443417: bsf eax, eax; mov edx, 0; lea rax, qword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000443c6a: bsf eax, edx; ret; 
0x000000000044d817: bsf eax, edx; shr rax, 2; ret; 
0x000000000042f431: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000042f451: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000042f417: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000042f1a1: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004286aa: bsf ecx, ecx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000428770: bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000429bd4: bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c39: bsf ecx, esi; movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000429bfd: bsf edi, ecx; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c1d: bsf edi, ecx; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000428540: bsf edx, eax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000429a71: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a91: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000429ab1: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a57: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000443dc2: bsf edx, edx; add rax, rdx; sub rax, rdi; ret; 
0x000000000044d927: bsf edx, edx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x00000000004284d1: bsf edx, edx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000443760: bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x0000000000443540: bsf rax, rax; mov edx, 0; lea rax, qword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000443cb2: bsf rax, rdx; ret; 
0x000000000044d816: bsf rax, rdx; shr rax, 2; ret; 
0x00000000004286a9: bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000042876f: bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000429ca3: bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000042853f: bsf rdx, rax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000443dc1: bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000044d926: bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x00000000004284d0: bsf rdx, rdx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000481c8b: bsr eax, eax; add rax, rdi; ret; 
0x0000000000482071: bsr eax, eax; lea rax, qword ptr [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000481f1b: bsr eax, esi; add rax, rdi; ret; 
0x0000000000481e29: bsr esi, esi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000481d25: bsr esi, esi; lea rax, qword ptr [rdi + rsi]; ret; 
0x0000000000481c8a: bsr rax, rax; add rax, rdi; ret; 
0x0000000000481f1a: bsr rax, rsi; add rax, rdi; ret; 
0x0000000000481e28: bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000481d24: bsr rsi, rsi; lea rax, qword ptr [rdi + rsi]; ret; 
0x000000000042f20c: bswap eax; bswap ecx; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x000000000042f20e: bswap ecx; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x000000000048f811: bts eax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x0000000000443f83: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000044d923: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x000000000048f6b1: bts esi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x000000000048f810: bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x0000000000443f82: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000044d922: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x000000000048f6b0: bts rsi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x000000000040628c: call 0x1000628e; test dword ptr [rbx], edx; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 + 0xd], cl; ret; 
0x000000000049a775: call 0x1104; nop word ptr [rax + rax]; mov eax, 4; add rsp, 8; ret; 
0x000000000041aae9: call 0x1122dfd; add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x0000000000401da0: call 0x1c9e; mov eax, 0; leave; ret; 
0x000000000041bfd9: call 0x1d190; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x000000000041f857: call 0x1f780; or dword ptr [rbx], 8; pop rbx; ret; 
0x000000000048ccfc: call 0x24a70; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000048e02c: call 0x24a70; mov qword ptr [rbx], 0; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000048fbc3: call 0x24a70; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000042f158: call 0x294746c; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000046d709: call 0x2a06d70c; ret; 
0x00000000004085e8: call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x000000000047536a: call 0x394febb7; ret; 
0x000000000048e69b: call 0x3951e6a3; ret; 
0x0000000000417ccf: call 0x415dbe31; pop rbp; pop r14; ret; 
0x0000000000417cf6: call 0x415dbe58; pop rbp; pop r14; ret; 
0x000000000044d0e0: call 0x41611240; pop rbp; pop rbp; ret; 
0x000000000044f7ba: call 0x4161391c; pop rbp; ret; 
0x000000000048630d: call 0x4164a46d; pop rbp; pop rbp; ret; 
0x00000000004863cf: call 0x4164a52f; pop rbp; pop rbp; ret; 
0x000000000041760f: call 0x44017614; mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000000401375: call 0x45f1917b; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004013cb: call 0x45f191d1; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401421: call 0x45f19227; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401478: call 0x45f1927e; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004014cf: call 0x45f192d5; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401530: call 0x45f19336; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401587: call 0x45f1938d; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000401619: call 0x45f1941f; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000040166f: call 0x45f19475; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004016c5: call 0x45f194cb; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000048f813: call 0x47924048; or byte ptr [rax + 2], bh; ret; 
0x000000000049bd04: call 0x4809c01e; mov dword ptr [rsi + 0x28], eax; pop rbx; ret; 
0x0000000000499ee9: call 0x4810282d; mov eax, dword ptr [rdi + 0x98]; ret; 
0x0000000000444924: call 0x48ed3439; mov eax, edi; ret; 
0x0000000000444a14: call 0x48ed3529; mov eax, edx; ret; 
0x0000000000499c30: call 0x49f32581; mov edx, dword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000045d824: call 0x4ca12; jmp qword ptr [rsi + 0xf]; 
0x000000000041526f: call 0x4d01526e; mov edx, edi; mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x00000000004305a5: call 0x4e72159d; call 0xf69ee61; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004380b0: call 0x4ef390a7; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043abe0: call 0x4ef3bbd7; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000041fa10: call 0x508f4219; add dword ptr [rax - 0x77], ecx; adc eax, 0xaad33; ret; 
0x000000000045098b: call 0x50920; add rsp, 0x10; pop rbp; ret; 
0x0000000000402349: call 0x50ed0; lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000000453e97: call 0x52080; mov rsi, qword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x000000000042323c: call 0x548f7a43; ret; 
0x000000000045552c: call 0x55060; or dword ptr [rip + 0x778a4], 2; add rsp, 8; ret; 
0x0000000000416f76: call 0x5c42ccd6; pop r13; pop r14; ret; 
0x000000000041bc7f: call 0x5c4319df; ret; 
0x0000000000425972: call 0x5c43b6d2; pop r13; pop r14; ret; 
0x000000000044f7a5: call 0x5c465505; pop r13; ret; 
0x00000000004908ec: call 0x5c4a664c; pop r13; ret; 
0x0000000000490917: call 0x5d4a655d; ret; 
0x000000000040841e: call 0x648dd026; ret; 
0x000000000045e7f6: call 0x6505e7fa; mov qword ptr [rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e857: call 0x6505e85b; add rax, qword ptr [0]; ret; 
0x0000000000482bf5: call 0x74daaffc; adc eax, 0xe180d188; pcmpeqb mm3, qword ptr [rsi]; ret; 
0x0000000000430a88: call 0x75cb429d; adc ah, byte ptr [rip + 0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000044da5d: call 0x77fd9f64; ret; 
0x000000000044db98: call 0x77fda09f; ret; 
0x000000000044dbca: call 0x77fda0d1; ret; 
0x000000000044dbe1: call 0x77fda0e8; ret; 
0x000000000044dc05: call 0x77fda10c; ret; 
0x000000000044dc25: call 0x77fda12c; ret; 
0x000000000044dc45: call 0x77fda14c; ret; 
0x000000000044dc55: call 0x77fda15c; ret; 
0x000000000044dc7c: call 0x77fda183; ret; 
0x000000000044dca0: call 0x77fda1a7; ret; 
0x000000000044dcc0: call 0x77fda1c7; ret; 
0x000000000044dd0c: call 0x77fda213; ret; 
0x0000000000482d24: call 0x7800f22b; ret; 
0x0000000000482ddc: call 0x7800f2e3; ret; 
0x0000000000482e00: call 0x7800f307; ret; 
0x0000000000482e20: call 0x7800f327; ret; 
0x0000000000482e6c: call 0x7800f373; ret; 
0x0000000000478559: call 0x78010; mov eax, 1; pop rbp; ret; 
0x000000000044e51c: call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000045ca2d: call 0x8485333; pop rbx; ret; 
0x0000000000493d40: call 0x86410; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000048ebec: call 0x87c50; mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000004956d7: call 0x87c50; mov qword ptr [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000048b62c: call 0x8af50; add rsp, 0xd8; ret; 
0x000000000049c777: call 0x8ce4ac4; pop rbx; pop rbp; ret; 
0x0000000000401d5e: call 0x8e70; leave; ret; 
0x000000000048e734: call 0x8e73c; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000045ca41: call 0x8e930; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x00000000004939c8: call 0x90da0; mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000048e8a1: call 0x90da0; mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000493b97: call 0x95930; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000493ad3: call 0x95a30; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x00000000004976e5: call 0x97770; add rsp, 0x10; mov eax, 2; pop rbx; ret; 
0x00000000004305aa: call 0xf69ee61; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000046925a: call 0xffffffff834f925e; ret; 
0x0000000000452498: call 0xffffffff89052c45; ret 0xe083; 
0x00000000004690b8: call 0xffffffff89485846; ret 0xe783; 
0x0000000000425e73: call 0xffffffff894b5e77; ret 0xcb8; 
0x0000000000480234: call 0xffffffff8b080482; or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000041897f: call 0xffffffff8b49e4f7; and al, 8; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000041abe5: call 0xffffffff8b49f45d; and al, 8; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x00000000004893a1: call 0xffffffff8b5193a5; mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000467076: call 0xffffffffbb480066; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret 0xffff; 
0x000000000042f402: call 0xffffffffc52d6a06; std; xlatb; ret; 
0x000000000045ee0e: call 0xffffffffc7b4fd5b; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x0000000000492664: call 0xffffffffc8c7b1b2; add eax, dword ptr [rax]; add al, ch; jmp qword ptr [rbx]; 
0x000000000046bc17: call 0xffffffffca10043c; mov qword ptr [rsp - 0x10], rdx; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x000000000041a6ac: call 0xffffffffceecba3c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000408417: call 0xffffffffd829cc1d; shr rax, 3; lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000486c73: call 0xffffffffe8086f81; movsb byte ptr [rdi], byte ptr [rsi]; ret 0xfff7; 
0x000000000041fa0c: call 0xffffffffe8c34222; add al, 0x48; lea edx, dword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x0000000000432533: call 0xfffffffff061b084; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434f13: call 0xfffffffff061da64; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432403: call 0xfffffffff062ad54; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432441: call 0xfffffffff062ad92; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432479: call 0xfffffffff062adca; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004324b7: call 0xfffffffff062ae08; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004324ef: call 0xfffffffff062ae40; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432517: call 0xfffffffff062ae68; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043253f: call 0xfffffffff062ae90; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434de3: call 0xfffffffff062d734; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000434e21: call 0xfffffffff062d772; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434e59: call 0xfffffffff062d7aa; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000434e97: call 0xfffffffff062d7e8; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434ecf: call 0xfffffffff062d820; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434ef7: call 0xfffffffff062d848; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434f1f: call 0xfffffffff062d870; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000049a148: call 0xfffffffff07f2c99; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e3: call 0xfffffffff07f2d34; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000049a274: call 0xfffffffff07f2dc5; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a2c3: call 0xfffffffff07f2e14; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000049a390: call 0xfffffffff07f2ee1; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000049a428: call 0xfffffffff07f2f79; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a47c: call 0xfffffffff07f2fcd; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x00000000004516fd: call 0xfffffffff6051705; ret 0x7402; 
0x00000000004852fa: call 0xfffffffff6085302; ret 0x7402; 
0x000000000044c11c: call 0xfffffffffc04e62f; add eax, dword ptr [rax]; ret; 
0x000000000044c167: call 0xfffffffffc04e672; inc dword ptr [rbx]; ret; 
0x000000000041898f: call qword ptr [rax + 0x18]; 
0x0000000000424aee: call qword ptr [rax + 0x18c48348]; ret; 
0x00000000004139b5: call qword ptr [rax + 0x38]; 
0x0000000000413b37: call qword ptr [rax + 0x48]; 
0x0000000000498535: call qword ptr [rax + 0x4d]; 
0x0000000000403d79: call qword ptr [rax + 0x50]; 
0x000000000049c1d2: call qword ptr [rax + 0x53]; 
0x00000000004784f8: call qword ptr [rax + 0x68]; 
0x0000000000418639: call qword ptr [rax + 0x70]; 
0x000000000049aa32: call qword ptr [rax + 0x75]; 
0x000000000049aa32: call qword ptr [rax + 0x75]; in eax, dx; nop word ptr cs:[rax + rax]; xor eax, eax; add rsp, 8; ret; 
0x0000000000498637: call qword ptr [rax + 0xf]; 
0x0000000000473e8a: call qword ptr [rax - 0x18]; 
0x000000000049031e: call qword ptr [rax - 0x5e1f00d]; cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000004833ee: call qword ptr [rax - 0x5e1f00d]; mov eax, 0x3f; syscall; 
0x0000000000473e68: call qword ptr [rax - 0x75]; 
0x0000000000413b3f: call qword ptr [rax - 1]; 
0x000000000040995e: call qword ptr [rax]; 
0x000000000041306f: call qword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x000000000041beb3: call qword ptr [rbp + 0x18]; 
0x000000000041d9f3: call qword ptr [rbp + 0x20]; 
0x000000000041e143: call qword ptr [rbp + 0x30]; 
0x0000000000410f16: call qword ptr [rbp + 0x38]; 
0x0000000000401c9d: call qword ptr [rbp + 0x48]; 
0x0000000000483230: call qword ptr [rbp + 0x53]; 
0x0000000000417983: call qword ptr [rbp + 0x60]; 
0x0000000000423656: call qword ptr [rbp + 0x64]; 
0x000000000041d93d: call qword ptr [rbp + 0x68]; 
0x000000000041aafa: call qword ptr [rbp + 0x70]; 
0x000000000048c3af: call qword ptr [rbp - 0x42]; 
0x0000000000402371: call qword ptr [rbx + 0x10]; 
0x000000000041da91: call qword ptr [rbx + 0x18]; 
0x0000000000411ba2: call qword ptr [rbx + 0x38]; 
0x000000000041b99f: call qword ptr [rbx + 0x40]; 
0x000000000041f84a: call qword ptr [rbx + 0x48]; 
0x0000000000414111: call qword ptr [rbx + 0xf]; 
0x0000000000413b46: call qword ptr [rbx - 0x18]; 
0x0000000000408428: call qword ptr [rbx]; 
0x0000000000411db8: call qword ptr [rcx + 0x38]; 
0x0000000000497979: call qword ptr [rcx]; 
0x000000000041e321: call qword ptr [rdi + 0x18]; 
0x0000000000413f95: call qword ptr [rdi + 0x38]; 
0x000000000041e693: call qword ptr [rdi + 0x58]; 
0x000000000049a220: call qword ptr [rdx + 0x48]; 
0x000000000049a0cb: call qword ptr [rdx + 0x50]; 
0x000000000046d270: call qword ptr [rdx]; 
0x0000000000488cd2: call qword ptr [rip + 0x42468]; xor eax, eax; add rsp, 8; ret; 
0x00000000004169bd: call qword ptr [rsi + 0x38]; 
0x000000000047a5c2: call qword ptr [rsi]; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x000000000044c9e6: call rbx; 
0x0000000000407d57: call rcx; 
0x0000000000455a69: call rdi; 
0x000000000040830b: call rdx; 
0x000000000042257d: call rsi; 
0x000000000041a19e: call rsp; 
0x000000000041b24b: cdq; add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x0000000000470da3: cdq; cli; std; jmp qword ptr [rsi + 0xf]; 
0x0000000000464113: cdq; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000420dcc: cdq; or al, byte ptr [rax]; add rsp, 0x10; pop rbp; ret; 
0x0000000000420dc5: cdq; or al, byte ptr [rax]; lea rax, qword ptr [rip + 0xa99d1]; add rsp, 0x10; pop rbp; ret; 
0x00000000004059ef: cdq; ret; 
0x000000000041466b: cdqe; movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb2cc8]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d24: cdqe; movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb360f]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000414714: cdqe; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414aef: cdqe; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a56: cdqe; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000045feea: clc; add byte ptr [rax + rax], cl; add byte ptr [rbp + 0x1e], dh; xor eax, eax; add rsp, 8; ret; 
0x0000000000419cfc: clc; add cl, byte ptr [rax + 0x39]; ret; 
0x0000000000419044: clc; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x0000000000474226: clc; add cl, byte ptr [rax - 0x77]; ret 0x51ff; 
0x000000000044c39b: clc; add dword ptr [rcx + 0xf], eax; xchg eax, esp; ret 0xfa83; 
0x000000000044e2df: clc; add dword ptr [rdi + 0x2d], esi; mov eax, 4; syscall; 
0x000000000048346f: clc; add dword ptr [rdi + 0x2d], esi; mov eax, 6; syscall; 
0x000000000044e33e: clc; add dword ptr [rdi + 0x2e], esi; mov eax, 5; syscall; 
0x0000000000493cdd: clc; add ebx, dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000042e3b7: clc; add rax, rcx; ret; 
0x000000000044da54: clc; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044404b: clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042e8f4: clc; add rax, rcx; vzeroupper; ret; 
0x000000000045361f: clc; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000042240b: clc; dec dword ptr [rax - 0x77]; ret 0x840f; 
0x0000000000476023: clc; dec dword ptr [rax - 0x77]; ret 0x9ce9; 
0x00000000004722be: clc; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x00000000004733dd: clc; dec dword ptr [rax - 0x77]; ret 0xdce9; 
0x0000000000412d4c: clc; dec dword ptr [rax - 0x77]; ret; 
0x00000000004727a5: clc; idiv bh; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000412fdc: clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000477bdf: clc; jmp qword ptr [rsi + 0x2e]; 
0x000000000049bf53: clc; jmp qword ptr [rsi + 0x66]; 
0x00000000004778f8: clc; jmp qword ptr [rsi + 0xf]; 
0x0000000000473b4c: clc; jmp qword ptr [rsi - 0x70]; 
0x00000000004995b5: clc; jmp rax; 
0x0000000000478dec: clc; lcall ptr [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004236d7: clc; lea ecx, dword ptr [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000496c97: clc; lea rax, qword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x000000000049a150: clc; leave; ret; 
0x0000000000432557: clc; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432eab: clc; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330ab: clc; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332ab: clc; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043253b: clc; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432e7f: clc; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043307f: clc; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043327f: clc; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043250f: clc; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ec7: clc; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437e47: clc; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004330c7: clc; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437db7: clc; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004332c7: clc; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437d27: clc; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432573: clc; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044bcf2: clc; mov qword ptr [rdi], rcx; ret; 
0x000000000044be71: clc; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000043b7f0: clc; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000044af6e: clc; mov qword ptr [rdi], rsi; ret; 
0x000000000049c307: clc; mov r8, qword ptr [rax]; add rax, 8; mov qword ptr [rbx], r8; pop rbx; ret; 
0x000000000049a1eb: clc; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000044af66: clc; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000042ed83: clc; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000041d3e5: clc; or al, byte ptr [rax]; syscall; 
0x000000000046bcfb: clc; or dword ptr [rdi - 0x2f], esi; mov rax, r8; ret; 
0x0000000000452cf9: clc; or eax, 1; mov dword ptr [rip + 0x7aaf1], eax; ret; 
0x0000000000452cc8: clc; or eax, 2; mov dword ptr [rip + 0x7ab22], eax; pop rbx; ret; 
0x0000000000452d29: clc; or eax, 3; mov dword ptr [rip + 0x7aac1], eax; ret; 
0x000000000042026a: clc; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x00000000004784fc: clc; push qword ptr [rax + rcx + 0x5d]; ret; 
0x000000000041e1df: clc; push qword ptr [rbp - 0x40]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041ef96: clc; ret; 
0x0000000000467afa: clc; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000044d92f: clc; shr rax, 2; ret; 
0x000000000044dbdb: clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444106: clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea6b: clc; vzeroupper; ret; 
0x000000000044c13b: cld; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000044c120: cld; add eax, dword ptr [rax]; ret; 
0x00000000004833ed: cld; call qword ptr [rax - 0x5e1f00d]; mov eax, 0x3f; syscall; 
0x000000000048222d: cld; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000045e4c4: cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000413636: cld; fdiv st(7), st(0); jmp qword ptr [rsi + 0xf]; 
0x000000000048cde1: cld; inc dword ptr [rbp + 0x481975c0]; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x000000000044c21a: cld; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000044c16b: cld; inc dword ptr [rbx]; ret; 
0x0000000000455044: cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000048c40f: cld; jmp qword ptr [rsi + 0x66]; 
0x000000000045d2d8: cld; jmp qword ptr [rsi + 0xf]; 
0x0000000000432ce2: cld; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ee5: cld; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004330e5: cld; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004332e5: cld; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044bcfa: cld; mov dword ptr [rdi], ecx; ret; 
0x000000000044be7c: cld; mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x000000000043b802: cld; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000044af7c: cld; mov dword ptr [rdi], esi; ret; 
0x0000000000401d9d: cld; mov edi, eax; call 0x1c9e; mov eax, 0; leave; ret; 
0x000000000044af76: cld; mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x000000000043271a: cld; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004328fa: cld; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ada: cld; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cba: cld; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004328de: cld; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432abe: cld; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432c9e: cld; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432916: cld; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437fd6: cld; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432af6: cld; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437f56: cld; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432cd6: cld; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437ed6: cld; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432736: cld; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000438056: cld; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004325c1: cld; ret; 
0x000000000043b971: cld; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b737: cld; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043bc33: cld; vmovups zmmword ptr [rdi - 0x140], zmm12; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044ac0f: cld; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044b816: cld; vzeroupper; ret; 
0x0000000000498a91: cli; adc byte ptr [rdi + rcx + 0x44], cl; ret; 
0x000000000048223b: cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000000456a1e: cli; add al, 0x74; and dword ptr [rcx - 0x77], ecx; add byte ptr [r15 + rcx - 0x4a], r8b; dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x0000000000418e76: cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x000000000044ac92: cli; add dh, byte ptr [rdx + 8]; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000044ff98: cli; add dword ptr [rbp - 0xc], esi; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000461ca5: cli; add dword ptr [rdi], ecx; xchg eax, esp; ret 0x2040; 
0x000000000044ac9f: cli; add dword ptr [rdx + 2], esi; mov byte ptr [rdi], cl; ret; 
0x000000000043b820: cli; add dword ptr [rdx + 4], esi; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000044d574: cli; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000044d5c4: cli; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x0000000000482ec4: cli; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000048e8a2: cli; and al, 0; add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000044bc44: cli; and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044bbd4: cli; and byte ptr [rdi], cl; xchg dword ptr [rax - 0xd000000], eax; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044ac5b: cli; and byte ptr [rdx + 0xa], dh; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000048e69a: cli; call 0x3951e6a3; ret; 
0x0000000000425e72: cli; call 0xffffffff894b5e77; ret 0xcb8; 
0x00000000004139b4: cli; call qword ptr [rax + 0x38]; 
0x0000000000455043: cli; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000490323: cli; cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000045fcfb: cli; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000047964a: cli; dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x7b], r9b; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000048b36f: cli; dec dword ptr [rdi]; test dh, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000044c13f: cli; inc dword ptr [rax]; add byte ptr [rax], al; cmove rax, rcx; ret; 
0x0000000000459be5: cli; inc dword ptr [rcx - 0x77]; ret 0x2be9; 
0x0000000000453620: cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000045af90: cli; jmp qword ptr [rsi + 0x66]; 
0x00000000004536d0: cli; jmp qword ptr [rsi + 0xf]; 
0x000000000045377c: cli; jmp qword ptr [rsi - 0x70]; 
0x0000000000452013: cli; lea rax, qword ptr [rip + 0x79205]; ret; 
0x00000000004330e8: cli; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044e243: cli; mov eax, 0x18; syscall; 
0x000000000044f2e3: cli; mov eax, 0x1c; syscall; 
0x0000000000493c53: cli; mov eax, 0x26; syscall; 
0x0000000000490363: cli; mov eax, 0x27; syscall; 
0x0000000000490363: cli; mov eax, 0x27; syscall; ret; 
0x00000000004833f3: cli; mov eax, 0x3f; syscall; 
0x0000000000450503: cli; mov eax, 0x63; syscall; 
0x0000000000483423: cli; mov eax, 0x66; syscall; 
0x0000000000483423: cli; mov eax, 0x66; syscall; ret; 
0x0000000000483443: cli; mov eax, 0x68; syscall; 
0x0000000000483443: cli; mov eax, 0x68; syscall; ret; 
0x0000000000483433: cli; mov eax, 0x6b; syscall; 
0x0000000000483433: cli; mov eax, 0x6b; syscall; ret; 
0x0000000000483453: cli; mov eax, 0x6c; syscall; 
0x0000000000483453: cli; mov eax, 0x6c; syscall; ret; 
0x000000000044f2b3: cli; mov eax, 0xa; syscall; 
0x000000000044f283: cli; mov eax, 0xb; syscall; 
0x0000000000483643: cli; mov eax, 0xc; syscall; 
0x000000000041d9b3: cli; mov eax, 0xffffffff; ret; 
0x000000000044f033: cli; mov eax, 1; syscall; 
0x000000000044ed93: cli; mov eax, 3; syscall; 
0x000000000044e603: cli; mov eax, 8; syscall; 
0x000000000041ec43: cli; mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x00000000004905a3: cli; mov eax, dword ptr [rip + 0x3d27e]; ret; 
0x0000000000450453: cli; mov eax, dword ptr [rip + 0x7d3ce]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x00000000004330e2: cli; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000490373: cli; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000004504d3: cli; mov r10, rcx; mov eax, 0x19; syscall; 
0x000000000045e833: cli; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000045e853: cli; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000045e873: cli; mov rax, -0x20; add rax, qword ptr fs:[0]; ret; 
0x000000000048ce03: cli; mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000045e813: cli; mov rax, -0x50; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000041e0f3: cli; mov rax, -1; ret; 
0x000000000048e743: cli; mov rax, qword ptr [rax + 8]; ret; 
0x000000000048e753: cli; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000041f873: cli; mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000041ef83: cli; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000041f9a3: cli; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xaad83], 1; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f973: cli; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xaadb3], 1; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f953: cli; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xaadd3], 1; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f993: cli; mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xad317], eax; ret; 
0x000000000041fa43: cli; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0xaad1a], rax; ret; 
0x000000000041f9d3: cli; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0xaad3a], rax; ret; 
0x000000000041f9c3: cli; mov rax, qword ptr [rdi]; mov qword ptr [rip + 0xaad52], rax; ret; 
0x000000000048c593: cli; mov rax, qword ptr [rip + 0x3db55]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x000000000045c213: cli; mov rax, qword ptr [rip + 0x70bd5]; ret; 
0x00000000004536e3: cli; mov rax, qword ptr [rip + 0x7a1bd]; ret; 
0x000000000041ef63: cli; mov rax, qword ptr [rip + 0xab1b5]; ret; 
0x000000000041ef93: cli; mov rax, rdi; ret; 
0x0000000000414196: cli; mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415275: cli; mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000041ba82: cli; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x0000000000455633: cli; movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000042ed89: cli; movzx edx, dl; sub eax, edx; ret; 
0x000000000042d2f6: cli; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041d145: cli; or al, byte ptr [rax]; syscall; 
0x000000000044ac74: cli; or byte ptr [rdx + 0xa], dh; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x0000000000461627: cli; or dword ptr [rdi], ecx; xchg eax, edi; ret 0xd284; 
0x000000000044bc16: cli; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000401bb3: cli; ret; 
0x000000000041f8d3: cli; setae al; ret; 
0x0000000000470da4: cli; std; jmp qword ptr [rsi + 0xf]; 
0x000000000049d15b: cli; sub rsp, 8; add rsp, 8; ret; 
0x00000000004900c3: cli; test byte ptr [rip + 0x3cc5f], 0x10; lea rdx, qword ptr [rip + 0x11e]; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000426bd3: cli; test byte ptr [rip + 0xa61a9], 0x10; lea rdx, qword ptr [rip - 0x2f2]; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x0000000000426193: cli; test byte ptr [rip + 0xa6b8f], 0x10; lea rdx, qword ptr [rip + 0x248be]; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x000000000043bc41: cli; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000041e063: cli; xor eax, eax; ret; 
0x000000000044f003: cli; xor eax, eax; syscall; 
0x0000000000480148: cmc; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000437f5a: cmc; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043296e: cmc; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437f53: cmc; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432ad7: cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432af3: cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000496c94: cmc; movzx edi, al; lea rax, qword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x000000000044a013: cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000044a017: cmc; sub eax, edx; ret; 
0x0000000000461727: cmc; syscall; 
0x0000000000490331: cmova edx, eax; mov eax, 0xd9; syscall; 
0x0000000000490330: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000041f87d: cmovae eax, dword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000041f87c: cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000049a5b7: cmovbe eax, ecx; ret; 
0x000000000041f8cc: cmovbe edx, eax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000041f8cb: cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000048b951: cmove eax, eax; mov rax, r8; pop rbx; ret; 
0x000000000044c145: cmove eax, ecx; ret; 
0x0000000000425f07: cmove eax, edx; add rsp, 8; ret; 
0x00000000004263c1: cmove eax, edx; ret; 
0x0000000000493d3d: cmove edx, eax; call 0x86410; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000048b950: cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x000000000044c144: cmove rax, rcx; ret; 
0x0000000000425f06: cmove rax, rdx; add rsp, 8; ret; 
0x00000000004263c0: cmove rax, rdx; ret; 
0x000000000045d5ee: cmovg eax, edx; add rdi, rax; pop rbx; pop r14; mov byte ptr [rdi], 0; ret; 
0x000000000045d5ed: cmovg rax, rdx; add rdi, rax; pop rbx; pop r14; mov byte ptr [rdi], 0; ret; 
0x0000000000489939: cmovl eax, dword ptr [rbx]; push rcx; or byte ptr [rax - 0x7af0f506], al; cmp dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000448a2a: cmovl ecx, dword ptr [rcx + 0x48f9174c]; lea eax, dword ptr [rdi + rdx]; vzeroupper; ret; 
0x000000000048223e: cmovne eax, eax; mov rax, r8; ret; 
0x000000000045febd: cmovne eax, ecx; add rsp, 8; ret; 
0x000000000041a0f4: cmovne eax, ecx; ret; 
0x000000000041fa71: cmovne eax, edx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x0000000000425825: cmovne eax, edx; ret; 
0x0000000000443894: cmovne eax, edx; vzeroupper; ret; 
0x0000000000481e21: cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000481e25: cmovne esi, edx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x000000000048223d: cmovne r8, rax; mov rax, r8; ret; 
0x000000000041a0f3: cmovne rax, rcx; ret; 
0x000000000041fa70: cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x0000000000425824: cmovne rax, rdx; ret; 
0x0000000000443893: cmovne rax, rdx; vzeroupper; ret; 
0x0000000000481e20: cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000481e24: cmovne rsi, rdx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000414c63: cmovs eax, dword ptr [rbx + 0x148f0e0]; ret; 
0x000000000041159d: cmovs eax, dword ptr [rbx + 0x3945f0e2]; ret; 
0x00000000004540b4: cmovs eax, dword ptr [rbx - 0x76b30f20]; and byte ptr [rax - 0x77], cl; ret; 
0x0000000000455640: cmovs eax, edx; ret; 
0x000000000043b7e9: cmovs ecx, dword ptr [rbx + 0x498b4836]; clc; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000421622: cmovs ecx, dword ptr [rbx - 0x173ef7be]; add al, 0x39; ret; 
0x0000000000452090: cmovs ecx, dword ptr [rbx - 0x3916dbc4]; movabs al, byte ptr [0x441f0f660003]; ret; 
0x000000000049a498: cmovs ecx, dword ptr [rcx + 0x1bffe]; add byte ptr [rax], al; jmp rax; 
0x000000000045c9d0: cmp ah, 0xff; nop dword ptr [rax + rax]; ret; 
0x000000000041e7f4: cmp ah, ah; or al, byte ptr [rax]; syscall; 
0x0000000000429c08: cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000049028f: cmp ah, byte ptr [rbx - 0x25]; cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000044ab7a: cmp ah, byte ptr [rbx - 0x25]; cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000004410ea: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000441c4a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044142a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x0000000000440c0a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000044176a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440f4a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044072a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044190a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x0000000000440a6a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440ba0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004418a0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004413c0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441be0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440ee0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000440a00: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441700: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x00000000004902e6: cmp ah, byte ptr [rbx]; adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004025e2: cmp al, 0; add byte ptr [rax], al; nop word ptr cs:[rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x000000000041d637: cmp al, 0x24; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000407d52: cmp al, 0x24; mov rdi, r12; call rcx; 
0x0000000000407bd3: cmp al, 0x24; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000048239d: cmp al, 0x24; push 0; lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000041c1a5: cmp al, 0x24; sbb eax, 0xe6ebe074; nop dword ptr [rax]; xor eax, eax; ret; 
0x000000000045ee49: cmp al, 0x28; nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r14; call rbx; 
0x0000000000417f56: cmp al, 0x5b; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000041cdf0: cmp al, 0xfe; or al, byte ptr [rax]; syscall; 
0x000000000041cdf0: cmp al, 0xfe; or al, byte ptr [rax]; syscall; ret; 
0x000000000042e5d6: cmp al, dh; ret; 
0x000000000042e5d5: cmp al, r14b; ret; 
0x000000000041f43e: cmp bh, dh; jmp qword ptr [rsi + 0x66]; 
0x000000000044f566: cmp bl, byte ptr [rbx + 0x5d]; ret; 
0x0000000000477710: cmp bl, ch; movabs dword ptr [0xc483480000441f0f], eax; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x00000000004188cd: cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000484b94: cmp byte ptr [rax + 0x29], cl; ret 0x8d49; 
0x0000000000418297: cmp byte ptr [rax + 0x39], cl; ret; 
0x000000000042e617: cmp byte ptr [rax + 1], cl; clc; ret; 
0x000000000048e859: cmp byte ptr [rax - 0x75], cl; and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d7: cmp byte ptr [rax - 0x75], cl; and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000004188ce: cmp byte ptr [rax - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x00000000004836bf: cmp byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000404513: cmp byte ptr [rax - 0x7d], cl; ret; 
0x0000000000429c03: cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000042e606: cmp byte ptr [rax], ah; ret; 
0x00000000004555bf: cmp byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000048cf53: cmp byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000443424: cmp byte ptr [rax], dh; cmovne rax, rdx; ret; 
0x000000000042e5f6: cmp byte ptr [rax], dl; ret; 
0x000000000042e5f5: cmp byte ptr [rax], r10b; ret; 
0x0000000000429c02: cmp byte ptr [rax], r12b; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000042e605: cmp byte ptr [rax], r12b; ret; 
0x0000000000443423: cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000049334f: cmp byte ptr [rbp + 0x39], cl; ret 0x840f; 
0x0000000000418d12: cmp byte ptr [rbp + 0x490775ff], al; mov edx, dword ptr [rdi + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000041eabb: cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000419dd6: cmp byte ptr [rbx + 0x5d], bl; ret; 
0x000000000041d968: cmp byte ptr [rcx + rcx*4 + 0x63], cl; mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000048d17a: cmp byte ptr [rcx - 0x7d], cl; ret 0x4908; 
0x000000000042151e: cmp byte ptr [rcx], dh; ror byte ptr [rax - 0x75], 0x46; or byte ptr [rax - 0x77], cl; ret; 
0x00000000004025ac: cmp byte ptr [rdi + 0x7c8b000c], ah; and al, 0xc; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000430a30: cmp byte ptr [rdi], dl; ret 0x2373; 
0x0000000000430a19: cmp byte ptr [rdi], dl; ret 0x3a73; 
0x0000000000430a02: cmp byte ptr [rdi], dl; ret 0x5173; 
0x000000000042f4be: cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042ff1d: cmp byte ptr [rdi], dl; ret; 
0x0000000000430f3a: cmp ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000490292: cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x00000000004105c7: cmp cl, 0xff; dec dword ptr [rax - 0x7d]; ret; 
0x000000000040ba19: cmp cl, 0xff; inc dword ptr [rax]; add byte ptr [rax], al; add cl, ch; rcr cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000421c06: cmp cl, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000044ab7d: cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000041fef2: cmp cl, byte ptr [rax - 0x75]; push rax; or dh, dh; ret 0x7502; 
0x000000000040c57c: cmp cl, byte ptr [rax - 0x77]; ret 0x8d4c; 
0x0000000000443891: cmp dh, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044c01e: cmp dh, byte ptr [rdx + 2]; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000489943: cmp dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x000000000040ae68: cmp dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x0000000000426460: cmp dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x5256; cmovne rax, rdx; ret; 
0x000000000040ad43: cmp dword ptr [rax], eax; add byte ptr [rbx - 0x6276b], cl; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x8b48; 
0x0000000000470c36: cmp dword ptr [rbx + 0x5c2f22d], eax; add byte ptr [rcx], al; mov eax, r8d; pop rbx; ret; 
0x00000000004242be: cmp dword ptr [rbx + 0xa89da2d], eax; add byte ptr [rcx], al; pop rbx; ret; 
0x0000000000459be3: cmp dword ptr [rbx - 0x76be0006], edx; ret 0x2be9; 
0x0000000000437a88: cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000041f879: cmp dword ptr [rdi + 0x10], eax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000470470: cmp dword ptr [rdi], ecx; test byte ptr [rbx], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x000000000041a0f1: cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x000000000049a5b4: cmp dword ptr [rsi + 8], edi; cmovbe eax, ecx; ret; 
0x0000000000425f03: cmp eax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048ca43: cmp eax, -1; cmove rax, rdx; ret; 
0x0000000000497a30: cmp eax, 0x22a47; movzx ecx, cl; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x000000000048c525: cmp eax, 0x411fd; add byte ptr [rbp + 0x13], dh; mov r8, qword ptr [rip + 0x40ddc]; mov rax, r8; ret; 
0x0000000000450e80: cmp eax, 0x514eb; mov eax, 0x15; syscall; 
0x000000000047505c: cmp eax, 0x5317f; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474fd6: cmp eax, 0x53205; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000047447a: cmp eax, 0x53961; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000470c91: cmp eax, 0x5c29a; syscall; 
0x0000000000470a05: cmp eax, 0x5c522; syscall; 
0x000000000046ec71: cmp eax, 0x5e2ae; syscall; 
0x000000000045f829: cmp eax, 0x6d6f2; syscall; 
0x000000000045f764: cmp eax, 0x6d7b7; syscall; 
0x000000000045f5c7: cmp eax, 0x6d954; syscall; 
0x000000000045f4f8: cmp eax, 0x6da23; syscall; 
0x000000000045c9c6: cmp eax, 0x70424; add byte ptr [rdx + rcx - 0x17], dh; popfq; cmp ah, 0xff; nop dword ptr [rax + rax]; ret; 
0x000000000040816b: cmp eax, 0x75e4854d; adc al, 0xeb; sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000454751: cmp eax, 0x7915a; syscall; 
0x000000000045463d: cmp eax, 0x7926e; syscall; 
0x000000000045451d: cmp eax, 0x7938e; syscall; 
0x000000000044d365: cmp eax, 0x80546; syscall; 
0x0000000000481f84: cmp eax, 0x89000001; ret 0x8948; 
0x00000000004804df: cmp eax, 0x8b000247; add al, 0x81; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000474055: cmp eax, 0x8b480005; add al, 0xc6; xor esi, esi; jmp rax; 
0x00000000004085e3: cmp eax, 0x962e5; call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000425e25: cmp eax, 0xa4976; syscall; 
0x000000000042415d: cmp eax, 0xa663e; syscall; 
0x0000000000424125: cmp eax, 0xa6676; syscall; 
0x0000000000423c4d: cmp eax, 0xa6b4e; syscall; 
0x0000000000423c4d: cmp eax, 0xa6b4e; syscall; pop rbp; ret; 
0x0000000000423c15: cmp eax, 0xa6b86; syscall; 
0x0000000000423ad5: cmp eax, 0xa6cc6; syscall; 
0x0000000000423631: cmp eax, 0xa716a; syscall; 
0x00000000004257fc: cmp eax, 0xa748e; add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x0000000000424c81: cmp eax, 0xa802a; syscall; 
0x0000000000424319: cmp eax, 0xa8982; syscall; 
0x0000000000424319: cmp eax, 0xa8982; syscall; pop rbx; ret; 
0x0000000000420d7d: cmp eax, 0xabf2e; syscall; 
0x0000000000420d07: cmp eax, 0xabf94; syscall; 
0x0000000000420ac5: cmp eax, 0xac1e6; syscall; 
0x00000000004205a1: cmp eax, 0xac70a; syscall; 
0x000000000041f057: cmp eax, 0xadbd4; syscall; 
0x000000000041f057: cmp eax, 0xadbd4; syscall; ret; 
0x000000000041eb57: cmp eax, 0xae0d4; syscall; 
0x000000000041e7f3: cmp eax, 0xae438; syscall; 
0x000000000041e4a9: cmp eax, 0xae782; syscall; 
0x000000000041d3e3: cmp eax, 0xaf848; syscall; 
0x000000000041d143: cmp eax, 0xafae8; syscall; 
0x000000000041cdef: cmp eax, 0xafe3c; syscall; 
0x000000000041cdef: cmp eax, 0xafe3c; syscall; ret; 
0x000000000041471c: cmp eax, 0xb2c1f; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414af7: cmp eax, 0xb2c44; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a5e: cmp eax, 0xb2cdd; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000417895: cmp eax, 0xb6016; syscall; 
0x000000000046161d: cmp eax, 0xbe0f9066; rol byte ptr [rbx - 0x57ccf16], 1; or dword ptr [rdi], ecx; xchg eax, edi; ret 0xd284; 
0x00000000004086f4: cmp eax, 0xc5057; syscall; 
0x00000000004084bd: cmp eax, 0xc528e; syscall; 
0x0000000000408482: cmp eax, 0xc52c9; syscall; 
0x000000000040839e: cmp eax, 0xc53ad; syscall; 
0x00000000004065e2: cmp eax, 0xc61d1; syscall; 
0x0000000000404def: cmp eax, 0xc798c; syscall; 
0x0000000000403e06: cmp eax, 0xc88cd; syscall; 
0x0000000000403ddd: cmp eax, 0xc88f6; syscall; 
0x0000000000403cb2: cmp eax, 0xc8a21; syscall; 
0x000000000040121e: cmp eax, 0xcb5ad; syscall; 
0x000000000041c43b: cmp eax, 0xf00082e; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x0000000000408b99: cmp eax, dword ptr [rbp - 0x76b70001]; ret 0x8948; 
0x00000000004995a9: cmp eax, dword ptr [rip + 0x38b5277]; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x000000000044a4f3: cmp eax, ecx; sbb eax, eax; sbb eax, -1; ret; 
0x0000000000427090: cmp eax, edx; lea rdx, qword ptr [rip + 0x1c9a7]; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263b0: cmp eax, edx; lea rdx, qword ptr [rip + 0x1dc37]; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263f0: cmp eax, edx; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x00000000004821b0: cmp eax, edx; lea rdx, qword ptr [rip + 0x597]; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x0000000000427050: cmp eax, edx; lea rdx, qword ptr [rip + 0x7ae7]; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c10: cmp eax, edx; lea rdx, qword ptr [rip + 0x7c57]; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000478e20: cmp eax, edx; lea rdx, qword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000482170: cmp eax, edx; lea rdx, qword ptr [rip + 0xb47]; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x000000000048f746: cmp ecx, 0xe0757fff; mov eax, 1; ret; 
0x0000000000453658: cmp ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000004679d8: cmp ecx, eax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0000000000490325: cmp edx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000044c13e: cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000004976ff: cmp edx, 1; sbb rax, rax; add rsp, 0x10; or rax, 1; pop rbx; ret; 
0x000000000048223a: cmp edx, 4; cmovne r8, rax; mov rax, r8; ret; 
0x0000000000462ad1: cmp edx, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000049bdb1: cmp edx, dword ptr [rip - 0x76b7fffd]; xor eax, 0x31534; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000041f8d2: cmp edx, edi; setae al; ret; 
0x000000000044b2c9: cmp esi, dword ptr [rdx + 5]; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000041f878: cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000041a0f0: cmp qword ptr [rdx + 0x48], r8; cmovne eax, ecx; ret; 
0x000000000049a5b3: cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x000000000047770f: cmp r11b, r13b; movabs dword ptr [0xc483480000441f0f], eax; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x0000000000425f02: cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048ca42: cmp rax, -1; cmove rax, rdx; ret; 
0x000000000042708f: cmp rax, rdx; lea rdx, qword ptr [rip + 0x1c9a7]; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263af: cmp rax, rdx; lea rdx, qword ptr [rip + 0x1dc37]; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263ef: cmp rax, rdx; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x00000000004821af: cmp rax, rdx; lea rdx, qword ptr [rip + 0x597]; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x000000000042704f: cmp rax, rdx; lea rdx, qword ptr [rip + 0x7ae7]; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c0f: cmp rax, rdx; lea rdx, qword ptr [rip + 0x7c57]; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000478e1f: cmp rax, rdx; lea rdx, qword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x000000000048216f: cmp rax, rdx; lea rdx, qword ptr [rip + 0xb47]; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x00000000004679d7: cmp rcx, rax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0000000000490324: cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000004976fe: cmp rdx, 1; sbb rax, rax; add rsp, 0x10; or rax, 1; pop rbx; ret; 
0x0000000000482239: cmp rdx, 4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000041f8d1: cmp rdx, rdi; setae al; ret; 
0x0000000000443890: cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000480757: cmpsb byte ptr [rsi], byte ptr [rdi]; adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000480a57: cmpsb byte ptr [rsi], byte ptr [rdi]; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481957: cmpsb byte ptr [rsi], byte ptr [rdi]; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481657: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0x83480000; ret 0x4910; 
0x00000000004304c9: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0xc0310000; ret; 
0x0000000000441226: cmpsb byte ptr [rsi], byte ptr [rdi]; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481357: cmpsb byte ptr [rsi], byte ptr [rdi]; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481057: cmpsb byte ptr [rsi], byte ptr [rdi]; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000456c76: cmpsb byte ptr [rsi], byte ptr [rdi]; ret 0xfffa; 
0x000000000044e5c1: cmpsd dword ptr [rsi], dword ptr [rdi]; add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000427095: cmpsd dword ptr [rsi], dword ptr [rdi]; leave; add dword ptr [rax], eax; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004025ad: cmpsd dword ptr [rsi], dword ptr [rdi]; or al, 0; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000420dc1: cmpxchg dword ptr [rip + 0xa99d8], edx; lea rax, qword ptr [rip + 0xa99d1]; add rsp, 0x10; pop rbp; ret; 
0x000000000041efc8: cmpxchg dword ptr [rip + 0xadc61], edx; mov qword ptr [rip + 0xadc62], rbx; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x0000000000499a14: cwde; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000499878: cwde; add dword ptr [rax], eax; add dh, dh; ret; 
0x000000000046121b: cwde; add eax, 0xb8480000; ret 0xffff; 
0x000000000041466c: cwde; movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb2cc8]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d25: cwde; movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb360f]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000414715: cwde; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414af0: cwde; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a57: cwde; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000420ecb: cwde; or al, byte ptr [rax]; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420ed9: cwde; or al, byte ptr [rax]; ret; 
0x0000000000414ea4: cwde; or byte ptr [rax], al; add byte ptr [rbx - 0x78f0d008], al; mov ebp, 0x8900000d; ret 0xc083; 
0x0000000000402ee4: cwde; ret; 
0x0000000000445e31: dec byte ptr [r8 + 0x29]; ret 0x280f; 
0x0000000000445e32: dec byte ptr [rax + 0x29]; ret 0x280f; 
0x000000000043bd96: dec byte ptr [rax + 0x6f]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000044b91a: dec byte ptr [rax + 0x7f]; jns 0x4b91d; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000044baa5: dec byte ptr [rax + 0x7f]; jns 0x4baa8; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000044b921: dec byte ptr [rax + 0x7f]; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000044f576: dec byte ptr [rax + 9]; ret; 
0x00000000004514f1: dec byte ptr [rax - 0x75]; adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000044f483: dec byte ptr [rax - 0x75]; or byte ptr [r11 + r9*4 + 0x57], r9b; adc byte ptr [rcx - 0x77], cl; ret; 
0x0000000000491e61: dec byte ptr [rax - 0x75]; or byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000403727: dec byte ptr [rax - 0x77]; ret 0x8d48; 
0x000000000045ee70: dec byte ptr [rcx + rcx*4 - 0x19]; call rbx; 
0x0000000000411aee: dec byte ptr [rcx + rcx*4 - 9]; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x000000000044f597: dec byte ptr [rcx - 0x77]; adc byte ptr [r9 + 9], cl; ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret 0x1f0f; 
0x000000000044af84: dec byte ptr [rdi]; mov bh, 0x36; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000041cdc3: dec byte ptr [rdx]; add byte ptr [rcx], al; ret; 
0x000000000046d106: dec dword ptr [r8 - 0x77]; ret 0xf748; 
0x000000000048222e: dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x0000000000445f72: dec dword ptr [rax + 0x29]; ret 0x280f; 
0x0000000000499153: dec dword ptr [rax + 0x29]; ret 0x8941; 
0x000000000040fb19: dec dword ptr [rax + 0x29]; ret 0x8948; 
0x000000000041fcb4: dec dword ptr [rax + 0x29]; ret 0x8d49; 
0x00000000004727a8: dec dword ptr [rax + 0x29]; ret 0xb8; 
0x000000000041b251: dec dword ptr [rax + 0x39]; ret 0x830f; 
0x0000000000412871: dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000496924: dec dword ptr [rax + 0x39]; ret 0x975; 
0x00000000004071ba: dec dword ptr [rax + 0x39]; ret; 
0x000000000040ceec: dec dword ptr [rax + 0x43b60f02]; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000044c269: dec dword ptr [rax + 0x63]; ret 0xfac1; 
0x000000000048b3f4: dec dword ptr [rax + 0x63]; ret; 
0x000000000045c777: dec dword ptr [rax + 0x63]; ror byte ptr [rcx - 0x2d94b73b], 1; push -0x1605feb4; ret 0xfffe; 
0x0000000000481f19: dec dword ptr [rax + 0xf]; mov ebp, 0xf80148c6; ret; 
0x0000000000498181: dec dword ptr [rax + 0xf]; mov edi, 0x83480170; rol byte ptr [rbx], 0xeb; ret; 
0x000000000045eda3: dec dword ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x148; 
0x000000000045e8d8: dec dword ptr [rax + 5]; add byte ptr [rdx], al; add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x000000000048befc: dec dword ptr [rax + 9]; ret 0x1075; 
0x000000000048c04a: dec dword ptr [rax + 9]; ret 0x850f; 
0x00000000004653ad: dec dword ptr [rax + 9]; test dword ptr [rdi], 0xfffdbf85; dec dword ptr [rbx + rcx*4 + 0x7d]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000040ec43: dec dword ptr [rax - 0x39]; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xcde8; 
0x000000000049cf4f: dec dword ptr [rax - 0x39]; add eax, 0x2ffbd; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000049cb4a: dec dword ptr [rax - 0x39]; add eax, 0x302a2; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000048e72f: dec dword ptr [rax - 0x39]; add eax, 0x3e865; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000049cc4e: dec dword ptr [rax - 0x39]; ret 0x78e0; 
0x000000000049ccef: dec dword ptr [rax - 0x39]; ret 0x8720; 
0x000000000049cc74: dec dword ptr [rax - 0x39]; ret 0x87a0; 
0x000000000049cc9d: dec dword ptr [rax - 0x39]; ret 0x8960; 
0x000000000049ccc6: dec dword ptr [rax - 0x39]; ret 0x89e0; 
0x000000000049cd18: dec dword ptr [rax - 0x39]; ret 0x8f20; 
0x000000000049cd41: dec dword ptr [rax - 0x39]; ret 0x8f80; 
0x000000000049cd6a: dec dword ptr [rax - 0x39]; ret 0x9000; 
0x000000000049cd93: dec dword ptr [rax - 0x39]; ret 0x90c0; 
0x000000000049cdbc: dec dword ptr [rax - 0x39]; ret 0x9140; 
0x000000000049cde5: dec dword ptr [rax - 0x39]; ret 0x91a0; 
0x000000000049cc25: dec dword ptr [rax - 0x39]; ret 0x9260; 
0x000000000046dc91: dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x000000000044e49d: dec dword ptr [rax - 0x39]; ret 0xffc0; 
0x000000000046ccb6: dec dword ptr [rax - 0x39]; ret 0xffe0; 
0x0000000000460974: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000403e97: dec dword ptr [rax - 0x39]; ret; 
0x000000000040ba15: dec dword ptr [rax - 0x39]; test dword ptr [rax + 0xfffff9], eax; add byte ptr [rax], al; add cl, ch; rcr cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x00000000004986d1: dec dword ptr [rax - 0x42]; mov eax, 0xf; syscall; 
0x0000000000426be1: dec dword ptr [rax - 0x73]; add eax, 0x23927; cmove rax, rdx; ret; 
0x0000000000486309: dec dword ptr [rax - 0x73]; call 0x4164a46d; pop rbp; pop rbp; ret; 
0x000000000041704b: dec dword ptr [rax - 0x73]; lea rdx, qword ptr [rbx + 0x34]; mov esi, 1; mov rdi, rbx; call rax; 
0x0000000000431036: dec dword ptr [rax - 0x73]; push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x0000000000494134: dec dword ptr [rax - 0x75]; adc byte ptr [r8 - 0x7d], cl; ret; 
0x000000000049bdad: dec dword ptr [rax - 0x75]; add eax, 0x3153b; mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bcf9: dec dword ptr [rax - 0x75]; add eax, 0x315ef; mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x00000000004188ca: dec dword ptr [rax - 0x75]; cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x000000000040c579: dec dword ptr [rax - 0x75]; cmp cl, byte ptr [rax - 0x77]; ret 0x8d4c; 
0x00000000004898d8: dec dword ptr [rax - 0x75]; mov byte ptr [r9 - 0x77], r9b; ret 0x8949; 
0x00000000004893a3: dec dword ptr [rax - 0x75]; mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000472181: dec dword ptr [rax - 0x75]; mov ebp, 0xfffff738; mov rdx, r10; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x000000000046dcc3: dec dword ptr [rax - 0x75]; mov ebp, 0xffffff30; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000040ae63: dec dword ptr [rax - 0x75]; or ebx, ebx; cmp dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x000000000041d62c: dec dword ptr [rax - 0x75]; sbb byte ptr [r11 + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000044f67b: dec dword ptr [rax - 0x77]; adc al, 0x24; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000048ebf0: dec dword ptr [rax - 0x77]; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000042440e: dec dword ptr [rax - 0x77]; add eax, 0xa636a; ret; 
0x0000000000424400: dec dword ptr [rax - 0x77]; add eax, 0xa6380; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x00000000004956db: dec dword ptr [rax - 0x77]; add ebx, dword ptr [rax + 0x5a]; pop rbx; ret; 
0x0000000000413eb8: dec dword ptr [rax - 0x77]; fimul dword ptr [rcx + rcx*4 - 0x3a]; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045f455: dec dword ptr [rax - 0x77]; fucompi st(0); ret 0xfc4f; 
0x000000000048a811: dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000048cb0e: dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x000000000041898b: dec dword ptr [rax - 0x77]; out dx, eax; call qword ptr [rax + 0x18]; 
0x000000000042256e: dec dword ptr [rax - 0x77]; push rsp; and al, 0x10; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rax; call rsi; 
0x000000000044d9a9: dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000421910: dec dword ptr [rax - 0x77]; ret 0x394c; 
0x000000000042240c: dec dword ptr [rax - 0x77]; ret 0x840f; 
0x000000000041be14: dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000408b9c: dec dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000048df39: dec dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000048a96a: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000045e093: dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000476024: dec dword ptr [rax - 0x77]; ret 0x9ce9; 
0x00000000004722bf: dec dword ptr [rax - 0x77]; ret 0xb848; 
0x00000000004041db: dec dword ptr [rax - 0x77]; ret 0xc031; 
0x0000000000425e75: dec dword ptr [rax - 0x77]; ret 0xcb8; 
0x00000000004733de: dec dword ptr [rax - 0x77]; ret 0xdce9; 
0x0000000000489f41: dec dword ptr [rax - 0x77]; ret 0xf6e8; 
0x0000000000406707: dec dword ptr [rax - 0x77]; ret 0xf748; 
0x00000000004045cb: dec dword ptr [rax - 0x77]; ret; 
0x000000000040a7b8: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x84; jmp qword ptr [rax]; 
0x0000000000468508: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x84; ret 0xfffd; 
0x000000000046c2b5: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x85; fstp dword ptr [rax + rax]; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000490042: dec dword ptr [rax - 0x7b]; sal byte ptr [rax + rcx + 0x5b], 0x5d; pop r12; ret; 
0x000000000048fda3: dec dword ptr [rax - 0x7b]; sal byte ptr [rdx + rcx + 0x48], 0x8d; adc eax, 0x3bcf0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000048ed11: dec dword ptr [rax - 0x7b]; sal byte ptr [rdx + rcx + 0x48], 0x8d; or eax, 0x3cd62; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000412d49: dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000482238: dec dword ptr [rax - 0x7d]; cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000000498bda: dec dword ptr [rax - 0x7d]; mov dword ptr [rdx], 0xfff7eae9; jmp qword ptr [rsi + 0x66]; 
0x000000000049a9e0: dec dword ptr [rax - 0x7d]; mov dword ptr [rdx], 0xffff1ae9; jmp qword ptr [rsi + 0xf]; 
0x0000000000456a2a: dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x0000000000406b82: dec dword ptr [rax - 0x7d]; ret 0x4901; 
0x00000000004974c8: dec dword ptr [rax - 0x7d]; ret 0x4904; 
0x00000000004974de: dec dword ptr [rax - 0x7d]; ret 0x4908; 
0x0000000000405767: dec dword ptr [rax - 0x7d]; ret 0xeb04; 
0x000000000040631f: dec dword ptr [rax - 0x7d]; ret; 
0x0000000000437a8c: dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000041ff79: dec dword ptr [rax - 9]; fisttp dword ptr [rax + 0x21]; ret; 
0x0000000000469b5b: dec dword ptr [rbp + 0x29]; ret; 
0x000000000047273a: dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x0000000000494da3: dec dword ptr [rbp + r9*4 + 0x74]; ret; 
0x0000000000494da4: dec dword ptr [rbp + rcx*4 + 0x74]; ret; 
0x00000000004851b1: dec dword ptr [rbp + rcx*4 + 0xd]; jmp qword ptr [rbx]; 
0x00000000004043cb: dec dword ptr [rbp - 0x75]; push rsp; ret 0x4820; 
0x000000000048a635: dec dword ptr [rbx + 0x4274415]; add dh, dh; ret 0xf04; 
0x000000000048a94b: dec dword ptr [rbx + 0x7a8d4c02]; or byte ptr [rax + 1], cl; ret; 
0x00000000004256dd: dec dword ptr [rbx + 0x9082454]; ret 0x37e9; 
0x0000000000402681: dec dword ptr [rbx + 0xca6f815]; add dh, dh; ret 0x7404; 
0x0000000000465190: dec dword ptr [rbx + rcx*4 + 0x7d]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000040ec1c: dec dword ptr [rbx + rcx*4 - 0x44]; ret; 
0x0000000000406288: dec dword ptr [rbx + rcx*4 - 0x63]; call 0x1000628e; test dword ptr [rbx], edx; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 + 0xd], cl; ret; 
0x000000000049b70d: dec dword ptr [rbx - 0x1f3edfad]; or eax, dword ptr [rcx + 0x7ffe2]; add byte ptr [rcx], cl; ret 0x5389; 
0x000000000046ccd9: dec dword ptr [rbx - 0x627675e4]; sar dh, 0xff; inc dword ptr [rax - 0x7bf09a05]; or byte ptr fs:[rax], al; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x000000000040b112: dec dword ptr [rbx - 0x6276b]; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x9589; 
0x0000000000470453: dec dword ptr [rbx - 0x72dfdb8c]; push rsi; add dword ptr [rax + 0x63], ecx; ror byte ptr [rax + 0x39], cl; ret 0x9c0f; 
0x0000000000411e60: dec dword ptr [rbx - 0x8ef4b]; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x0000000000412383: dec dword ptr [rbx - 0x8ef7b]; inc dword ptr [rcx]; ret; 
0x0000000000484cd2: dec dword ptr [rcx + 0x21]; ret; 
0x0000000000475ab6: dec dword ptr [rcx + 0x29]; ret 0xf4c; 
0x0000000000489591: dec dword ptr [rcx + 0x39]; ret 0x860f; 
0x000000000045d8c4: dec dword ptr [rcx + 1]; ret 0x8d48; 
0x000000000046e860: dec dword ptr [rcx + rcx*4 + 0x44]; ret 0xe9f8; 
0x00000000004326fe: dec dword ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000046cca1: dec dword ptr [rcx + rcx*4 + 4]; ret 0x85c7; 
0x00000000004139a8: dec dword ptr [rcx + rcx*4 - 0x12]; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000046dcca: dec dword ptr [rcx + rcx*4 - 0x16]; mov rsi, r12; call rax; 
0x0000000000472188: dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x0000000000411ae8: dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000414193: dec dword ptr [rcx + rcx*4 - 6]; mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415272: dec dword ptr [rcx + rcx*4 - 6]; mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x0000000000484bba: dec dword ptr [rcx - 0x13343]; jmp qword ptr [rsi - 0x7d]; 
0x000000000040ae5d: dec dword ptr [rcx - 0x5a74b]; dec dword ptr [rax - 0x75]; or ebx, ebx; cmp dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x000000000047964b: dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x7b], r9b; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000040bd2d: dec dword ptr [rcx - 0x77]; fmul qword ptr [rax - 0x77]; ret; 
0x00000000004899e0: dec dword ptr [rcx - 0x77]; ret 0x8349; 
0x00000000004142a0: dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x0000000000414327: dec dword ptr [rcx - 0x77]; ret 0x8948; 
0x000000000040aa89: dec dword ptr [rcx - 0x77]; ret 0x8b48; 
0x00000000004142e7: dec dword ptr [rcx - 0x77]; ret 0xbd83; 
0x000000000049239c: dec dword ptr [rcx - 0x77]; ret; 
0x0000000000421f42: dec dword ptr [rcx - 0x7b]; ret; 
0x0000000000409f98: dec dword ptr [rcx - 0x7d]; ret 0x4801; 
0x00000000004093d0: dec dword ptr [rcx - 0x7d]; ret 0x8501; 
0x0000000000416f3f: dec dword ptr [rcx - 0x7d]; ret; 
0x000000000046e44a: dec dword ptr [rcx - 0xf763]; inc dword ptr [rax - 0x13f43]; jmp qword ptr [rdi - 0x75]; 
0x000000000041fb9e: dec dword ptr [rcx - 9]; ret; 
0x000000000041c06a: dec dword ptr [rcx]; ret 0x1389; 
0x000000000046781d: dec dword ptr [rdi]; add byte ptr [rcx], cl; ret 0x8f74; 
0x000000000040b80f: dec dword ptr [rdi]; mov dh, 0x42; add ch, cl; ret 0xffde; 
0x0000000000498e47: dec dword ptr [rdi]; mov dh, 0xca; lea rdx, qword ptr [rip + 0x21a82]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x0000000000469026: dec dword ptr [rdi]; mov ebx, ds; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000458336: dec dword ptr [rdi]; test byte ptr [rsi], bl; add al, byte ptr [rax]; add bh, dh; ret 0; 
0x000000000048b370: dec dword ptr [rdi]; test dh, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000042f3f6: dec dword ptr [rdi]; test dword ptr [rbx - 0x3a000003], esp; std; xlatb; ret 0xe883; 
0x000000000040628f: dec dword ptr [rdi]; test dword ptr [rbx], edx; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 + 0xd], cl; ret; 
0x000000000044a380: dec dword ptr [rdi]; test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000040985d: dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000445f71: dec qword ptr [r8 + 0x29]; ret 0x280f; 
0x0000000000406b81: dec qword ptr [rax - 0x7d]; ret 0x4901; 
0x0000000000498a8d: div byte ptr [rax + rbx - 0x80]; cli; adc byte ptr [rdi + rcx + 0x44], cl; ret; 
0x000000000048f698: div byte ptr [rbp + 0x25]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000048f729: div byte ptr [rbp + 0x2c]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000045e9c9: div byte ptr [rbp + 0xc]; mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000000489123: div byte ptr [rbp + 2]; call rax; 
0x000000000044fd6b: div byte ptr [rbp + 2]; ret; 
0x0000000000443dd6: div byte ptr [rbp + 4]; xor rax, rax; ret; 
0x000000000048b965: div byte ptr [rsp + rbp*8 + 0x4c]; mov eax, eax; mov qword ptr [rsi], rdi; pop rbx; ret; 
0x0000000000425809: div byte ptr [rsp + rcx + 0x48]; lea eax, dword ptr [rax - 0x10]; ret; 
0x000000000044ad68: div dword ptr [rdx - 0x27]; vmovups zmmword ptr [rsi], zmm2; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000046c1be: div eax; add r9d, eax; mov eax, r9d; ret; 
0x000000000044c21d: div ecx; mov eax, eax; ret; 
0x000000000044c206: div esi; mov eax, eax; ret; 
0x000000000046c1bd: div r8d; add r9d, eax; mov eax, r9d; ret; 
0x0000000000499e53: fadd dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rdx + rbp*8 + 0x48], dh; add esp, 8; ret; 
0x0000000000499eb3: fadd dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rsi + 0x48], dh; mov dword ptr [rdi + rsi*8], edx; add rsp, 8; ret; 
0x000000000041a801: fadd dword ptr [rax]; add byte ptr [rax], al; lea rcx, qword ptr [rip + 0xb14d4]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000417bef: fadd dword ptr [rax]; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000408f2f: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000048b94d: fadd dword ptr [rbx + rbx*8 - 0x3fbbf0b4]; mov rax, r8; pop rbx; ret; 
0x000000000041242b: fadd dword ptr [rbx - 0x1f3efe20]; add al, 0x89; ret 0xf41; 
0x0000000000495dbc: fadd dword ptr [rcx + 0xf]; xchg eax, ebp; ret; 
0x00000000004263b6: fadd qword ptr [rcx]; add byte ptr [rax - 0x73], cl; add eax, 0x1d870; cmove rax, rdx; ret; 
0x00000000004300c1: fbld dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004300bf: fbstp dword ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044416b: fcmovnb st(0), st(5); std; xlatb; ret; 
0x000000000041f25e: fcomp dword ptr [rbp + 0x41]; pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000486f8b: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x000000000041c0ba: fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000004198af: fcomp dword ptr [rbx + 0x5d]; ret; 
0x0000000000420dc4: fcomp dword ptr [rcx - 0x72b7fff6]; add eax, 0xa99d1; add rsp, 0x10; pop rbp; ret; 
0x000000000048355e: fcomp st(0), st(2); cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000492c1e: fcomp st(0), st(3); mov dh, 0xff; nop word ptr [rax + rax]; pop rbp; ret; 
0x000000000040ba23: fcos; jmp qword ptr [rsi + 0x2e]; 
0x000000000043058f: fdiv dword ptr [rdx - 0x10f09928]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043038f: fdiv qword ptr [rdx - 0x10f09924]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004733dc: fdiv st(0), st(0); dec dword ptr [rax - 0x77]; ret 0xdce9; 
0x00000000004975a1: fdiv st(3); ret; 
0x0000000000413637: fdiv st(7), st(0); jmp qword ptr [rsi + 0xf]; 
0x0000000000476a73: fdivp st(7); jmp qword ptr [rsi + 0x2e]; 
0x00000000004738c4: fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000004626eb: fdivp st(7); jmp qword ptr [rsi - 0x70]; 
0x000000000045211e: fdivr dword ptr [rsi]; jmp rax; 
0x000000000046567f: fdivr st(1); jmp qword ptr [rsi + 0x66]; 
0x00000000004163e4: fdivr st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000044a4f8: fdivr st(7); ret; 
0x0000000000408950: fiadd dword ptr [rbp + 0x450f48c9]; ret 0x8348; 
0x0000000000426f06: fiadd dword ptr [rcx]; add byte ptr [rax - 0x73], cl; adc eax, 0x1f2c0; cmovne rax, rdx; ret; 
0x0000000000469102: fiadd dword ptr [rdx]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000042e8ee: fiadd word ptr [rcx]; add byte ptr [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000412248: fiadd word ptr [rip - 0x147d0000]; add dword ptr [rax - 0x8ff43], eax; jmp qword ptr [rax]; 
0x000000000042e21f: fidiv dword ptr [rbx - 0x32]; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000043048f: fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043018f: fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004721ca: fidivr dword ptr [rcx]; ret 0x820f; 
0x000000000041131f: fidivr dword ptr [rcx]; ret 0x830f; 
0x000000000041a502: fidivr word ptr [rdi + 2]; mov eax, r9d; syscall; 
0x000000000041682e: fild dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8548; 
0x000000000046c1b0: fild word ptr [rcx + rcx*4 - 0x38]; ret; 
0x000000000048db3d: fild word ptr [rcx]; cld; jmp qword ptr [rsi + 0x66]; 
0x0000000000421478: fimul dword ptr [rax + 0x21]; ret 0x8948; 
0x000000000046cb2d: fimul dword ptr [rax + 0x39]; ret 0xe57f; 
0x0000000000443f85: fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000044d925: fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x000000000042d116: fimul dword ptr [rax + rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044f1eb: fimul dword ptr [rax - 0x77]; out dx, eax; mov eax, 9; syscall; 
0x000000000048a840: fimul dword ptr [rax - 0x77]; ret; 
0x00000000004037df: fimul dword ptr [rax - 0x7d]; ret 0x8001; 
0x00000000004242c1: fimul dword ptr [rcx + 0x5b01000a]; ret; 
0x0000000000412022: fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000047534c: fimul dword ptr [rcx + rcx*4 - 0x32]; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000413ebb: fimul dword ptr [rcx + rcx*4 - 0x3a]; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000045a97e: fimul dword ptr [rdi]; test bl, dl; add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x0000000000432781: fimul word ptr [r9 + r9*4 + 0x57]; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000040bf22: fimul word ptr [rax - 0x7d]; ret; 
0x0000000000432782: fimul word ptr [rcx + rcx*4 + 0x57]; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000474220: fimul word ptr [rcx + rcx*4 - 0x19]; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000408887: fimul word ptr [rdi]; test byte ptr [rbx], cl; add al, byte ptr [rax]; add byte ptr [rbx + rcx*4 + 0x15], cl; ret; 
0x0000000000490a1e: fist dword ptr [rax - 0x3f6a74b8]; add al, byte ptr [rax]; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x000000000045fcf9: fist dword ptr [rbx]; cli; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000463191: fist word ptr [rax + rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x0000000000424fc9: fistp qword ptr [rax + 0xca]; syscall; 
0x000000000041ff7c: fisttp dword ptr [rax + 0x21]; ret; 
0x000000000040563f: fisttp dword ptr [rax + 1]; ret; 
0x0000000000495db9: fisttp dword ptr [rax + 9]; fadd dword ptr [rcx + 0xf]; xchg eax, ebp; ret; 
0x00000000004961dc: fisttp dword ptr [rax + 9]; fld dword ptr [rcx + 0xf]; xchg eax, ebp; ret; 
0x00000000004694f3: fisttp dword ptr [rax - 0x39]; ret; 
0x000000000049bee1: fisttp dword ptr [rax - 0x77]; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000468085: fisttp dword ptr [rax - 0x77]; ret; 
0x00000000004140f9: fisttp dword ptr [rcx - 0x77]; ret 0x854d; 
0x000000000046809f: fisttp dword ptr [rcx - 0x77]; ret 0x8b4a; 
0x000000000048b94f: fisttp dword ptr [rdi + rcx + 0x44]; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; ret; 
0x0000000000409916: fisttp dword ptr [rdi]; lahf; rol byte ptr [rax + rcx*4 + 0x17], 0x29; ret; 
0x0000000000409952: fisttp dword ptr [rdi]; test byte ptr [rcx], cl; sbb al, byte ptr [rax]; add byte ptr [rbx - 0x60f43], al; call qword ptr [rax]; 
0x000000000041f02f: fisttp dword ptr [rdx]; add byte ptr [rcx], al; ret; 
0x0000000000432961: fisttp qword ptr [r9 + r9*4 + 0x57]; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004617e5: fisttp qword ptr [rax - 0x77]; ret; 
0x000000000044aa42: fisttp qword ptr [rax - 1]; ror byte ptr [rax - 1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x0000000000432962: fisttp qword ptr [rcx + rcx*4 + 0x57]; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000473cf4: fisttp qword ptr [rcx - 0x3f]; std; add cl, byte ptr [rcx + rcx*4 - 0x16]; call qword ptr [rax + 0x38]; 
0x00000000004325b1: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326ad: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325f9: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000460652: fisttp word ptr [rax + 0xf]; mov esi, 0x83480143; ret; 
0x000000000040a339: fisttp word ptr [rax - 0x77]; ret; 
0x0000000000406ba3: fisttp word ptr [rax - 0x7d]; ret 0x4001; 
0x0000000000402d13: fisttp word ptr [rax - 0x7d]; ret; 
0x000000000046811f: fisttp word ptr [rax]; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000004325b2: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326ae: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325fa: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000406109: fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000044256d: fisttp word ptr [rip - 0x7cb80000]; ret 0x4910; 
0x0000000000430491: fisub dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000448ae3: fisub dword ptr [rsi + 0xf]; xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000430191: fisub word ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000448b21: fisubr word ptr [rax - 0x297af0f0]; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000490335: fld dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000004961df: fld dword ptr [rcx + 0xf]; xchg eax, ebp; ret; 
0x0000000000493283: fld dword ptr [rdx]; add byte ptr [rax], al; lea rsi, qword ptr [rip + 0x3a5f2]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x000000000041671d: fld qword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8548; 
0x00000000004832f2: fld qword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000460d3c: fld qword ptr [rbp + 1]; dec dword ptr [rax - 0x77]; ret; 
0x00000000004263f6: fld qword ptr [rcx]; add byte ptr [rax - 0x73], cl; add eax, 0x1d9d0; cmove rax, rdx; ret; 
0x0000000000411d5b: fld xword ptr [rcx]; ret; 
0x0000000000468ee0: fld xword ptr [rsp - 0x18]; ret; 
0x000000000041f933: fldcw word ptr [rbp + 0x5c7000a]; rep lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000430511: fldenv dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042e411: fldenv dword ptr [rsi + 0xf]; xlatb; ret; 
0x0000000000467951: fldpi; adc r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000468d01: fldpi; sbb r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000468e44: fmul dword ptr [rax + 0x11]; rcr byte ptr [rbp + 0x5b], 1; ret; 
0x0000000000496b37: fmul dword ptr [rax + 0x21]; ret 0xb941; 
0x000000000040841b: fmul dword ptr [rax - 0x3f]; call 0x648dd026; ret; 
0x000000000047421d: fmul dword ptr [rax - 0x77]; fimul word ptr [rcx + rcx*4 - 0x19]; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000046f42f: fmul dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000049a0ff: fmul dword ptr [rcx + rcx*4 - 0x17]; mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x0000000000499b31: fmul dword ptr [rcx + rcx*4 - 0x1f]; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000432b51: fmul qword ptr [r9 + r9*4 + 0x57]; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000040a040: fmul qword ptr [rax - 0x77]; ret; 
0x000000000044e6a4: fmul qword ptr [rax - 0x77]; std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000000485e32: fmul qword ptr [rax - 0x7d]; ret; 
0x0000000000432b52: fmul qword ptr [rcx + rcx*4 + 0x57]; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000427299: fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x000000000043c1cf: fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x000000000041efcc: fmul qword ptr [rdx]; add byte ptr [rax - 0x77], cl; sbb eax, 0xadc62; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x000000000041efd3: fmul qword ptr [rdx]; add byte ptr [rbx + 0xadc5705], al; add byte ptr [rcx], al; pop rbx; ret; 
0x000000000041efd9: fmul qword ptr [rdx]; add byte ptr [rcx], al; pop rbx; ret; 
0x0000000000493120: fmul st(6), st(0); mov dh, 0xff; nop dword ptr [rax]; add rsp, 8; ret; 
0x000000000043028f: fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042f497: fnstcw word ptr [rsi]; jmp rcx; 
0x000000000043050f: fnstenv dword ptr [rdx - 0x10f09927]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000496c9b: fnstenv dword ptr [rsi]; add al, byte ptr [rax]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x00000000004251d3: fnstsw dword ptr [rdx + 0xa]; add dh, dh; ret 0x7402; 
0x0000000000430291: frstor dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004536cf: fsqrt; jmp qword ptr [rsi + 0xf]; 
0x000000000046c2bb: fstp dword ptr [rax + rax]; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000044ab7c: fstp xword ptr [rdx]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000427021: fstp xword ptr [rsi]; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x000000000044e25c: fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000044e300: fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000044e538: fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x000000000049028c: fsub dword ptr [rsi + 0xf]; cmp ah, byte ptr [rbx - 0x25]; cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x0000000000430591: fsub dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000444ca4: fsub dword ptr [rsi + 0xf]; xlatb; ret; 
0x000000000040913d: fsub dword ptr [rsi - 0x70]; mov eax, r8d; ret; 
0x0000000000430391: fsub qword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044359c: fsub qword ptr [rsi + 0xf]; xlatb; ret; 
0x00000000004272df: fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000044ee29: fsubr st(3); ror byte ptr [rdi], 0x1f; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x000000000041c27d: fucompi st(0); insd dword ptr [rdi], dx; ret; 
0x000000000045f458: fucompi st(0); ret 0xfc4f; 
0x000000000044ff9b: hlt; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000474307: hlt; and eax, 0x83480000; ret; 
0x000000000046ff3a: hlt; idiv bh; jmp qword ptr [rsi - 0x70]; 
0x0000000000437eda: hlt; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432b5e: hlt; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437ed3: hlt; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044dd4e: hlt; mov edi, edx; mov eax, r8d; syscall; 
0x0000000000432cb7: hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cd3: hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004902eb: hlt; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000044a003: hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000401be0: hlt; pop rbp; mov edi, 0x4cbb10; jmp rax; 
0x0000000000401c1d: hlt; pop rbp; mov rsi, rax; mov edi, 0x4cbb10; jmp rdx; 
0x000000000044a007: hlt; sub eax, edx; ret; 
0x00000000004120c8: idiv bh; call qword ptr [rax]; 
0x000000000041306d: idiv bh; call qword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x00000000004727a6: idiv bh; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000412fdd: idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000472738: idiv bh; dec dword ptr [rbp + 0x63]; ret 0x8948; 
0x000000000049954f: idiv bh; dec dword ptr [rcx - 0x77]; ret; 
0x0000000000471580: idiv bh; inc esi; test eax, ecx; idiv bh; jmp qword ptr [rax]; 
0x0000000000471586: idiv bh; jmp qword ptr [rax]; 
0x0000000000489a93: idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000044fd92: idiv bh; jmp qword ptr [rsi + 0x66]; 
0x000000000040549f: idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000040551b: idiv bh; jmp qword ptr [rsi - 0x70]; 
0x000000000049a778: idiv bh; nop word ptr [rax + rax]; mov eax, 4; add rsp, 8; ret; 
0x000000000041c173: idiv byte ptr [rcx + 3]; mov edx, 1; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000402670: idiv byte ptr [rdi + 0x3003]; mov eax, 0x9e; syscall; 
0x000000000045563a: idiv byte ptr [rdx - 1]; cmovs eax, edx; ret; 
0x00000000004710cf: idiv ebp; jmp qword ptr [rsi + 0x66]; 
0x000000000041286f: idiv edi; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x00000000004716a1: idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x00000000004618fc: idiv edi; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000412d47: idiv edi; dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000472186: idiv edi; dec dword ptr [rcx + rcx*4 - 0x2e]; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x0000000000411faa: idiv edi; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000411e64: idiv edi; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x0000000000412387: idiv edi; inc dword ptr [rcx]; ret; 
0x0000000000412a8d: idiv edi; inc edi; test esp, edx; idiv bh; call qword ptr [rax]; 
0x00000000004120e9: idiv edi; jmp qword ptr [rax]; 
0x0000000000415763: idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000004206bf: idiv edi; jmp qword ptr [rsi + 0x66]; 
0x0000000000411aa4: idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000046fb2b: idiv edi; jmp qword ptr [rsi - 0x70]; 
0x0000000000413224: idiv edi; jmp qword ptr [rsi - 0x77]; 
0x000000000040999c: idiv edi; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f025], 0x29; ret; 
0x000000000045377b: idiv edx; jmp qword ptr [rsi - 0x70]; 
0x0000000000413801: idiv esi; jmp qword ptr [rsi + 0x66]; 
0x000000000046417b: idiv r15d; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x00000000004712e2: idiv rdi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000405e5e: imul cl; ret; 
0x00000000004831bd: imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000448b61: imul eax, dword ptr [rcx], 0; add dh, dh; ret 0x7502; 
0x000000000047e265: imul eax, dword ptr [rdx], 0x8a0c8b00; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e02a: imul eax, dword ptr [rsi], 0; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000045ee10: imul eax, edi; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000048df34: imul eax; sahf; xor edi, esi; dec dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000406702: imul eax; shr byte ptr [rcx - 0x76b70001], 1; ret 0xf748; 
0x00000000004652a3: imul ebp, dword ptr [rax], 0x83480000; ret; 
0x0000000000425f56: imul ecx, dword ptr [rax], 0x5b; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000004950fc: imul ecx, dword ptr [rax], 0xf; test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x23840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x0000000000419184: imul ecx, dword ptr [rcx + 0x2b], 0x47; and byte ptr [rax + 1], cl; ret; 
0x0000000000426197: imul ecx, dword ptr [rdx], 0; adc byte ptr [rax - 0x73], cl; adc eax, 0x248be; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x000000000042616e: imul ecx, dword ptr [rdx], 0; add cl, byte ptr [rax - 0x73]; add eax, 0x1e6c7; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x0000000000423c17: imul ecx, dword ptr [rdx], 0; syscall; 
0x0000000000423c4f: imul ecx, dword ptr [rdx], 0; syscall; pop rbp; ret; 
0x00000000004263ac: imul ecx, dword ptr [rdx], 0xd0394800; lea rdx, qword ptr [rip + 0x1dc37]; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263ec: imul ecx, dword ptr [rdx], 0xd0394800; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x000000000046cb70: imul ecx, esp, 0xfffcc4e9; jmp qword ptr [rsi + 0xf]; 
0x000000000043b977: imul edi, ebp, 0x487c5162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b73d: imul edi, ebp, 0x487cd162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000041fcb1: imul edi, edi, -1; dec dword ptr [rax + 0x29]; ret 0x8d49; 
0x00000000004272e1: imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000049a777: imul esi, esi, 0x1f0f66ff; add byte ptr [rax], r8b; mov eax, 4; add rsp, 8; ret; 
0x000000000041fdfc: imul esp, dword ptr [rbx*2 + 0x10438941], 0x41; mov dword ptr [rbx + 0x14], 0; ret; 
0x00000000004837ce: imul esp, dword ptr [rdx + 0x48], 0x73740639; xor eax, eax; leave; ret; 
0x0000000000423c4e: imul r9, qword ptr [rdx], 0; syscall; 
0x0000000000423c4e: imul r9, qword ptr [rdx], 0; syscall; pop rbp; ret; 
0x000000000045ee0f: imul rax, rdi; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x0000000000482ed6: in al, 0; add byte ptr [rax], al; syscall; 
0x0000000000490d52: in al, 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000491c13: in al, 0x48; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000432b56: in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000045cc24: in al, 0x4c; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000049569e: in al, 0x5b; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000420088: in al, 0x5b; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000403065: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000478ea6: in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x000000000044491c: in al, 0x74; or dword ptr [rax - 1], ecx; ret 0xc148; 
0x000000000040816e: in al, 0x75; adc al, 0xeb; sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000040a4d2: in al, 0x75; ret; 
0x0000000000498f0b: in al, 0x83; call qword ptr [rcx]; 
0x00000000004772b2: in al, 0xe9; ret; 
0x0000000000437eba: in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000044bcd2: in al, 0xf3; ret; 
0x000000000046c390: in al, 0xf; lahf; ret 0x87e; 
0x000000000046c74e: in al, 0xf; lahf; ret 0x8f0f; 
0x0000000000411e69: in al, 0xf; lahf; ret; 
0x0000000000415688: in al, 0xff; inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000412e77: in al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000046d825: in al, dx; add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000491d62: in al, dx; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], -0x7d; ret 0x4801; 
0x000000000049a7bb: in al, dx; and byte ptr [rax - 0x80], al; call qword ptr [rax + 0xf]; 
0x0000000000499877: in al, dx; cwde; add dword ptr [rax], eax; add dh, dh; ret; 
0x00000000004382b0: in al, dx; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000432b5a: in al, dx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000048b967: in al, dx; mov rax, r8; mov qword ptr [rsi], rdi; pop rbx; ret; 
0x00000000004382ba: in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044d9a3: in al, dx; or al, ch; out 0x36, al; sti; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000488cd0: in al, dx; or bh, bh; adc eax, 0x42468; xor eax, eax; add rsp, 8; ret; 
0x000000000042399c: in al, dx; or byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x000000000042d504: in al, dx; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000048cbad: in al, dx; or byte ptr [rax], dl; add byte ptr [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000000495794: in al, dx; sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x00000000004682fa: in eax, 0; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000048cbb4: in eax, 0x48; mov esi, ebp; syscall; 
0x0000000000432966: in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004085e4: in eax, 0x62; or dword ptr [rax], eax; call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x000000000049396a: in eax, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000044c199: in eax, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000000437f3a: in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000046b40c: in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000460d38: in eax, dx; add dword ptr [rcx - 0x77], ecx; fld qword ptr [rbp + 1]; dec dword ptr [rax - 0x77]; ret; 
0x000000000049a774: in eax, dx; call 0x1104; nop word ptr [rax + rax]; mov eax, 4; add rsp, 8; ret; 
0x00000000004722bd: in eax, dx; clc; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x000000000046d592: in eax, dx; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000438330: in eax, dx; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044a822: in eax, dx; lea rax, qword ptr [rcx - 1]; ret; 
0x000000000043296a: in eax, dx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043833a: in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000049aa35: in eax, dx; nop word ptr cs:[rax + rax]; xor eax, eax; add rsp, 8; ret; 
0x000000000047f950: in eax, dx; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041d47a: in eax, dx; ret; 
0x000000000044a972: in eax, dx; sub rax, 1; ret; 
0x000000000044ce6e: inc byte ptr [rdi]; add byte ptr [rax], cl; lea rax, qword ptr [rip + 0xb17]; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x000000000048c36c: inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000048c36d: inc dword ptr [rax + 0x10]; pop rbx; pop rbp; ret; 
0x000000000046e6a2: inc dword ptr [rax - 0x13f43]; jmp qword ptr [rdi + 0x75]; 
0x000000000046e450: inc dword ptr [rax - 0x13f43]; jmp qword ptr [rdi - 0x75]; 
0x000000000044e06b: inc dword ptr [rax - 0x7af0f506]; ret; 
0x000000000046cce2: inc dword ptr [rax - 0x7bf09a05]; or byte ptr fs:[rax], al; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000412829: inc dword ptr [rax - 0x8ff43]; jmp qword ptr [rax]; 
0x0000000000472bf6: inc dword ptr [rax - 0x93743]; jmp qword ptr [rax]; 
0x0000000000411fac: inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040ba1c: inc dword ptr [rax]; add byte ptr [rax], al; add cl, ch; rcr cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000430aa1: inc dword ptr [rax]; add byte ptr [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000044c140: inc dword ptr [rax]; add byte ptr [rax], al; cmove rax, rcx; ret; 
0x0000000000430aa7: inc dword ptr [rax]; add byte ptr [rax], al; sub eax, ecx; ret; 
0x000000000041fa2a: inc dword ptr [rax]; add byte ptr [rsi + 1], dh; ret; 
0x000000000040b20f: inc dword ptr [rax]; add dword ptr [rax], eax; add cl, ch; ret 0xffe4; 
0x00000000004140f6: inc dword ptr [rbp + 0x31]; fisttp dword ptr [rcx - 0x77]; ret 0x854d; 
0x00000000004709f0: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000045f5b2: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4e3: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454628: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454508: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d350: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e10: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424148: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424110: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c38: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c00: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac0: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000420d68: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf2: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab0: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x000000000041eb42: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7de: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041d3ce: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d12e: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x0000000000417880: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004084a8: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x000000000040846d: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408389: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065cd: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000403df1: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dc8: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403c9d: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040b823: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004246e8: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249da: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000000042575d: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x000000000042189e: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fb9: inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000000422cfe: inc dword ptr [rbp + 0x31]; shl byte ptr [rdi + rax*8], 0xc; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x00000000004133a2: inc dword ptr [rbp + 0x39]; ret; 
0x000000000048f8e4: inc dword ptr [rbp + 0x480e74c0]; lea eax, dword ptr [rip + 0x3d6f0]; mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x000000000048cde2: inc dword ptr [rbp + 0x481975c0]; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x0000000000491aef: inc dword ptr [rbp + 0x481a74c0]; lea ebx, dword ptr [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x0000000000488d16: inc dword ptr [rbp + 0x5b0275c0]; ret; 
0x0000000000472d9c: inc dword ptr [rbp + 0x6b880fdb]; or eax, 0x8b480000; test dword ptr [rax], edi; idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x0000000000469f8a: inc dword ptr [rbp + 1]; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000493aa6: inc dword ptr [rbp - 0x3f6af040]; add rsp, 8; movzx eax, al; neg eax; ret; 
0x0000000000411e66: inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x0000000000455530: inc dword ptr [rbx + 0x778a40d]; add byte ptr [rdx], al; add rsp, 8; ret; 
0x000000000046e215: inc dword ptr [rbx - 0x9b43]; jmp qword ptr [rsi + 0xf]; 
0x000000000044c21b: inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000044c16c: inc dword ptr [rbx]; ret; 
0x0000000000473539: inc dword ptr [rcx + 0xf]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x000000000048f84a: inc dword ptr [rcx + rbp - 0x40]; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000041c32b: inc dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000466cc3: inc dword ptr [rcx - 0x45]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040b209: inc dword ptr [rcx - 0x62f73]; inc dword ptr [rax]; add dword ptr [rax], eax; add cl, ch; ret 0xffe4; 
0x000000000040a03d: inc dword ptr [rcx - 0x77]; fmul qword ptr [rax - 0x77]; ret; 
0x00000000004755c2: inc dword ptr [rcx - 0x77]; ret 0x2941; 
0x0000000000459be6: inc dword ptr [rcx - 0x77]; ret 0x2be9; 
0x000000000045711e: inc dword ptr [rcx - 0x77]; ret 0x2fe9; 
0x0000000000450254: inc dword ptr [rcx - 0x77]; ret 0xf883; 
0x000000000045aeca: inc dword ptr [rcx - 0x77]; ret; 
0x0000000000473d0d: inc dword ptr [rcx]; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000412389: inc dword ptr [rcx]; ret; 
0x0000000000442d4d: inc dword ptr [rip - 0x7cb80000]; ret 0x4910; 
0x000000000044aa4a: inc eax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000044aa47: inc eax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000044aa44: inc eax; inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000042f3fc: inc ebp; std; xlatb; ret 0xe883; 
0x000000000046e10f: inc edi; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x0000000000412a8f: inc edi; test esp, edx; idiv bh; call qword ptr [rax]; 
0x0000000000412537: inc esi; test dword ptr [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000000471582: inc esi; test eax, ecx; idiv bh; jmp qword ptr [rax]; 
0x000000000044aa49: inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000044aa46: inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000044aa43: inc rax; inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x0000000000412536: inc rsi; test dword ptr [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x000000000042dc84: insb byte ptr [rdi], dx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000468ee1: insb byte ptr [rdi], dx; and al, 0xe8; ret; 
0x00000000004837cd: insb byte ptr [rdi], dx; imul esp, dword ptr [rdx + 0x48], 0x73740639; xor eax, eax; leave; ret; 
0x0000000000475df3: insb byte ptr [rdi], dx; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000041da83: insb byte ptr [rdi], dx; movzx esi, byte ptr [r12]; lea r15, qword ptr [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x00000000004260ae: insb byte ptr [rdi], dx; or al, byte ptr [rax]; lea rax, qword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x0000000000423ad7: insb byte ptr [rdi], dx; or al, byte ptr [rax]; syscall; 
0x000000000044c23e: insb byte ptr [rdi], dx; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000047f1d0: insd dword ptr [rdi], dx; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000460322: insd dword ptr [rdi], dx; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004800d0: insd dword ptr [rdi], dx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000048c1ef: insd dword ptr [rdi], dx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x000000000049a147: insd dword ptr [rdi], dx; call 0xfffffffff07f2c99; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e2: insd dword ptr [rdi], dx; call 0xfffffffff07f2d34; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000049a273: insd dword ptr [rdi], dx; call 0xfffffffff07f2dc5; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a2c2: insd dword ptr [rdi], dx; call 0xfffffffff07f2e14; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000049a38f: insd dword ptr [rdi], dx; call 0xfffffffff07f2ee1; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000049a427: insd dword ptr [rdi], dx; call 0xfffffffff07f2f79; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a47b: insd dword ptr [rdi], dx; call 0xfffffffff07f2fcd; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000041c27f: insd dword ptr [rdi], dx; ret; 
0x0000000000483eeb: int 0; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004242d9: int 0x45; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000000403e07: int 0x88; or al, 0; syscall; 
0x00000000004742c3: int 0xf8; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x000000000045619b: int 0xfa; jmp qword ptr [rsi - 0x70]; 
0x0000000000493a6e: int 0xfb; jmp qword ptr [rsi + 0x2e]; 
0x000000000040916f: int 1; add byte ptr [rax + rax*8 - 0x74b7cd8c], al; adc byte ptr [r8 - 0x75], cl; push rbx; sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x0000000000470c1a: int 5; add byte ptr [rcx + 0x5ae4905], cl; add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x00000000004301cf: int 8; add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000426e6c: int1; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000048b083: int1; add eax, dword ptr [rax]; add byte ptr [rax + 0x63], cl; ret; 
0x00000000004286a8: int1; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000043bd95: int1; dec byte ptr [rax + 0x6f]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x0000000000448a53: int1; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x000000000045feb5: int1; mov eax, 0; test dl, dl; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000044c21e: int1; mov eax, eax; ret; 
0x0000000000437d2b: int1; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043312f: int1; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437d23: int1; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004332a7: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332c3: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000045350c: int1; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000449fd3: int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000042098b: int1; ret 0xa; 
0x000000000048241e: int1; ret; 
0x0000000000449fd7: int1; sub eax, edx; ret; 
0x000000000046172f: int1; syscall; 
0x0000000000448a49: int1; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x0000000000444809: int1; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000444813: int1; vzeroupper; ret; 
0x0000000000401378: int1; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000044217d: iretd; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481b2e: iretd; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000426dad: iretd; add r8b, byte ptr [r8]; cmove rax, rdx; ret; 
0x0000000000481e23: iretd; cmovne rsi, rdx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x0000000000493a6d: iretd; int 0xfb; jmp qword ptr [rsi + 0x2e]; 
0x000000000048e08b: iretd; movsx eax, byte ptr [rsi]; neg eax; ret; 
0x0000000000428772: iretd; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000429bd6: iretd; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004906e3: iretd; nop dword ptr [rax]; call rax; 
0x000000000045dc4d: iretd; push rdx; cli; jmp qword ptr [rsi + 0x66]; 
0x000000000040a7be: jmp qword ptr [rax]; 
0x000000000040da8f: jmp qword ptr [rbp + 0x31]; 
0x000000000040eed2: jmp qword ptr [rbp + 0x48]; 
0x0000000000460937: jmp qword ptr [rbp + 0xf]; 
0x000000000045d47d: jmp qword ptr [rbp + 4]; 
0x000000000040cd7a: jmp qword ptr [rbp - 0x45]; 
0x00000000004851b5: jmp qword ptr [rbx]; 
0x000000000048bafe: jmp qword ptr [rdi + 0x6d]; 
0x000000000046e6a8: jmp qword ptr [rdi + 0x75]; 
0x000000000046e456: jmp qword ptr [rdi - 0x75]; 
0x0000000000413f5e: jmp qword ptr [rdi]; 
0x000000000043bab6: jmp qword ptr [rdx + 0x51]; 
0x000000000043bc17: jmp qword ptr [rdx + 0x71]; 
0x000000000043bbcf: jmp qword ptr [rdx - 0x2f]; 
0x000000000043b715: jmp qword ptr [rdx - 0xf]; 
0x0000000000402a35: jmp qword ptr [rsi + 0x2e]; 
0x000000000047026b: jmp qword ptr [rsi + 0x3d]; 
0x000000000044ab44: jmp qword ptr [rsi + 0x41]; 
0x000000000044a873: jmp qword ptr [rsi + 0x44]; 
0x00000000004363cf: jmp qword ptr [rsi + 0x45]; 
0x0000000000403e11: jmp qword ptr [rsi + 0x66]; 
0x0000000000402946: jmp qword ptr [rsi + 0xf]; 
0x0000000000402ccd: jmp qword ptr [rsi - 0x70]; 
0x0000000000413226: jmp qword ptr [rsi - 0x77]; 
0x0000000000489946: jmp qword ptr [rsi - 0x7b]; 
0x000000000044eab9: jmp qword ptr [rsi - 0x7d]; 
0x0000000000416bc3: jmp qword ptr [rsi - 0x7f]; 
0x000000000046d66d: jmp qword ptr [rsi]; 
0x0000000000401af9: jmp rax; 
0x000000000048d175: jmp rbx; 
0x0000000000402857: jmp rcx; 
0x0000000000401c27: jmp rdx; 
0x0000000000401d60: jno 0x1d62; add cl, cl; ret; 
0x00000000004302fe: jno 0x30307; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b744: jno 0x3b744; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b97e: jno 0x3b97e; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043bae5: jno 0x3baed; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bc35: jno 0x3bcb3; adc qword ptr [rdi - 5], rsp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc3c: jno 0x3bcba; adc qword ptr [rdi - 6], rbp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc43: jno 0x3bcc1; adc qword ptr [rdi - 7], rsi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc4a: jno 0x3bcc8; adc qword ptr [rdi - 8], rdi; ret; 
0x000000000044b098: jno 0x4b08a; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b186: jno 0x4b178; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b460: jno 0x4b442; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000044b593: jno 0x4b575; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000492bc2: jno 0x92bc6; add al, ch; push rsi; add esi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000045dea1: jnp 0x5def3; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000468ca3: jnp 0x68ca3; jmp qword ptr [rsi + 0x2e]; 
0x00000000004770e2: jnp 0x770fc; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000475621: jnp 0xffffffff8948ec3b; adc dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x0000000000426ce3: jns 0x26d2a; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x000000000043b74b: jns 0x3b74c; ret; 
0x000000000043b985: jns 0x3b986; ret; 
0x000000000043baec: jns 0x3baf5; ret; 
0x0000000000442027: jns 0x4208c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442078: jns 0x420dd; rcr dword ptr [rdx], 0xf; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442177: jns 0x421dc; rcr dword ptr [rdx], 0xf; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442316: jns 0x4237b; rcr dword ptr [rdx], 0xf; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442567: jns 0x425cc; rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000442708: jns 0x4276d; rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442807: jns 0x4286c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442858: jns 0x428bd; rcr dword ptr [rdx], 0xf; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442957: jns 0x429bc; rcr dword ptr [rdx], 0xf; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442d47: jns 0x42dac; rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000443038: jns 0x4309d; rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000443137: jns 0x4319c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b09c: jns 0x4b07e; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b18a: jns 0x4b16c; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b465: jns 0x4b427; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000044b598: jns 0x4b55a; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000044b91d: jns 0x4b91d; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000044baa8: jns 0x4baa8; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000048cb0c: jns 0x8cb07; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000490073: jns 0x900d6; stc; jmp qword ptr [rsi + 0xf]; 
0x000000000049c226: jns 0x9c22b; mov r8, qword ptr [r8]; mov qword ptr [rbx], r8; pop rbx; ret; 
0x0000000000402352: jo 0x2313; add dword ptr [rax], esi; add byte ptr [rax], al; mov eax, 0x9e; syscall; 
0x00000000004263bc: jo 0x26396; add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x000000000044ca7c: jo 0x4cad9; pop rbp; pop r12; ret; 
0x000000000045750a: jo 0x5751b; mov dh, 0x70; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000458033: jo 0x58044; mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x000000000045b386: jo 0x5b397; mov dh, 0x70; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000469f88: jo 0x69f83; inc dword ptr [rbp + 1]; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000477ffb: jo 0x7800d; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x0000000000478c9e: jo 0x78ce0; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000408336: jo 0x8358; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x0000000000422d8c: jp 0x22d98; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004251d4: jp 0x251e0; add dh, dh; ret 0x7402; 
0x0000000000427056: jp 0x27058; add byte ptr [rax - 0x73], cl; add eax, 0x7600; cmove rax, rdx; ret; 
0x000000000045bb56: jp 0x5bb5c; add al, ch; ret 0xfa73; 
0x000000000048b4b3: jp 0x8b4ac; jmp qword ptr [rsi + 0x2e]; 
0x000000000049a5af: jp 0x9a5b9; sbb ecx, ecx; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x0000000000442aad: lahf; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041f5c8: lahf; ret 0x3949; 
0x000000000041f662: lahf; ret 0x61e9; 
0x000000000046c392: lahf; ret 0x87e; 
0x000000000046c750: lahf; ret 0x8f0f; 
0x000000000040acd4: lahf; ret 0xd129; 
0x000000000040de63: lahf; ret 0xd629; 
0x000000000049151c: lahf; ret 3; 
0x0000000000411e6b: lahf; ret; 
0x0000000000409918: lahf; rol byte ptr [rax + rcx*4 + 0x17], 0x29; ret; 
0x000000000044313d: lar eax, word ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000045f622: lcall ptr [rbp + 0x41]; pop rsp; pop r13; ret; 
0x000000000041de45: lcall ptr [rbp + 0x41]; pop rsp; ret; 
0x0000000000419b75: lcall ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x0000000000419895: lcall ptr [rbx + 0x5d]; ret; 
0x000000000048ce0a: lcall ptr [rbx + 0x64]; mov eax, dword ptr [rax]; ret; 
0x00000000004261e8: lcall ptr [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004384ac: lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000438736: lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004386c6: lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438656: lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385e6: lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438576: lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438506: lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438b26: lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438ab6: lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438a46: lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004389d6: lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438966: lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004388f6: lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438886: lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438816: lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004387a6: lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000437c96: lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x000000000043843c: lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004383bc: lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043832c: lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004382ac: lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043822c: lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004381ac: lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043812c: lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004380ac: lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043802c: lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437fac: lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437f2c: lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437eac: lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437e1c: lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d8c: lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437cfc: lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437c8c: lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x00000000004384b6: lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000438441: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004383c1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438331: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004382b1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438231: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004381b1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438131: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004380b1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438031: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437fb1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437f31: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437eb1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437e21: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d91: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d01: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043873b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004386cb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043865b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385eb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043857b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043850b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438b2b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438abb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438a4b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004389db: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043896b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004388fb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043888b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043881b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004387ab: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000048c435: lea eax, dword ptr [rax + 1]; mov qword ptr [rip + 0x40ed1], rax; ret; 
0x000000000042e5f4: lea eax, dword ptr [rax + rdi + 0x10]; ret; 
0x000000000042e604: lea eax, dword ptr [rax + rdi + 0x20]; ret; 
0x000000000042e5d4: lea eax, dword ptr [rax + rdi - 0x10]; ret; 
0x0000000000488803: lea eax, dword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887d1: lea eax, dword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000042580d: lea eax, dword ptr [rax - 0x10]; ret; 
0x0000000000418376: lea eax, dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000481e2d: lea eax, dword ptr [rcx + rsi]; ret; 
0x000000000044a824: lea eax, dword ptr [rcx - 1]; ret; 
0x00000000004484ec: lea eax, dword ptr [rdi + 0x10]; ret; 
0x0000000000448501: lea eax, dword ptr [rdi + 0x11]; ret; 
0x000000000044851f: lea eax, dword ptr [rdi + 0x12]; ret; 
0x000000000044853f: lea eax, dword ptr [rdi + 0x13]; ret; 
0x0000000000448562: lea eax, dword ptr [rdi + 0x14]; ret; 
0x0000000000448581: lea eax, dword ptr [rdi + 0x15]; ret; 
0x00000000004485a1: lea eax, dword ptr [rdi + 0x16]; ret; 
0x00000000004485c1: lea eax, dword ptr [rdi + 0x17]; ret; 
0x00000000004485e4: lea eax, dword ptr [rdi + 0x18]; ret; 
0x0000000000448609: lea eax, dword ptr [rdi + 0x19]; ret; 
0x0000000000448627: lea eax, dword ptr [rdi + 0x1a]; ret; 
0x0000000000448647: lea eax, dword ptr [rdi + 0x1b]; ret; 
0x0000000000448663: lea eax, dword ptr [rdi + 0x1c]; ret; 
0x0000000000448683: lea eax, dword ptr [rdi + 0x1d]; ret; 
0x00000000004486a3: lea eax, dword ptr [rdi + 0x1e]; ret; 
0x00000000004486c3: lea eax, dword ptr [rdi + 0x1f]; ret; 
0x000000000044843d: lea eax, dword ptr [rdi + 0xa]; ret; 
0x000000000044845d: lea eax, dword ptr [rdi + 0xb]; ret; 
0x000000000044847f: lea eax, dword ptr [rdi + 0xc]; ret; 
0x000000000044849f: lea eax, dword ptr [rdi + 0xd]; ret; 
0x00000000004484bf: lea eax, dword ptr [rdi + 0xe]; ret; 
0x00000000004484d9: lea eax, dword ptr [rdi + 0xf]; ret; 
0x0000000000448387: lea eax, dword ptr [rdi + 1]; ret; 
0x00000000004489c7: lea eax, dword ptr [rdi + 1]; vzeroupper; ret; 
0x000000000044839a: lea eax, dword ptr [rdi + 2]; ret; 
0x00000000004489db: lea eax, dword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004483a5: lea eax, dword ptr [rdi + 3]; ret; 
0x00000000004489f5: lea eax, dword ptr [rdi + 3]; vzeroupper; ret; 
0x00000000004483b8: lea eax, dword ptr [rdi + 4]; ret; 
0x00000000004483cd: lea eax, dword ptr [rdi + 5]; ret; 
0x00000000004483eb: lea eax, dword ptr [rdi + 6]; ret; 
0x00000000004483f7: lea eax, dword ptr [rdi + 7]; ret; 
0x000000000044840a: lea eax, dword ptr [rdi + 8]; ret; 
0x000000000044841f: lea eax, dword ptr [rdi + 9]; ret; 
0x000000000042e629: lea eax, dword ptr [rdi + rax + 0x10]; ret; 
0x00000000004439c7: lea eax, dword ptr [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000042e639: lea eax, dword ptr [rdi + rax + 0x20]; ret; 
0x000000000042e533: lea eax, dword ptr [rdi + rax + 0x30]; ret; 
0x00000000004439e7: lea eax, dword ptr [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000443a25: lea eax, dword ptr [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000482075: lea eax, dword ptr [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000443420: lea eax, dword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044388d: lea eax, dword ptr [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044364b: lea eax, dword ptr [rdi + rax]; ret; 
0x0000000000448a0d: lea eax, dword ptr [rdi + rdx]; vzeroupper; ret; 
0x0000000000481d29: lea eax, dword ptr [rdi + rsi]; ret; 
0x000000000046c1b8: lea eax, dword ptr [rdi - 1]; xor edx, edx; div r8d; add r9d, eax; mov eax, r9d; ret; 
0x0000000000448373: lea eax, dword ptr [rdi]; ret; 
0x0000000000448945: lea eax, dword ptr [rdi]; vzeroupper; ret; 
0x000000000044794d: lea eax, dword ptr [rdx + 0xa]; ret; 
0x000000000044796d: lea eax, dword ptr [rdx + 0xb]; ret; 
0x000000000044798f: lea eax, dword ptr [rdx + 0xc]; ret; 
0x00000000004479af: lea eax, dword ptr [rdx + 0xd]; ret; 
0x00000000004479cf: lea eax, dword ptr [rdx + 0xe]; ret; 
0x000000000044785f: lea eax, dword ptr [rdx + 0xf]; ret; 
0x0000000000447887: lea eax, dword ptr [rdx + 1]; ret; 
0x000000000044789d: lea eax, dword ptr [rdx + 2]; ret; 
0x00000000004478b5: lea eax, dword ptr [rdx + 3]; ret; 
0x00000000004478cb: lea eax, dword ptr [rdx + 4]; ret; 
0x00000000004478dd: lea eax, dword ptr [rdx + 5]; ret; 
0x00000000004478fb: lea eax, dword ptr [rdx + 6]; ret; 
0x0000000000447807: lea eax, dword ptr [rdx + 7]; ret; 
0x000000000044790d: lea eax, dword ptr [rdx + 8]; ret; 
0x000000000044792d: lea eax, dword ptr [rdx + 9]; ret; 
0x000000000041e21e: lea eax, dword ptr [rdx + rdi]; ret; 
0x000000000044c1b3: lea eax, dword ptr [rdx + rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000000447875: lea eax, dword ptr [rdx]; ret; 
0x0000000000426f56: lea eax, dword ptr [rip + 0x14eb4]; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x000000000042709a: lea eax, dword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004260b3: lea eax, dword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x00000000004263ba: lea eax, dword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263fa: lea eax, dword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x0000000000426f03: lea eax, dword ptr [rip + 0x1da27]; lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x0000000000426173: lea eax, dword ptr [rip + 0x1e6c7]; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x0000000000496c99: lea eax, dword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000426be3: lea eax, dword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x000000000042701f: lea eax, dword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426eaf: lea eax, dword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d4f: lea eax, dword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fb1: lea eax, dword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e41: lea eax, dword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426ce1: lea eax, dword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000427003: lea eax, dword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e93: lea eax, dword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x00000000004261a3: lea eax, dword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426d33: lea eax, dword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426dca: lea eax, dword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426dab: lea eax, dword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x0000000000426df3: lea eax, dword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x00000000004821ba: lea eax, dword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x0000000000420ecf: lea eax, dword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420ec1: lea eax, dword ptr [rip + 0x3029]; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000042645d: lea eax, dword ptr [rip + 0x39fd]; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x000000000048f901: lea eax, dword ptr [rip + 0x3d6d9]; mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x000000000048f8ea: lea eax, dword ptr [rip + 0x3d6f0]; mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x00000000004900d3: lea eax, dword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x000000000042705a: lea eax, dword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c1a: lea eax, dword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000452015: lea eax, dword ptr [rip + 0x79205]; ret; 
0x0000000000478ef6: lea eax, dword ptr [rip + 0x7f4]; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000426c64: lea eax, dword ptr [rip + 0x8026]; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x000000000048217a: lea eax, dword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x0000000000478e2a: lea eax, dword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000426fd2: lea eax, dword ptr [rip + 0x9b08]; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e62: lea eax, dword ptr [rip + 0x9c58]; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000420dc9: lea eax, dword ptr [rip + 0xa99d1]; add rsp, 0x10; pop rbp; ret; 
0x000000000044ce73: lea eax, dword ptr [rip + 0xb17]; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000426d02: lea eax, dword ptr [rip + 0xc7b8]; lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x0000000000426113: lea eax, dword ptr [rip + 0xf97]; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x00000000004243fb: lea eax, dword ptr [rip - 0x511]; mov qword ptr [rip + 0xa6380], rax; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x0000000000424409: lea eax, dword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x000000000049914f: lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff]; ret 0x8941; 
0x0000000000491af5: lea ebx, dword ptr [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000046d466: lea ebx, dword ptr [rdi + rdi*8 - 1]; jmp qword ptr [rsi + 0xf]; 
0x00000000004236d8: lea ecx, dword ptr [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004236d9: lea ecx, dword ptr [rax + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004823a2: lea ecx, dword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000044ca4e: lea ecx, dword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000041704d: lea ecx, dword ptr [rbx + 0x40]; lea rdx, qword ptr [rbx + 0x34]; mov esi, 1; mov rdi, rbx; call rax; 
0x000000000042cf90: lea ecx, dword ptr [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000049864a: lea ecx, dword ptr [rip + 0x21e94]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x0000000000481bbe: lea ecx, dword ptr [rip + 0x2305c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004804dd: lea ecx, dword ptr [rip + 0x2473d]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004801fe: lea ecx, dword ptr [rip + 0x24a1c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000047e56d: lea ecx, dword ptr [rip + 0x266ad]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000048ed18: lea ecx, dword ptr [rip + 0x3cd62]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000443369: lea ecx, dword ptr [rip + 0x618b1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000441f54: lea ecx, dword ptr [rip + 0x62cc6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000441ce9: lea ecx, dword ptr [rip + 0x62f31]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000440414: lea ecx, dword ptr [rip + 0x64806]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000041a806: lea ecx, dword ptr [rip + 0xb14d4]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000414672: lea ecx, dword ptr [rip + 0xb2cc8]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d2b: lea ecx, dword ptr [rip + 0xb360f]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x00000000004508ee: lea ecx, dword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000450606: lea ecx, dword ptr [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000044c9e2: lea ecx, dword ptr [rsp + 0x20]; call rbx; 
0x00000000004823a6: lea ecx, dword ptr [rsp + 0x28]; call rbx; 
0x000000000044cc1d: lea ecx, dword ptr [rsp + 0x30]; call rbx; 
0x000000000045ee48: lea edi, dword ptr [rax + rbp]; nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r14; call rbx; 
0x0000000000450f21: lea edi, dword ptr [rcx + rsi + 0x20]; jmp rdx; 
0x000000000044aed3: lea edi, dword ptr [rdi + rcx - 1]; lea rsi, qword ptr [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000045d8c0: lea edi, dword ptr [rdi + rdi*8 - 1]; dec dword ptr [rcx + 1]; ret 0x8d48; 
0x0000000000497a2f: lea edi, dword ptr [rip + 0x22a47]; movzx ecx, cl; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000000450e7f: lea edi, dword ptr [rip + 0x514eb]; mov eax, 0x15; syscall; 
0x000000000047505b: lea edi, dword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474fd5: lea edi, dword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474479: lea edi, dword ptr [rip + 0x53961]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000470c90: lea edi, dword ptr [rip + 0x5c29a]; syscall; 
0x0000000000470a04: lea edi, dword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec70: lea edi, dword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f828: lea edi, dword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f763: lea edi, dword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5c6: lea edi, dword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4f7: lea edi, dword ptr [rip + 0x6da23]; syscall; 
0x0000000000454750: lea edi, dword ptr [rip + 0x7915a]; syscall; 
0x000000000045463c: lea edi, dword ptr [rip + 0x7926e]; syscall; 
0x000000000045451c: lea edi, dword ptr [rip + 0x7938e]; syscall; 
0x000000000044d364: lea edi, dword ptr [rip + 0x80546]; syscall; 
0x00000000004085e2: lea edi, dword ptr [rip + 0x962e5]; call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000425e24: lea edi, dword ptr [rip + 0xa4976]; syscall; 
0x000000000042415c: lea edi, dword ptr [rip + 0xa663e]; syscall; 
0x0000000000424124: lea edi, dword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c4c: lea edi, dword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c4c: lea edi, dword ptr [rip + 0xa6b4e]; syscall; pop rbp; ret; 
0x0000000000423c14: lea edi, dword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ad4: lea edi, dword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423630: lea edi, dword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c80: lea edi, dword ptr [rip + 0xa802a]; syscall; 
0x0000000000424318: lea edi, dword ptr [rip + 0xa8982]; syscall; 
0x0000000000424318: lea edi, dword ptr [rip + 0xa8982]; syscall; pop rbx; ret; 
0x0000000000420d7c: lea edi, dword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420d06: lea edi, dword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ac4: lea edi, dword ptr [rip + 0xac1e6]; syscall; 
0x00000000004205a0: lea edi, dword ptr [rip + 0xac70a]; syscall; 
0x000000000041f056: lea edi, dword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f056: lea edi, dword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb56: lea edi, dword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7f2: lea edi, dword ptr [rip + 0xae438]; syscall; 
0x000000000041e4a8: lea edi, dword ptr [rip + 0xae782]; syscall; 
0x000000000041d3e2: lea edi, dword ptr [rip + 0xaf848]; syscall; 
0x000000000041d142: lea edi, dword ptr [rip + 0xafae8]; syscall; 
0x000000000041cdee: lea edi, dword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cdee: lea edi, dword ptr [rip + 0xafe3c]; syscall; ret; 
0x000000000041471b: lea edi, dword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414af6: lea edi, dword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a5d: lea edi, dword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000417894: lea edi, dword ptr [rip + 0xb6016]; syscall; 
0x00000000004086f3: lea edi, dword ptr [rip + 0xc5057]; syscall; 
0x00000000004084bc: lea edi, dword ptr [rip + 0xc528e]; syscall; 
0x0000000000408481: lea edi, dword ptr [rip + 0xc52c9]; syscall; 
0x000000000040839d: lea edi, dword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065e1: lea edi, dword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404dee: lea edi, dword ptr [rip + 0xc798c]; syscall; 
0x0000000000403e05: lea edi, dword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403ddc: lea edi, dword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403cb1: lea edi, dword ptr [rip + 0xc8a21]; syscall; 
0x000000000040121d: lea edi, dword ptr [rip + 0xcb5ad]; syscall; 
0x000000000041da8a: lea edi, dword ptr [rsp + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000041fa13: lea edx, dword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x0000000000478c95: lea edx, dword ptr [rax + rdx*4]; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000478c64: lea edx, dword ptr [rax + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000040f789: lea edx, dword ptr [rax - 0x77000005]; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000040cee8: lea edx, dword ptr [rax - 0x77000005]; add cl, byte ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000040f617: lea edx, dword ptr [rax - 0x7c000005]; ret 0x4830; 
0x0000000000417051: lea edx, dword ptr [rbx + 0x34]; mov esi, 1; mov rdi, rbx; call rax; 
0x0000000000426d09: lea edx, dword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x00000000004900cc: lea edx, dword ptr [rip + 0x11e]; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000426f5d: lea edx, dword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000427093: lea edx, dword ptr [rip + 0x1c9a7]; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263b3: lea edx, dword ptr [rip + 0x1dc37]; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263f3: lea edx, dword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x000000000042617a: lea edx, dword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x0000000000426f0a: lea edx, dword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x0000000000498e4c: lea edx, dword ptr [rip + 0x21a82]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x0000000000426c6b: lea edx, dword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x00000000004260ba: lea edx, dword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x0000000000481c17: lea edx, dword ptr [rip + 0x23003]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000481bf2: lea edx, dword ptr [rip + 0x23028]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000427018: lea edx, dword ptr [rip + 0x23e22]; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426ea8: lea edx, dword ptr [rip + 0x23f82]; lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d48: lea edx, dword ptr [rip + 0x240f2]; lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426faa: lea edx, dword ptr [rip + 0x24260]; lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e3a: lea edx, dword ptr [rip + 0x243c0]; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426cda: lea edx, dword ptr [rip + 0x24530]; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426ffc: lea edx, dword ptr [rip + 0x2464e]; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e8c: lea edx, dword ptr [rip + 0x247ae]; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x000000000042619c: lea edx, dword ptr [rip + 0x248be]; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426d2c: lea edx, dword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000480232: lea edx, dword ptr [rip + 0x249e8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000426dc3: lea edx, dword ptr [rip + 0x24e57]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426da4: lea edx, dword ptr [rip + 0x24f86]; lea rax, qword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x0000000000426dec: lea edx, dword ptr [rip + 0x250be]; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x000000000042611a: lea edx, dword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x000000000047e287: lea edx, dword ptr [rip + 0x26993]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047e262: lea edx, dword ptr [rip + 0x269b8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bd17: lea edx, dword ptr [rip + 0x28f03]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bcf2: lea edx, dword ptr [rip + 0x28f28]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000478efd: lea edx, dword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x000000000048fdaa: lea edx, dword ptr [rip + 0x3bcf0]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000402343: lea edx, dword ptr [rip + 0x509f7]; call 0x50ed0; lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000000426464: lea edx, dword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x00000000004821b3: lea edx, dword ptr [rip + 0x597]; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x00000000004433b7: lea edx, dword ptr [rip + 0x61863]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044339d: lea edx, dword ptr [rip + 0x6187d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d37: lea edx, dword ptr [rip + 0x62ee3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d1d: lea edx, dword ptr [rip + 0x62efd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000440187: lea edx, dword ptr [rip + 0x64a93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044016d: lea edx, dword ptr [rip + 0x64aad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e027: lea edx, dword ptr [rip + 0x66bf3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e00d: lea edx, dword ptr [rip + 0x66c0d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000427053: lea edx, dword ptr [rip + 0x7ae7]; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c13: lea edx, dword ptr [rip + 0x7c57]; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x000000000044ce7a: lea edx, dword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000478e23: lea edx, dword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000482173: lea edx, dword ptr [rip + 0xb47]; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x0000000000426fd9: lea edx, dword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e69: lea edx, dword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000426bdc: lea edx, dword ptr [rip - 0x2f2]; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x000000000048b02a: lea esi, dword ptr [rbp - 0x430]; mov eax, 0x14; syscall; 
0x0000000000494da6: lea esi, dword ptr [rbx + rax*8 + 8]; nop word ptr [rax + rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000402b8e: lea esi, dword ptr [rcx + rbx]; mov qword ptr [rsi + 8], rax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000492398: lea esi, dword ptr [rdi + rdi*8 - 1]; dec dword ptr [rcx - 0x77]; ret; 
0x0000000000493288: lea esi, dword ptr [rip + 0x3a5f2]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000000474f77: lea esi, dword ptr [rip + 0x52e63]; mov rax, qword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x0000000000474052: lea esi, dword ptr [rip + 0x53d88]; mov rax, qword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x000000000044aed8: lea esi, dword ptr [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000040234f: lea esi, dword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000000044d0de: lea esp, dword ptr [rbp - 0x18]; pop rbx; pop r12; pop r13; pop rbp; ret; 
0x0000000000408421: lea esp, dword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000045ee14: lea esp, dword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x0000000000408420: lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000045ee13: lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x0000000000494da5: lea r14, qword ptr [rbx + rax*8 + 8]; nop word ptr [rax + rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000041da89: lea r15, qword ptr [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000045ee47: lea r15, qword ptr [rax + r13]; nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r14; call rbx; 
0x000000000044c9e1: lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x00000000004823a5: lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000044cc1c: lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x000000000048c434: lea rax, qword ptr [r8 + 1]; mov qword ptr [rip + 0x40ed1], rax; ret; 
0x000000000042e5f3: lea rax, qword ptr [rax + rdi + 0x10]; ret; 
0x000000000042e603: lea rax, qword ptr [rax + rdi + 0x20]; ret; 
0x000000000042e5d3: lea rax, qword ptr [rax + rdi - 0x10]; ret; 
0x0000000000488802: lea rax, qword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887d0: lea rax, qword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000042580c: lea rax, qword ptr [rax - 0x10]; ret; 
0x0000000000481e2c: lea rax, qword ptr [rcx + rsi]; ret; 
0x000000000044a823: lea rax, qword ptr [rcx - 1]; ret; 
0x00000000004484eb: lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000448500: lea rax, qword ptr [rdi + 0x11]; ret; 
0x000000000044851e: lea rax, qword ptr [rdi + 0x12]; ret; 
0x000000000044853e: lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000448561: lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000448580: lea rax, qword ptr [rdi + 0x15]; ret; 
0x00000000004485a0: lea rax, qword ptr [rdi + 0x16]; ret; 
0x00000000004485c0: lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485e3: lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000448608: lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000448626: lea rax, qword ptr [rdi + 0x1a]; ret; 
0x0000000000448646: lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000448662: lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000448682: lea rax, qword ptr [rdi + 0x1d]; ret; 
0x00000000004486a2: lea rax, qword ptr [rdi + 0x1e]; ret; 
0x00000000004486c2: lea rax, qword ptr [rdi + 0x1f]; ret; 
0x000000000044843c: lea rax, qword ptr [rdi + 0xa]; ret; 
0x000000000044845c: lea rax, qword ptr [rdi + 0xb]; ret; 
0x000000000044847e: lea rax, qword ptr [rdi + 0xc]; ret; 
0x000000000044849e: lea rax, qword ptr [rdi + 0xd]; ret; 
0x00000000004484be: lea rax, qword ptr [rdi + 0xe]; ret; 
0x00000000004484d8: lea rax, qword ptr [rdi + 0xf]; ret; 
0x0000000000448386: lea rax, qword ptr [rdi + 1]; ret; 
0x00000000004489c6: lea rax, qword ptr [rdi + 1]; vzeroupper; ret; 
0x0000000000448399: lea rax, qword ptr [rdi + 2]; ret; 
0x00000000004489da: lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004483a4: lea rax, qword ptr [rdi + 3]; ret; 
0x00000000004489f4: lea rax, qword ptr [rdi + 3]; vzeroupper; ret; 
0x00000000004483b7: lea rax, qword ptr [rdi + 4]; ret; 
0x00000000004483cc: lea rax, qword ptr [rdi + 5]; ret; 
0x00000000004483ea: lea rax, qword ptr [rdi + 6]; ret; 
0x00000000004483f6: lea rax, qword ptr [rdi + 7]; ret; 
0x0000000000448409: lea rax, qword ptr [rdi + 8]; ret; 
0x000000000044841e: lea rax, qword ptr [rdi + 9]; ret; 
0x000000000042e628: lea rax, qword ptr [rdi + rax + 0x10]; ret; 
0x00000000004439c6: lea rax, qword ptr [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000042e638: lea rax, qword ptr [rdi + rax + 0x20]; ret; 
0x000000000042e532: lea rax, qword ptr [rdi + rax + 0x30]; ret; 
0x00000000004439e6: lea rax, qword ptr [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000443a24: lea rax, qword ptr [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000482074: lea rax, qword ptr [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000044341f: lea rax, qword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044388c: lea rax, qword ptr [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044364a: lea rax, qword ptr [rdi + rax]; ret; 
0x0000000000448a0c: lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x0000000000481d28: lea rax, qword ptr [rdi + rsi]; ret; 
0x0000000000448372: lea rax, qword ptr [rdi]; ret; 
0x0000000000448944: lea rax, qword ptr [rdi]; vzeroupper; ret; 
0x000000000044794c: lea rax, qword ptr [rdx + 0xa]; ret; 
0x000000000044796c: lea rax, qword ptr [rdx + 0xb]; ret; 
0x000000000044798e: lea rax, qword ptr [rdx + 0xc]; ret; 
0x00000000004479ae: lea rax, qword ptr [rdx + 0xd]; ret; 
0x00000000004479ce: lea rax, qword ptr [rdx + 0xe]; ret; 
0x000000000044785e: lea rax, qword ptr [rdx + 0xf]; ret; 
0x0000000000447886: lea rax, qword ptr [rdx + 1]; ret; 
0x000000000044789c: lea rax, qword ptr [rdx + 2]; ret; 
0x00000000004478b4: lea rax, qword ptr [rdx + 3]; ret; 
0x00000000004478ca: lea rax, qword ptr [rdx + 4]; ret; 
0x00000000004478dc: lea rax, qword ptr [rdx + 5]; ret; 
0x00000000004478fa: lea rax, qword ptr [rdx + 6]; ret; 
0x0000000000447806: lea rax, qword ptr [rdx + 7]; ret; 
0x000000000044790c: lea rax, qword ptr [rdx + 8]; ret; 
0x000000000044792c: lea rax, qword ptr [rdx + 9]; ret; 
0x0000000000447874: lea rax, qword ptr [rdx]; ret; 
0x0000000000426f55: lea rax, qword ptr [rip + 0x14eb4]; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000427099: lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004260b2: lea rax, qword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x00000000004263b9: lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263f9: lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x0000000000426f02: lea rax, qword ptr [rip + 0x1da27]; lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x0000000000426172: lea rax, qword ptr [rip + 0x1e6c7]; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x0000000000496c98: lea rax, qword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000426be2: lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x000000000042701e: lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426eae: lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d4e: lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fb0: lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e40: lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426ce0: lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000427002: lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e92: lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x00000000004261a2: lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426d32: lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426dc9: lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426daa: lea rax, qword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x0000000000426df2: lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x00000000004821b9: lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x0000000000420ece: lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420ec0: lea rax, qword ptr [rip + 0x3029]; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000042645c: lea rax, qword ptr [rip + 0x39fd]; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x000000000048f900: lea rax, qword ptr [rip + 0x3d6d9]; mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x000000000048f8e9: lea rax, qword ptr [rip + 0x3d6f0]; mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x00000000004900d2: lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000427059: lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c19: lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000452014: lea rax, qword ptr [rip + 0x79205]; ret; 
0x0000000000478ef5: lea rax, qword ptr [rip + 0x7f4]; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000426c63: lea rax, qword ptr [rip + 0x8026]; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x0000000000482179: lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x0000000000478e29: lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000426fd1: lea rax, qword ptr [rip + 0x9b08]; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e61: lea rax, qword ptr [rip + 0x9c58]; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000420dc8: lea rax, qword ptr [rip + 0xa99d1]; add rsp, 0x10; pop rbp; ret; 
0x000000000044ce72: lea rax, qword ptr [rip + 0xb17]; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000426d01: lea rax, qword ptr [rip + 0xc7b8]; lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x0000000000426112: lea rax, qword ptr [rip + 0xf97]; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x00000000004243fa: lea rax, qword ptr [rip - 0x511]; mov qword ptr [rip + 0xa6380], rax; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x0000000000424408: lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x0000000000491af4: lea rbx, qword ptr [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x00000000004823a1: lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000044ca4d: lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000041704c: lea rcx, qword ptr [rbx + 0x40]; lea rdx, qword ptr [rbx + 0x34]; mov esi, 1; mov rdi, rbx; call rax; 
0x000000000042cf8f: lea rcx, qword ptr [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000498649: lea rcx, qword ptr [rip + 0x21e94]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x0000000000481bbd: lea rcx, qword ptr [rip + 0x2305c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004804dc: lea rcx, qword ptr [rip + 0x2473d]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004801fd: lea rcx, qword ptr [rip + 0x24a1c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000047e56c: lea rcx, qword ptr [rip + 0x266ad]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000048ed17: lea rcx, qword ptr [rip + 0x3cd62]; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000443368: lea rcx, qword ptr [rip + 0x618b1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000441f53: lea rcx, qword ptr [rip + 0x62cc6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000441ce8: lea rcx, qword ptr [rip + 0x62f31]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000440413: lea rcx, qword ptr [rip + 0x64806]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000041a805: lea rcx, qword ptr [rip + 0xb14d4]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000414671: lea rcx, qword ptr [rip + 0xb2cc8]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d2a: lea rcx, qword ptr [rip + 0xb360f]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x00000000004508ed: lea rcx, qword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000450605: lea rcx, qword ptr [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000450f20: lea rdi, qword ptr [rcx + rsi + 0x20]; jmp rdx; 
0x000000000044aed2: lea rdi, qword ptr [rdi + rcx - 1]; lea rsi, qword ptr [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000497a2e: lea rdi, qword ptr [rip + 0x22a47]; movzx ecx, cl; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000000450e7e: lea rdi, qword ptr [rip + 0x514eb]; mov eax, 0x15; syscall; 
0x000000000047505a: lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474fd4: lea rdi, qword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474478: lea rdi, qword ptr [rip + 0x53961]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000470c8f: lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x0000000000470a03: lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec6f: lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f827: lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f762: lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5c5: lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4f6: lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x000000000045474f: lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x000000000045463b: lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x000000000045451b: lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d363: lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x00000000004085e1: lea rdi, qword ptr [rip + 0x962e5]; call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000425e23: lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x000000000042415b: lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424123: lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c4b: lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c4b: lea rdi, qword ptr [rip + 0xa6b4e]; syscall; pop rbp; ret; 
0x0000000000423c13: lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ad3: lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x000000000042362f: lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c7f: lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424317: lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000424317: lea rdi, qword ptr [rip + 0xa8982]; syscall; pop rbx; ret; 
0x0000000000420d7b: lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420d05: lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ac3: lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x000000000042059f: lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f055: lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f055: lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb55: lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7f1: lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e4a7: lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3e1: lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d141: lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cded: lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cded: lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x000000000041471a: lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414af5: lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a5c: lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000417893: lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086f2: lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084bb: lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408480: lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040839c: lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065e0: lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404ded: lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403e04: lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403ddb: lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403cb0: lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040121c: lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000478c94: lea rdx, qword ptr [r8 + rdx*4]; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000478c63: lea rdx, qword ptr [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000041fa12: lea rdx, qword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x0000000000417050: lea rdx, qword ptr [rbx + 0x34]; mov esi, 1; mov rdi, rbx; call rax; 
0x0000000000426d08: lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x00000000004900cb: lea rdx, qword ptr [rip + 0x11e]; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000426f5c: lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000427092: lea rdx, qword ptr [rip + 0x1c9a7]; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263b2: lea rdx, qword ptr [rip + 0x1dc37]; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263f2: lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x0000000000426179: lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x0000000000426f09: lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x0000000000498e4b: lea rdx, qword ptr [rip + 0x21a82]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x0000000000426c6a: lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x00000000004260b9: lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x0000000000481c16: lea rdx, qword ptr [rip + 0x23003]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000481bf1: lea rdx, qword ptr [rip + 0x23028]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000427017: lea rdx, qword ptr [rip + 0x23e22]; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426ea7: lea rdx, qword ptr [rip + 0x23f82]; lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d47: lea rdx, qword ptr [rip + 0x240f2]; lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fa9: lea rdx, qword ptr [rip + 0x24260]; lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e39: lea rdx, qword ptr [rip + 0x243c0]; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426cd9: lea rdx, qword ptr [rip + 0x24530]; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426ffb: lea rdx, qword ptr [rip + 0x2464e]; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e8b: lea rdx, qword ptr [rip + 0x247ae]; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x000000000042619b: lea rdx, qword ptr [rip + 0x248be]; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426d2b: lea rdx, qword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000480231: lea rdx, qword ptr [rip + 0x249e8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000426dc2: lea rdx, qword ptr [rip + 0x24e57]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426da3: lea rdx, qword ptr [rip + 0x24f86]; lea rax, qword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x0000000000426deb: lea rdx, qword ptr [rip + 0x250be]; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x0000000000426119: lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x000000000047e286: lea rdx, qword ptr [rip + 0x26993]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047e261: lea rdx, qword ptr [rip + 0x269b8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bd16: lea rdx, qword ptr [rip + 0x28f03]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bcf1: lea rdx, qword ptr [rip + 0x28f28]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000478efc: lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x000000000048fda9: lea rdx, qword ptr [rip + 0x3bcf0]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000402342: lea rdx, qword ptr [rip + 0x509f7]; call 0x50ed0; lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000000426463: lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x00000000004821b2: lea rdx, qword ptr [rip + 0x597]; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x00000000004433b6: lea rdx, qword ptr [rip + 0x61863]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044339c: lea rdx, qword ptr [rip + 0x6187d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d36: lea rdx, qword ptr [rip + 0x62ee3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d1c: lea rdx, qword ptr [rip + 0x62efd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000440186: lea rdx, qword ptr [rip + 0x64a93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044016c: lea rdx, qword ptr [rip + 0x64aad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e026: lea rdx, qword ptr [rip + 0x66bf3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e00c: lea rdx, qword ptr [rip + 0x66c0d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000427052: lea rdx, qword ptr [rip + 0x7ae7]; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c12: lea rdx, qword ptr [rip + 0x7c57]; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x000000000044ce79: lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000478e22: lea rdx, qword ptr [rip + 0x9107]; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000482172: lea rdx, qword ptr [rip + 0xb47]; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x0000000000426fd8: lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e68: lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x0000000000426bdb: lea rdx, qword ptr [rip - 0x2f2]; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x000000000048b029: lea rsi, qword ptr [rbp - 0x430]; mov eax, 0x14; syscall; 
0x0000000000402b8d: lea rsi, qword ptr [rcx + rbx]; mov qword ptr [rsi + 8], rax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000493287: lea rsi, qword ptr [rip + 0x3a5f2]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000000474f76: lea rsi, qword ptr [rip + 0x52e63]; mov rax, qword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x0000000000474051: lea rsi, qword ptr [rip + 0x53d88]; mov rax, qword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x000000000044aed7: lea rsi, qword ptr [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000040234e: lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000000044d0dd: lea rsp, qword ptr [rbp - 0x18]; pop rbx; pop r12; pop r13; pop rbp; ret; 
0x0000000000427096: leave; add dword ptr [rax], eax; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x000000000044ab04: leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000000482ee6: leave; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000049a5b2: leave; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x00000000004250a3: leave; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000413d36: leave; jmp rax; 
0x000000000042f20f: leave; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x0000000000497a37: leave; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x000000000041f853: leave; movsxd rdx, edx; call 0x1f780; or dword ptr [rbx], 8; pop rbx; ret; 
0x00000000004286ac: leave; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000406be2: leave; pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x0000000000408483: leave; push rdx; or al, 0; syscall; 
0x0000000000401d63: leave; ret; 
0x000000000049758c: leave; setne al; ret; 
0x000000000045357f: leave; xor edx, edx; movzx eax, al; add eax, 1; push rax; call rbx; 
0x000000000046d70c: ljmp ptr [rcx]; ret; 
0x000000000041ba7c: lock add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000042f850: lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000426fdc: lock add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000048c36b: lock inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x0000000000449f80: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add dh, dh; ret 0x7501; 
0x000000000042d144: lodsb al, byte ptr [rsi]; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000047e56f: lodsd eax, dword ptr [rsi]; add al, byte ptr [rax]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000458217: lodsd eax, dword ptr [rsi]; cli; jmp qword ptr [rsi + 0xf]; 
0x000000000047f590: lodsd eax, dword ptr [rsi]; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041f95a: lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f9aa: lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f97a: lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f93a: lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000041f934: lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; mov dword ptr [rip + 0xaadf3], 1; ret; 
0x000000000041f964: lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; ret; 
0x000000000040839f: lodsd eax, dword ptr [rsi]; push rbx; or al, 0; syscall; 
0x0000000000467bc2: lodsd eax, dword ptr [rsi]; ret; 
0x000000000041764e: lodsd eax, dword ptr [rsi]; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000041f9b4: lodsq rax, qword ptr [rsi]; or al, byte ptr [rax]; ret; 
0x0000000000426e6b: loope 0x26e5e; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000433127: loope 0x33175; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043316f: loope 0x331bd; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004331ad: loope 0x331fb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004331e5: loope 0x33233; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433223: loope 0x33271; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043325b: loope 0x332a9; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433283: loope 0x332d1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435b07: loope 0x35b55; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435b4f: loope 0x35b9d; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435b8d: loope 0x35bdb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435bc5: loope 0x35c13; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435c03: loope 0x35c51; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435c3b: loope 0x35c89; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435c63: loope 0x35cb1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437d0a: loope 0x37cff; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000043a83a: loope 0x3a82f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000443dbc: loope 0x43dde; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000443fd8: loope 0x43ffa; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000447d36: loope 0x47d9e; nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; ret; 
0x0000000000448366: loope 0x483ce; nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; lea rax, qword ptr [rdi]; ret; 
0x0000000000448a73: loope 0x48abd; lea eax, dword ptr [rdi + rdx]; vzeroupper; ret; 
0x0000000000448cab: loope 0x48cad; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xf]; ret; 
0x000000000044c139: loope 0x4c13b; cld; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000044d507: loope 0x4d555; mov edx, ebp; call rbx; 
0x0000000000452e83: loope 0x52e88; pop r12; shl eax, cl; ret; 
0x0000000000467a4b: loope 0x67a99; mov dword ptr [rdi], ecx; ret; 
0x0000000000467a7c: loope 0x67aca; mov dword ptr [rdi - 8], ecx; ret; 
0x0000000000467afd: loope 0x67b4b; mov dword ptr [rdi - 0x10], ecx; ret; 
0x00000000004735bf: loope 0x735c0; jmp qword ptr [rsi + 0xf]; 
0x00000000004735e4: loope 0x735e5; jmp qword ptr [rsi + 0xf]; 
0x000000000049c90e: loope 0x9c96b; ret; 
0x0000000000495f6d: lsl eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x894d; 
0x0000000000497971: mov ah, 0x24; pop rax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rcx]; 
0x0000000000426f58: mov ah, 0x4e; add dword ptr [rax], eax; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000470bbf: mov ah, 0x5b; mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x0000000000405725: mov ah, 0x89; ret; 
0x0000000000424e12: mov ah, 7; add al, ch; mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000049caf2: mov ah, byte ptr [rdi]; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000499f63: mov al, 0; add byte ptr [rax], al; ret; 
0x000000000044f84d: mov al, 0x45; mov edi, esi; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000443a0f: mov al, 0xc5; std; xlatb; ret; 
0x0000000000492e68: mov al, 0xe8; ret 0xf6e1; 
0x0000000000476022: mov al, 0xf8; dec dword ptr [rax - 0x77]; ret 0x9ce9; 
0x000000000048a815: mov al, 0xf; xchg eax, ebp; ret 0x2148; 
0x0000000000424e17: mov al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000425ecb: mov al, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000048ea99: mov al, byte ptr [rax]; add byte ptr [rax], al; add rsp, 0x48; ret; 
0x0000000000413e3d: mov al, byte ptr [rbx]; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000447896: mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, qword ptr [rdx + 2]; ret; 
0x00000000004460e6: mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x00000000004478c4: mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, qword ptr [rdx + 4]; ret; 
0x0000000000446104: mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000447870: mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, qword ptr [rdx]; ret; 
0x00000000004460c0: mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x000000000042f210: mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x00000000004478d4: mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446114: mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000447880: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, qword ptr [rdx + 1]; ret; 
0x0000000000447890: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, qword ptr [rdx + 2]; ret; 
0x00000000004460e0: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x00000000004460d0: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x00000000004489c1: mov bh, 0x16; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; vzeroupper; ret; 
0x0000000000438ad1: mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x00000000004447a1: mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000044af86: mov bh, 0x36; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x0000000000448b48: mov bh, 0x48; lea eax, dword ptr [rdi + 7]; ret; 
0x0000000000413221: mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x000000000045514b: mov bh, 0xd; ret; 
0x00000000004489d1: mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004447b1: mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000424721: mov bh, 0xff; jmp qword ptr [rsi + 0x66]; 
0x000000000048fc0f: mov bh, 0xff; nop dword ptr [rax]; pop rbp; ret; 
0x000000000046b407: mov bh, 2; add cl, ch; nop; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000423c5a: mov bh, 7; add al, ch; pop rsi; ret 0xffff; 
0x000000000044a43e: mov bl, 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000041f979: mov bl, 0xad; or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad80], rax; ret; 
0x0000000000476021: mov bl, 0xb0; clc; dec dword ptr [rax - 0x77]; ret 0x9ce9; 
0x000000000041698c: mov bl, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x0000000000476b9b: mov bl, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; shl dword ptr [rax - 0x45], 0x4c; add byte ptr [rax - 0x39], cl; ret 0xc208; 
0x00000000004554e2: mov bl, 0xff; jmp qword ptr [rsi + 0x66]; 
0x00000000004898db: mov byte ptr [r9 - 0x77], r9b; ret 0x8949; 
0x00000000004893a6: mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000044a057: mov byte ptr [rax + 0x75], 0xc5; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000403ddf: mov byte ptr [rax + rax], cl; syscall; 
0x000000000041fb04: mov byte ptr [rax + rsi], dl; ret; 
0x000000000041fb03: mov byte ptr [rax + rsi], r10b; ret; 
0x0000000000455637: mov byte ptr [rax - 0x7c], 0xf6; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000471ac3: mov byte ptr [rax - 0x9ffffe9], al; ret 0xf40; 
0x0000000000406bb4: mov byte ptr [rax], 0; mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x0000000000426c55: mov byte ptr [rax], al; add bh, dh; ret 0; 
0x000000000045ead5: mov byte ptr [rax], al; add byte ptr [rax], al; mov r10d, 8; mov eax, 0xd; syscall; 
0x0000000000401f77: mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040918f: mov byte ptr [rax], bpl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000409190: mov byte ptr [rax], ch; pop rbx; pop rbp; pop r12; ret; 
0x00000000004831f9: mov byte ptr [rbp + 0x31], 0xd2; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000466a4f: mov byte ptr [rbp + 1], al; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000413ae1: mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000472190: mov byte ptr [rbp - 0x958], cl; call rax; 
0x000000000047218f: mov byte ptr [rbp - 0x958], r9b; call rax; 
0x00000000004898dc: mov byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x00000000004893a7: mov byte ptr [rcx - 0x77], cl; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000481c86: mov byte ptr [rcx], 0; add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000000493491: mov byte ptr [rcx], 0xf6; syscall; 
0x00000000004484e8: mov byte ptr [rdi + 0x10], dh; lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000447e48: mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044855e: mov byte ptr [rdi + 0x14], dh; lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000447e9e: mov byte ptr [rdi + 0x14], dh; ret; 
0x00000000004485e0: mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f20: mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000450942: mov byte ptr [rdi + 0x28], 1; ret; 
0x00000000004489d6: mov byte ptr [rdi + 2], 0; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004447b6: mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000448396: mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000447d66: mov byte ptr [rdi + 2], dh; ret; 
0x00000000004483b2: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000447d82: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000448403: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000447dc3: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x00000000004326bb: mov byte ptr [rdi - 1], dl; ret; 
0x0000000000448941: mov byte ptr [rdi], 0; lea rax, qword ptr [rdi]; vzeroupper; ret; 
0x000000000045d5f7: mov byte ptr [rdi], 0; ret; 
0x0000000000444721: mov byte ptr [rdi], 0; vzeroupper; ret; 
0x000000000043b826: mov byte ptr [rdi], cl; ret; 
0x000000000044be59: mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000448370: mov byte ptr [rdi], dh; lea rax, qword ptr [rdi]; ret; 
0x0000000000447d40: mov byte ptr [rdi], dh; ret; 
0x0000000000438b43: mov byte ptr [rdi], dl; ret; 
0x0000000000447899: mov byte ptr [rdx + 2], al; lea rax, qword ptr [rdx + 2]; ret; 
0x00000000004460e9: mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x00000000004478c7: mov byte ptr [rdx + 4], al; lea rax, qword ptr [rdx + 4]; ret; 
0x0000000000446107: mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000449f7b: mov byte ptr [rdx + rdx*8 + 0xac840f], 0; add dh, dh; ret 0x7501; 
0x0000000000447872: mov byte ptr [rdx], al; lea rax, qword ptr [rdx]; ret; 
0x00000000004460c2: mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x00000000004243ba: mov byte ptr [rdx], cl; add bh, al; add eax, 0xa88d9; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000421f5d: mov byte ptr [rdx], cl; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004982c0: mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982b9: mov byte ptr [rip + 0x34e4f], 8; mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982b2: mov byte ptr [rip + 0x34e55], 8; mov byte ptr [rip + 0x34e4f], 8; mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982ab: mov byte ptr [rip + 0x34e5b], 8; mov byte ptr [rip + 0x34e55], 8; mov byte ptr [rip + 0x34e4f], 8; mov byte ptr [rip + 0x34e49], 8; ret; 
0x00000000004982a4: mov byte ptr [rip + 0x34e61], 8; mov byte ptr [rip + 0x34e5b], 8; mov byte ptr [rip + 0x34e55], 8; mov byte ptr [rip + 0x34e4f], 8; mov byte ptr [rip + 0x34e49], 8; ret; 
0x0000000000474054: mov byte ptr [rip - 0x74b7fffb], bh; add al, 0xc6; xor esi, esi; jmp rax; 
0x0000000000411e62: mov ch, 0x10; idiv edi; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x00000000004198a9: mov ch, 0x48; add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000469f87: mov ch, 0x70; stc; inc dword ptr [rbp + 1]; dec dword ptr [rax - 0x7d]; ret; 
0x000000000041ef67: mov ch, 0xb1; or al, byte ptr [rax]; ret; 
0x00000000004727a4: mov ch, 0xf8; idiv bh; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x000000000042491f: mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000004303c6: mov ch, 6; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000049a776: mov ch, byte ptr [rcx - 0xa]; jmp qword ptr [rsi + 0xf]; 
0x0000000000420dc2: mov cl, 0x15; fcomp dword ptr [rcx - 0x72b7fff6]; add eax, 0xa99d1; add rsp, 0x10; pop rbp; ret; 
0x000000000044f134: mov cl, 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000405f0e: mov cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000401af4: mov cl, byte ptr [rax + 1]; sar byte ptr [rsi], 1; jmp rax; 
0x0000000000403cb4: mov cl, byte ptr [rax + rax]; syscall; 
0x000000000043e015: mov cl, byte ptr [rbx - 0x37d67dfc]; ret; 
0x000000000046ccdc: mov cl, byte ptr [rcx - 0x13f63]; inc dword ptr [rax - 0x7bf09a05]; or byte ptr fs:[rax], al; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x000000000042f214: mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x000000000043b824: mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000041e4de: mov cs, word ptr [rbp + 0x45fffffe]; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000004425be: mov cs, word ptr [rip - 0x7cb80000]; ret 0xe910; 
0x000000000043b812: mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x00000000004484f4: mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e54: mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004485f8: mov cx, word ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f38: mov cx, word ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000432b04: mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000438a64: mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000448390: mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000447d60: mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x000000000043b811: mov cx, word ptr ss:[rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000049a9b1: mov dh, 0; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041bd45: mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041bd1f: mov dh, 0; ret; 
0x0000000000499d67: mov dh, 0x14; sbb ch, al; sal dword ptr [rdx - 0xa], 1; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000438b41: mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000042ed65: mov dh, 0x16; sub eax, edx; ret; 
0x000000000041da86: mov dh, 0x34; and al, 0x4d; lea edi, dword ptr [rsp + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x0000000000456a28: mov dh, 0x40; dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x00000000004077e7: mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x000000000040b811: mov dh, 0x42; add ch, cl; ret 0xffde; 
0x000000000041c440: mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x3c01; 
0x0000000000406161: mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000040610b: mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000049d031: mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x0000000000429c01: mov dh, 0x44; cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000040bdae: mov dh, 0x45; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000044a011: mov dh, 0x47; cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000044a001: mov dh, 0x47; hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000449fd1: mov dh, 0x47; int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000449ff1: mov dh, 0x47; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000449fe1: mov dh, 0x47; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x00000000004116be: mov dh, 0x47; or al, 0x83; ret; 
0x0000000000458035: mov dh, 0x50; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000406131: mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000477121: mov dh, 0x53; or al, 0xf6; ret 0xf04; 
0x0000000000429c06: mov dh, 0x54; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000044a015: mov dh, 0x56; cmc; sub eax, edx; ret; 
0x000000000044a005: mov dh, 0x56; hlt; sub eax, edx; ret; 
0x0000000000449fd5: mov dh, 0x56; int1; sub eax, edx; ret; 
0x0000000000471abd: mov dh, 0x56; or al, 0x84; ror byte ptr [rdi], cl; mov byte ptr [rax - 0x9ffffe9], al; ret 0xf40; 
0x0000000000471a92: mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0000000000449fe5: mov dh, 0x56; sub eax, edx; ret; 
0x000000000045750c: mov dh, 0x70; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000408a01: mov dh, 0x73; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000486487: mov dh, 0x87; sbb eax, 0x89000003; ret 0xe8c0; 
0x0000000000457166: mov dh, 0xbd; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000453583: mov dh, 0xc0; add eax, 1; push rax; call rbx; 
0x0000000000483556: mov dh, 0xc0; add rsp, 0x58; ret; 
0x0000000000498550: mov dh, 0xc0; movsxd rax, dword ptr [r11 + rax*4]; add rax, r11; jmp rax; 
0x0000000000498651: mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x000000000041c1e1: mov dh, 0xc0; neg eax; ret; 
0x000000000048fc9e: mov dh, 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x000000000042ed85: mov dh, 0xc0; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000044c151: mov dh, 0xc1; pop rbx; ret; 
0x000000000044c101: mov dh, 0xc2; and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000044bc12: mov dh, 0xc6; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000455636: mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000497a36: mov dh, 0xc9; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x000000000048fb86: mov dh, 0xc; cld; jmp qword ptr [rsi + 0xf]; 
0x0000000000498e49: mov dh, 0xca; lea rdx, qword ptr [rip + 0x21a82]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x000000000044c191: mov dh, 0xd1; mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000000498c5a: mov dh, 0xd2; movsxd rdx, dword ptr [rbp + rdx*4]; add rdx, rbp; jmp rdx; 
0x000000000042ed8b: mov dh, 0xd2; sub eax, edx; ret; 
0x000000000044af5d: mov dh, 0xe; mov byte ptr [rdi], cl; ret; 
0x00000000004284f1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000042e201: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000000042f224: mov dh, 0xe; sub eax, ecx; ret; 
0x0000000000496c96: mov dh, 0xf8; lea rax, qword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000479649: mov dh, 0xfa; dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x7b], r9b; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x0000000000424aec: mov dh, 0xff; call qword ptr [rax + 0x18c48348]; ret; 
0x000000000049bdac: mov dh, 0xff; mov rax, qword ptr [rip + 0x3153b]; mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bcf8: mov dh, 0xff; mov rax, qword ptr [rip + 0x315ef]; mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x0000000000493122: mov dh, 0xff; nop dword ptr [rax]; add rsp, 8; ret; 
0x0000000000492c20: mov dh, 0xff; nop word ptr [rax + rax]; pop rbp; ret; 
0x000000000041466e: mov dh, 4; add dword ptr [rax - 0x73], ecx; or eax, 0xb2cc8; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d27: mov dh, 4; add dword ptr [rax - 0x73], ecx; or eax, 0xb360f; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000481c14: mov dh, 7; lea rdx, qword ptr [rip + 0x23003]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047e284: mov dh, 7; lea rdx, qword ptr [rip + 0x26993]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bd14: mov dh, 7; lea rdx, qword ptr [rip + 0x28f03]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004433b4: mov dh, 7; lea rdx, qword ptr [rip + 0x61863]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d34: mov dh, 7; lea rdx, qword ptr [rip + 0x62ee3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000440184: mov dh, 7; lea rdx, qword ptr [rip + 0x64a93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e024: mov dh, 7; lea rdx, qword ptr [rip + 0x66bf3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f221: mov dh, 7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000042ed62: mov dh, 7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x00000000004284f4: mov dh, 7; sub eax, ecx; ret; 
0x000000000042e204: mov dh, 7; sub eax, ecx; vzeroupper; ret; 
0x000000000045832c: mov dh, bh; add dword ptr [rax], eax; add bh, dh; ret 0xf800; 
0x0000000000468003: mov dh, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000041bfda: mov dl, 0x11; add byte ptr [rax], al; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x00000000004173e6: mov dl, 0x45; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000457c74: mov dl, 0xfa; jmp qword ptr [rsi + 0xf]; 
0x0000000000473b46: mov dl, 2; add al, ch; sal bl, cl; clc; jmp qword ptr [rsi - 0x70]; 
0x0000000000432740: mov dl, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000411d8a: mov ds, eax; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x00000000004189f1: mov ds, word ptr [rdx + 0x45fffffb]; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000041fdff: mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000041fe03: mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000041fdfa: mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000043b81a: mov dword ptr [r9 - 2], ecx; ret; 
0x000000000043b805: mov dword ptr [r9 - 4], ecx; ret; 
0x00000000004508f5: mov dword ptr [rax + 0x10], ecx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000478c5d: mov dword ptr [rax + 0x10], ecx; mov r8, rcx; lea rdx, qword ptr [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000478c99: mov dword ptr [rax + 0x10], edi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000477fbd: mov dword ptr [rax + 0x10], edx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000477ffa: mov dword ptr [rax + 0x10], esi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x00000000004785cc: mov dword ptr [rax + 0x18], edx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000420667: mov dword ptr [rax + 0x20], edx; add rsp, 8; ret; 
0x00000000004785c8: mov dword ptr [rax + 0x28], edx; mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000477ffe: mov dword ptr [rax + 0x40], ecx; mov qword ptr [rax], rdx; ret; 
0x0000000000477fc1: mov dword ptr [rax + 0x40], ecx; ret; 
0x0000000000478c9d: mov dword ptr [rax + 0x40], esi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000047864e: mov dword ptr [rax + 0x48], 0; pop rbx; ret; 
0x0000000000478646: mov dword ptr [rax + 0x50], 0; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000044cafb: mov dword ptr [rax + 5], edx; add al, ch; sbb al, 0x64; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000041df39: mov dword ptr [rax + 8], 0; ret; 
0x0000000000477fb2: mov dword ptr [rax + 8], ecx; mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000477ff6: mov dword ptr [rax + 8], edx; mov qword ptr [rax + 0x10], rsi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x00000000004508f9: mov dword ptr [rax + 8], edx; ret; 
0x0000000000444792: mov dword ptr [rax - 0x17], 0xffffff50; nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000041df32: mov dword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000048fe8d: mov dword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000044e318: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f210: mov dword ptr [rax], 0x16; mov rax, -1; ret; 
0x0000000000417c34: mov dword ptr [rax], 0x89480000; ret; 
0x0000000000483690: mov dword ptr [rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000422d03: mov dword ptr [rax], 0xc; mov rax, r8; ret; 
0x000000000042510f: mov dword ptr [rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000004830e0: mov dword ptr [rax], 2; xor eax, eax; ret; 
0x000000000048f76e: mov dword ptr [rax], eax; mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000048f78b: mov dword ptr [rax], eax; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000478755: mov dword ptr [rax], ecx; mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048ed1f: mov dword ptr [rax], ecx; pop rbp; ret; 
0x000000000048fe45: mov dword ptr [rax], edi; pop rbx; ret; 
0x000000000048fdb1: mov dword ptr [rax], edx; add rsp, 8; ret; 
0x0000000000477fba: mov dword ptr [rax], edx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000048fe39: mov dword ptr [rax], edx; pop rbx; ret; 
0x0000000000478002: mov dword ptr [rax], edx; ret; 
0x0000000000478c68: mov dword ptr [rax], edx; xor eax, eax; ret; 
0x0000000000473e04: mov dword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x00000000004749d3: mov dword ptr [rbp - 0x4e0], ecx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000474399: mov dword ptr [rbp - 0x4e0], ecx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x0000000000413ad7: mov dword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x00000000004743a9: mov dword ptr [rbp - 0x4e8], eax; call qword ptr [rbx + 0x38]; 
0x00000000004743a8: mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x000000000041418e: mov dword ptr [rbp - 0x4f0], ecx; mov rdx, r15; mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415028: mov dword ptr [rbp - 0x4f0], ecx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x000000000041449a: mov dword ptr [rbp - 0x4f0], ecx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x000000000041418d: mov dword ptr [rbp - 0x4f0], r9d; mov rdx, r15; mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415038: mov dword ptr [rbp - 0x4f8], ecx; call qword ptr [rax + 0x38]; 
0x0000000000415037: mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x0000000000473e0e: mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000474fc6: mov dword ptr [rbp - 0x500], 0x20; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x00000000004756cc: mov dword ptr [rbp - 0x500], ecx; call qword ptr [rax + 0x38]; 
0x00000000004144aa: mov dword ptr [rbp - 0x500], ecx; call qword ptr [rbx + 0x38]; 
0x0000000000413eb3: mov dword ptr [rbp - 0x500], ecx; mov rdx, rbx; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004144a9: mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x0000000000413eb2: mov dword ptr [rbp - 0x500], r9d; mov rdx, rbx; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004756c5: mov dword ptr [rbp - 0x508], eax; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x00000000004756c4: mov dword ptr [rbp - 0x508], r8d; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x000000000044f84b: mov dword ptr [rbp - 0x50], ecx; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000473def: mov dword ptr [rbp - 0x510], 0; mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x000000000047504c: mov dword ptr [rbp - 0x510], 1; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000041527d: mov dword ptr [rbp - 0x510], edx; call qword ptr [rax + 0x38]; 
0x000000000041526d: mov dword ptr [rbp - 0x518], ecx; mov rdx, r15; mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000041526c: mov dword ptr [rbp - 0x518], r9d; mov rdx, r15; mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x0000000000413ac2: mov dword ptr [rbp - 0x51c], 0; mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000473df9: mov dword ptr [rbp - 0x51c], 0; mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x0000000000413acc: mov dword ptr [rbp - 0x520], 0; mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000453e94: mov dword ptr [rbp - 0x70], esi; call 0x52080; mov rsi, qword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x0000000000411af3: mov dword ptr [rbp - 0x930], ebx; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000411af2: mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000411afa: mov dword ptr [rbp - 0x940], ecx; call rax; 
0x0000000000411af9: mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000489ef8: mov dword ptr [rbp - 0xd8], ebx; call rax; 
0x000000000046dcbe: mov dword ptr [rbp - 0xf0], ecx; mov rdi, qword ptr [rbp - 0xd0]; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000046dcbd: mov dword ptr [rbp - 0xf0], r9d; mov rdi, qword ptr [rbp - 0xd0]; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000041ebcf: mov dword ptr [rbp], eax; mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000478e8e: mov dword ptr [rbp], eax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000045ca47: mov dword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000041fe00: mov dword ptr [rbx + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000041a77b: mov dword ptr [rbx + 0x10], eax; mov rax, rbx; pop rbx; ret; 
0x000000000048ebf2: mov dword ptr [rbx + 0x10], eax; pop rax; pop rdx; pop rbx; ret; 
0x000000000041af73: mov dword ptr [rbx + 0x10], eax; xor eax, eax; pop rbx; ret; 
0x000000000041fe04: mov dword ptr [rbx + 0x14], 0; ret; 
0x000000000041a773: mov dword ptr [rbx + 0x18], eax; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000048e8a7: mov dword ptr [rbx + 0x18], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000493ad9: mov dword ptr [rbx + 0x18], eax; pop rbx; ret; 
0x00000000004770e1: mov dword ptr [rbx + 0x18], edi; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000493b9d: mov dword ptr [rbx + 0x20], eax; pop rbx; ret; 
0x000000000041d555: mov dword ptr [rbx + 0x20], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041fdfb: mov dword ptr [rbx + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000045e9ef: mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x000000000045e9cc: mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000041d96a: mov dword ptr [rbx + 0x40], esp; mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000041d5c5: mov dword ptr [rbx + 0x50], 0; pop rbx; ret; 
0x0000000000452d99: mov dword ptr [rbx + 0x58908c8], 0x7aa51; ret; 
0x0000000000452d68: mov dword ptr [rbx + 0x58910c8], 0x7aa82; pop rbx; ret; 
0x0000000000452dc9: mov dword ptr [rbx + 0x58918c8], 0x7aa21; ret; 
0x000000000041ebd3: mov dword ptr [rbx + 0x60], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041bfde: mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x000000000041a70f: mov dword ptr [rbx + 0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041bc77: mov dword ptr [rbx + 0x90], eax; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000041af68: mov dword ptr [rbx + 0x90], esi; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x0000000000499ad4: mov dword ptr [rbx + 0x98], ecx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e039: mov dword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000049a073: mov dword ptr [rbx + 8], eax; add rsp, 0x278; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000041a777: mov dword ptr [rbx + 8], eax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000041af6f: mov dword ptr [rbx + 8], eax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000048c3df: mov dword ptr [rbx + 8], eax; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000453747: mov dword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e032: mov dword ptr [rbx], 0; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000048cde8: mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x000000000048fbc9: mov dword ptr [rbx], 0; pop rbx; ret; 
0x00000000004906ce: mov dword ptr [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x000000000049010e: mov dword ptr [rbx], eax; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000426021: mov dword ptr [rbx], eax; mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x00000000004956dd: mov dword ptr [rbx], eax; pop rax; pop rdx; pop rbx; ret; 
0x000000000041de1e: mov dword ptr [rbx], eax; pop rbx; mov eax, 1; pop rbp; pop r12; ret; 
0x000000000041d96d: mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000049c22c: mov dword ptr [rbx], eax; pop rbx; ret; 
0x0000000000470ad6: mov dword ptr [rbx], ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004785d1: mov dword ptr [rbx], ecx; pop rbx; ret; 
0x000000000040918d: mov dword ptr [rbx], edx; mov byte ptr [rax], bpl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000425e84: mov dword ptr [rbx], edx; xor eax, eax; pop rbx; ret; 
0x0000000000420533: mov dword ptr [rbx], esp; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000041a683: mov dword ptr [rbx], esp; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000041a682: mov dword ptr [rbx], r12d; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000041e01f: mov dword ptr [rcx + 0x50], 0; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041e027: mov dword ptr [rcx + 0xe0], eax; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000046bddd: mov dword ptr [rcx + rdx*8], eax; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000043b81b: mov dword ptr [rcx - 2], ecx; ret; 
0x000000000043b806: mov dword ptr [rcx - 4], ecx; ret; 
0x000000000043b7f5: mov dword ptr [rcx - 8], ecx; ret; 
0x000000000044e25e: mov dword ptr [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000000499ec9: mov dword ptr [rcx], edx; add rsp, 8; ret; 
0x000000000045e8cc: mov dword ptr [rcx], edx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e7fc: mov dword ptr [rcx], edx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000041d4cf: mov dword ptr [rdi + 0x10], eax; mov qword ptr [rdi + 0x18], rcx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004484fd: mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x000000000044853b: mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x00000000004485bd: mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x000000000044855b: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000447e9b: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x00000000004485dd: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f1d: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447e5d: mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000448620: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; lea rax, qword ptr [rdi + 0x1a]; ret; 
0x0000000000447f60: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000448640: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000447f80: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000448601: mov dword ptr [rdi + 0x10], edx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f41: mov dword ptr [rdi + 0x10], edx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000448623: mov dword ptr [rdi + 0x17], ecx; lea rax, qword ptr [rdi + 0x1a]; ret; 
0x0000000000447f63: mov dword ptr [rdi + 0x17], ecx; ret; 
0x000000000041d4a7: mov dword ptr [rdi + 0x18], eax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000448605: mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000448643: mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x000000000041d4d3: mov dword ptr [rdi + 0x18], ecx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000447f45: mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000041ecd6: mov dword ptr [rdi + 0x18], edx; mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041ed1c: mov dword ptr [rdi + 0x18], esi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000045093f: mov dword ptr [rdi + 0x20], edx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000450951: mov dword ptr [rdi + 0x20], esi; ret; 
0x0000000000488806: mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887d4: mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000048880d: mov dword ptr [rdi + 0x308], eax; ret; 
0x00000000004887db: mov dword ptr [rdi + 0x310], eax; ret; 
0x000000000041d4a3: mov dword ptr [rdi + 0x48], edx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041d4d7: mov dword ptr [rdi + 0x48], edx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041d49b: mov dword ptr [rdi + 0x58], eax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041fe49: mov dword ptr [rdi + 0x60], ecx; ret; 
0x0000000000499f01: mov dword ptr [rdi + 0x98], esi; ret; 
0x000000000041df64: mov dword ptr [rdi + 0xa0], 0xffffffff; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041df6f: mov dword ptr [rdi + 0xa8], 0; ret; 
0x0000000000417bed: mov dword ptr [rdi + 0xd8], edx; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000044857d: mov dword ptr [rdi + 0xe], ecx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447ebd: mov dword ptr [rdi + 0xe], ecx; ret; 
0x000000000044851b: mov dword ptr [rdi + 0xf], ecx; lea rax, qword ptr [rdi + 0x12]; ret; 
0x000000000044859d: mov dword ptr [rdi + 0xf], ecx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447e7b: mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000438985: mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004387c8: mov dword ptr [rdi + 1], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438a68: mov dword ptr [rdi + 1], edx; mov word ptr [rdi], cx; ret; 
0x0000000000438915: mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000438758: mov dword ptr [rdi + 2], edx; mov qword ptr [rdi], rcx; ret; 
0x00000000004483e7: mov dword ptr [rdi + 3], edx; lea rax, qword ptr [rdi + 6]; ret; 
0x00000000004388a5: mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004386e8: mov dword ptr [rdi + 3], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447da7: mov dword ptr [rdi + 3], edx; ret; 
0x00000000004483c9: mov dword ptr [rdi + 4], edx; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000438678: mov dword ptr [rdi + 4], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447d99: mov dword ptr [rdi + 4], edx; ret; 
0x000000000044847b: mov dword ptr [rdi + 5], edx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000438608: mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447e0b: mov dword ptr [rdi + 5], edx; ret; 
0x000000000044849b: mov dword ptr [rdi + 6], edx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000438598: mov dword ptr [rdi + 6], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447e1b: mov dword ptr [rdi + 6], edx; ret; 
0x0000000000448439: mov dword ptr [rdi + 7], edx; lea rax, qword ptr [rdi + 0xa]; ret; 
0x00000000004484bb: mov dword ptr [rdi + 7], edx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000438528: mov dword ptr [rdi + 7], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447de9: mov dword ptr [rdi + 7], edx; ret; 
0x000000000041fe41: mov dword ptr [rdi + 8], 0; mov qword ptr [rdi + 0x60], rcx; ret; 
0x000000000048f88a: mov dword ptr [rdi + 8], eax; mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000048f816: mov dword ptr [rdi + 8], eax; mov eax, 2; ret; 
0x000000000041d4ab: mov dword ptr [rdi + 8], eax; ret; 
0x0000000000467c08: mov dword ptr [rdi + 8], eax; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000041ece0: mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x0000000000467b98: mov dword ptr [rdi + 8], ecx; ret; 
0x0000000000448459: mov dword ptr [rdi + 8], edx; lea rax, qword ptr [rdi + 0xb]; ret; 
0x000000000044841b: mov dword ptr [rdi + 8], edx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000468e40: mov dword ptr [rdi + 8], edx; mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000000467958: mov dword ptr [rdi + 8], edx; mov eax, ecx; adc eax, eax; ret; 
0x0000000000447ddb: mov dword ptr [rdi + 8], edx; ret; 
0x000000000048f843: mov dword ptr [rdi + 8], esi; mov eax, 0xffffbfd1; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000046811d: mov dword ptr [rdi + rbx*8 + 8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000044bcff: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], cx; ret; 
0x000000000044be84: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], cx; vzeroupper; ret; 
0x000000000044af89: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], si; ret; 
0x0000000000448a08: mov dword ptr [rdi + rdx - 3], ecx; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447d8: mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000044bcf7: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], ecx; ret; 
0x000000000044be79: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x000000000044af79: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000448a2c: mov dword ptr [rdi + rdx - 7], ecx; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447ec: mov dword ptr [rdi + rdx - 7], ecx; vzeroupper; ret; 
0x000000000044bcef: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rcx; ret; 
0x000000000044be6e: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000044af6b: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rsi; ret; 
0x0000000000499ebb: mov dword ptr [rdi + rsi*8], edx; add rsp, 8; ret; 
0x0000000000432405: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432443: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000467aff: mov dword ptr [rdi - 0x10], ecx; ret; 
0x00000000004325b8: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b4: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000432600: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432788: mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432968: mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432b58: mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432d29: mov dword ptr [rdi - 0x15], ebx; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432f29: mov dword ptr [rdi - 0x16], ebx; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433129: mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432401: mov dword ptr [rdi - 0x18], edx; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043243f: mov dword ptr [rdi - 0x18], edx; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004325b4: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b0: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325fc: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432784: mov dword ptr [rdi - 0x1a], edx; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432964: mov dword ptr [rdi - 0x1b], edx; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432b54: mov dword ptr [rdi - 0x1c], edx; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432d25: mov dword ptr [rdi - 0x1d], edx; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432f25: mov dword ptr [rdi - 0x1e], edx; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433125: mov dword ptr [rdi - 0x1f], edx; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004323fd: mov dword ptr [rdi - 0x20], ecx; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043243b: mov dword ptr [rdi - 0x20], ecx; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004325b0: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326ac: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325f8: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432780: mov dword ptr [rdi - 0x22], ecx; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432960: mov dword ptr [rdi - 0x23], ecx; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432b50: mov dword ptr [rdi - 0x24], ecx; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432d21: mov dword ptr [rdi - 0x25], ecx; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432f21: mov dword ptr [rdi - 0x26], ecx; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433121: mov dword ptr [rdi - 0x27], ecx; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004323f9: mov dword ptr [rdi - 0x28], eax; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432437: mov dword ptr [rdi - 0x28], eax; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043278c: mov dword ptr [rdi - 0xa], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437fd8: mov dword ptr [rdi - 0xa], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043296c: mov dword ptr [rdi - 0xb], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437f58: mov dword ptr [rdi - 0xb], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432b5c: mov dword ptr [rdi - 0xc], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437ed8: mov dword ptr [rdi - 0xc], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432d2d: mov dword ptr [rdi - 0xd], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437e49: mov dword ptr [rdi - 0xd], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432f2d: mov dword ptr [rdi - 0xe], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437db9: mov dword ptr [rdi - 0xe], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043312d: mov dword ptr [rdi - 0xf], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437d29: mov dword ptr [rdi - 0xf], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432b0d: mov dword ptr [rdi - 2], ecx; ret; 
0x0000000000432925: mov dword ptr [rdi - 2], edx; ret; 
0x0000000000432b09: mov dword ptr [rdi - 3], edx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000432ee9: mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004325bf: mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ee6: mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004330e6: mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004332e6: mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000467af8: mov dword ptr [rdi - 8], eax; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000432409: mov dword ptr [rdi - 8], ecx; ret; 
0x0000000000432447: mov dword ptr [rdi - 8], edx; ret; 
0x00000000004325bc: mov dword ptr [rdi - 9], eax; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b8: mov dword ptr [rdi - 9], ecx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000432604: mov dword ptr [rdi - 9], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000438058: mov dword ptr [rdi - 9], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000048c59c: mov dword ptr [rdi], eax; mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x0000000000467a78: mov dword ptr [rdi], eax; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000467b92: mov dword ptr [rdi], eax; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000467af1: mov dword ptr [rdi], ebx; shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000467c01: mov dword ptr [rdi], ebx; shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x00000000004483b5: mov dword ptr [rdi], ecx; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000448407: mov dword ptr [rdi], ecx; lea rax, qword ptr [rdi + 8]; ret; 
0x00000000004489d4: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], 0; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004447b4: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000448394: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000447d64: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; ret; 
0x00000000004483e5: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000447da5: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x0000000000448437: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000447de7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000448457: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 8], edx; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000447df7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000044ac8b: mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x0000000000448a02: mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447d2: mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x0000000000448478: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e08: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000448498: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000447e18: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004484b8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000447e28: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000448a29: mov dword ptr [rdi], ecx; mov qword ptr [rdi + rdx - 7], r9; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447e9: mov dword ptr [rdi], ecx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x00000000004483c6: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000447d96: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000448418: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000447dd8: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; ret; 
0x000000000044ac97: mov dword ptr [rdi], ecx; mov word ptr [rsi - 2], cx; ret; 
0x000000000043852c: mov dword ptr [rdi], ecx; ret; 
0x000000000044be73: mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x0000000000448384: mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 1]; ret; 
0x00000000004489c4: mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 1]; vzeroupper; ret; 
0x00000000004483a2: mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 3]; ret; 
0x00000000004489f2: mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 3]; vzeroupper; ret; 
0x00000000004483f4: mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 7]; ret; 
0x0000000000438834: mov dword ptr [rdi], edx; ret; 
0x00000000004447a4: mov dword ptr [rdi], edx; vzeroupper; ret; 
0x000000000043b803: mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000048f6d6: mov dword ptr [rdi], esi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000043b7f2: mov dword ptr [rdi], esi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000043b817: mov dword ptr [rdi], esi; mov word ptr [r9 - 2], cx; ret; 
0x000000000044af70: mov dword ptr [rdi], esi; ret; 
0x000000000042065f: mov dword ptr [rdx + 0x28], ecx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000041a80d: mov dword ptr [rdx + 0xe0], ecx; pop rbx; ret; 
0x0000000000417bfb: mov dword ptr [rdx + 0xe0], ecx; ret; 
0x00000000004478f7: mov dword ptr [rdx + 3], eax; lea rax, qword ptr [rdx + 6]; ret; 
0x0000000000446127: mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x00000000004478d9: mov dword ptr [rdx + 4], eax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446119: mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x000000000044798b: mov dword ptr [rdx + 5], eax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000447909: mov dword ptr [rdx + 5], eax; lea rax, qword ptr [rdx + 8]; ret; 
0x0000000000446139: mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x00000000004479ab: mov dword ptr [rdx + 6], eax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x0000000000447929: mov dword ptr [rdx + 6], eax; lea rax, qword ptr [rdx + 9]; ret; 
0x0000000000446149: mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000447949: mov dword ptr [rdx + 7], eax; lea rax, qword ptr [rdx + 0xa]; ret; 
0x00000000004479cb: mov dword ptr [rdx + 7], eax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x0000000000446159: mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000447969: mov dword ptr [rdx + 8], eax; lea rax, qword ptr [rdx + 0xb]; ret; 
0x000000000044785b: mov dword ptr [rdx + 8], eax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460ab: mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x000000000045ca2f: mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x000000000048f69b: mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000048f804: mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x0000000000498bdd: mov dword ptr [rdx], 0xfff7eae9; jmp qword ptr [rsi + 0x66]; 
0x000000000049a9e3: mov dword ptr [rdx], 0xffff1ae9; jmp qword ptr [rsi + 0xf]; 
0x000000000048f792: mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000447884: mov dword ptr [rdx], eax; lea rax, qword ptr [rdx + 1]; ret; 
0x00000000004478b2: mov dword ptr [rdx], eax; lea rax, qword ptr [rdx + 3]; ret; 
0x0000000000447804: mov dword ptr [rdx], eax; lea rax, qword ptr [rdx + 7]; ret; 
0x0000000000447894: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, qword ptr [rdx + 2]; ret; 
0x00000000004460e4: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x00000000004478c2: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, qword ptr [rdx + 4]; ret; 
0x0000000000446102: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x00000000004478d2: mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446112: mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x000000000044e302: mov dword ptr [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000048f6d8: mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000048f84e: mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x00000000004478f2: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, qword ptr [rdx + 6]; ret; 
0x0000000000446122: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000447904: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, qword ptr [rdx + 8]; ret; 
0x0000000000446134: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000447924: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, qword ptr [rdx + 9]; ret; 
0x0000000000446144: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000447944: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, qword ptr [rdx + 0xa]; ret; 
0x0000000000446154: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000447964: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, qword ptr [rdx + 0xb]; ret; 
0x0000000000446164: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x000000000044e53a: mov dword ptr [rdx], eax; mov rax, -1; ret; 
0x0000000000447984: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446174: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x00000000004479a4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x0000000000446194: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x00000000004479c4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x00000000004461b4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000447854: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460a4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000446054: mov dword ptr [rdx], eax; mov rax, rdi; ret; 
0x000000000048feb1: mov dword ptr [rdx], eax; pop rbx; ret; 
0x000000000041ec39: mov dword ptr [rdx], eax; ret; 
0x00000000004242c2: mov dword ptr [rdx], ecx; add byte ptr [rcx], al; pop rbx; ret; 
0x000000000047831c: mov dword ptr [rdx], ecx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044f565: mov dword ptr [rdx], edi; pop rbx; pop rbp; ret; 
0x000000000049cf51: mov dword ptr [rip + 0x2ffbd], 0; add rsp, 8; ret; 
0x000000000049cb4c: mov dword ptr [rip + 0x302a2], 0; add rsp, 8; ret; 
0x000000000049bdb6: mov dword ptr [rip + 0x31534], esi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bd02: mov dword ptr [rip + 0x315e8], esi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000048f908: mov dword ptr [rip + 0x3d6ba], eax; ret; 
0x000000000048f8f1: mov dword ptr [rip + 0x3d6d1], eax; add rsp, 8; ret; 
0x000000000048e731: mov dword ptr [rip + 0x3e865], 0; add rsp, 8; ret; 
0x000000000048c439: mov dword ptr [rip + 0x40ed1], eax; ret; 
0x000000000045204a: mov dword ptr [rip + 0x77a70], eax; pop rbx; ret; 
0x0000000000452dcd: mov dword ptr [rip + 0x7aa21], eax; ret; 
0x0000000000452d9d: mov dword ptr [rip + 0x7aa51], eax; ret; 
0x0000000000452d6c: mov dword ptr [rip + 0x7aa82], eax; pop rbx; ret; 
0x0000000000452d2d: mov dword ptr [rip + 0x7aac1], eax; ret; 
0x0000000000452cfd: mov dword ptr [rip + 0x7aaf1], eax; ret; 
0x0000000000452ccc: mov dword ptr [rip + 0x7ab22], eax; pop rbx; ret; 
0x00000000004504ad: mov dword ptr [rip + 0x7abdd], eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000424410: mov dword ptr [rip + 0xa636a], eax; ret; 
0x0000000000424402: mov dword ptr [rip + 0xa6380], eax; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x00000000004243bd: mov dword ptr [rip + 0xa88d9], 0; ret; 
0x00000000004243b7: mov dword ptr [rip + 0xa88eb], edx; mov dword ptr [rip + 0xa88d9], 0; ret; 
0x0000000000420ed6: mov dword ptr [rip + 0xa98a4], eax; ret; 
0x0000000000420ec8: mov dword ptr [rip + 0xa98ba], eax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041fa48: mov dword ptr [rip + 0xaad1a], eax; ret; 
0x000000000041fa31: mov dword ptr [rip + 0xaad29], eax; ret; 
0x000000000041fa17: mov dword ptr [rip + 0xaad33], edx; ret; 
0x000000000041f9d8: mov dword ptr [rip + 0xaad3a], eax; ret; 
0x000000000041f9b2: mov dword ptr [rip + 0xaad48], eax; ret; 
0x000000000041f9c8: mov dword ptr [rip + 0xaad52], eax; ret; 
0x000000000041f982: mov dword ptr [rip + 0xaad80], eax; ret; 
0x000000000041f9a7: mov dword ptr [rip + 0xaad83], 1; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f977: mov dword ptr [rip + 0xaadb3], 1; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f961: mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f957: mov dword ptr [rip + 0xaadd3], 1; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f931: mov dword ptr [rip + 0xaadd9], eax; mov dword ptr [rip + 0xaadf3], 1; ret; 
0x000000000041f937: mov dword ptr [rip + 0xaadf3], 1; ret; 
0x0000000000420eba: mov dword ptr [rip + 0xabdb8], eax; lea rax, qword ptr [rip + 0x3029]; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041fa75: mov dword ptr [rip + 0xad23d], eax; ret; 
0x000000000041f997: mov dword ptr [rip + 0xad317], eax; ret; 
0x000000000041f070: mov dword ptr [rip + 0xadbbe], 0; ret; 
0x000000000041efd0: mov dword ptr [rip + 0xadc62], ebx; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x0000000000401f6e: mov dword ptr [rip + 0xcae2c], eax; add rsp, 0x88; pop rbx; ret; 
0x0000000000402b9e: mov dword ptr [rsi + 0x10], esi; syscall; 
0x000000000049bd09: mov dword ptr [rsi + 0x28], eax; pop rbx; ret; 
0x0000000000402b92: mov dword ptr [rsi + 8], eax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000044ac9a: mov dword ptr [rsi - 2], ecx; ret; 
0x000000000044ac8d: mov dword ptr [rsi - 4], ecx; ret; 
0x0000000000499eeb: mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000048c5a6: mov dword ptr [rsi], eax; ret; 
0x000000000045e7f1: mov dword ptr [rsi], ecx; mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000048b96c: mov dword ptr [rsi], edi; pop rbx; ret; 
0x0000000000402b9b: mov dword ptr [rsi], esi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000044f681: mov dword ptr [rsp + 0x10], ebx; call rax; 
0x00000000004225d6: mov dword ptr [rsp + 0x10], ecx; call rax; 
0x0000000000422570: mov dword ptr [rsp + 0x10], edx; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rax; call rsi; 
0x000000000048b628: mov dword ptr [rsp + 0x18], eax; call 0x8af50; add rsp, 0xd8; ret; 
0x00000000004225d1: mov dword ptr [rsp + 0x18], edx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048358a: mov dword ptr [rsp + 0x28], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000044f675: mov dword ptr [rsp + 0xc], eax; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000044f674: mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000044e518: mov dword ptr [rsp + 8], eax; call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000422575: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp], rax; call rsi; 
0x0000000000418d1f: mov dword ptr [rsp + 8], ecx; mov rdi, r15; call rax; 
0x000000000046bc1d: mov dword ptr [rsp - 0x10], edx; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x0000000000468edc: mov dword ptr [rsp - 0x10], esi; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000468ed7: mov dword ptr [rsp - 0x18], eax; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x000000000048eff2: mov dword ptr [rsp], 0; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000049a813: mov dword ptr [rsp], eax; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000042257a: mov dword ptr [rsp], eax; call rsi; 
0x000000000041b468: mov dword ptr [rsp], ecx; mov rdi, rbp; call rax; 
0x000000000044f67d: mov dword ptr [rsp], edx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x00000000004795c2: mov dword ptr [rsp], esi; pop r12; pop r13; pop r14; ret; 
0x000000000044e317: mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f20f: mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000048368f: mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000422d02: mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000042510e: mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000004830df: mov dword ptr fs:[rax], 2; xor eax, eax; ret; 
0x000000000044e25d: mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000044e301: mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e539: mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000044af78: mov dword ptr ss:[rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000438a60: mov dx, word ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x00000000004483c2: mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000447d92: mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000448413: mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000447dd3: mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000432920: mov dx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000432b00: mov dx, word ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000448380: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000447d50: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044c193: mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000000401d59: mov eax, 0; call 0x8e70; leave; ret; 
0x0000000000401da5: mov eax, 0; leave; ret; 
0x000000000045fed3: mov eax, 0; test dil, dil; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000045feb6: mov eax, 0; test dl, dl; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000044e3e4: mov eax, 0x101; syscall; 
0x00000000004834d8: mov eax, 0x106; syscall; 
0x000000000041fa6b: mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x000000000044c1e1: mov eax, 0x10; pop rbx; ret; 
0x0000000000483593: mov eax, 0x10; syscall; 
0x0000000000490377: mov eax, 0x11; syscall; 
0x000000000044f06b: mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000048b030: mov eax, 0x14; syscall; 
0x0000000000450e85: mov eax, 0x15; syscall; 
0x0000000000425e90: mov eax, 0x16; pop rbx; ret; 
0x0000000000425ed0: mov eax, 0x16; ret; 
0x000000000044e244: mov eax, 0x18; syscall; 
0x00000000004504d7: mov eax, 0x19; syscall; 
0x000000000044f2e4: mov eax, 0x1c; syscall; 
0x000000000044c1da: mov eax, 0x20; pop rbx; ret; 
0x0000000000493c54: mov eax, 0x26; syscall; 
0x0000000000490364: mov eax, 0x27; syscall; 
0x0000000000490364: mov eax, 0x27; syscall; ret; 
0x000000000044c1d3: mov eax, 0x30; pop rbx; ret; 
0x00000000004833f4: mov eax, 0x3f; syscall; 
0x000000000044c1cc: mov eax, 0x40; pop rbx; ret; 
0x000000000049a7e5: mov eax, 0x41c00149; jmp rax; 
0x000000000045c371: mov eax, 0x44000000; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000426d04: mov eax, 0x480000c7; lea edx, dword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x0000000000420ebc: mov eax, 0x48000abd; lea eax, dword ptr [rip + 0x3029]; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000044eddd: mov eax, 0x48; syscall; 
0x000000000044e6ab: mov eax, 0x4f; syscall; 
0x000000000044c1c5: mov eax, 0x60; pop rbx; ret; 
0x0000000000450504: mov eax, 0x63; syscall; 
0x0000000000483424: mov eax, 0x66; syscall; 
0x0000000000483424: mov eax, 0x66; syscall; ret; 
0x0000000000483444: mov eax, 0x68; syscall; 
0x0000000000483444: mov eax, 0x68; syscall; ret; 
0x0000000000483434: mov eax, 0x6b; syscall; 
0x0000000000483434: mov eax, 0x6b; syscall; ret; 
0x0000000000483454: mov eax, 0x6c; syscall; 
0x0000000000483454: mov eax, 0x6c; syscall; ret; 
0x000000000049032b: mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000044ce6d: mov eax, 0x80007fe; lea rax, qword ptr [rip + 0xb17]; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x000000000044c1ef: mov eax, 0x80; pop rbx; ret; 
0x000000000047e264: mov eax, 0x8b000269; or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000402b95: mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000493489: mov eax, 0x9e; sete sil; add esi, esi; syscall; 
0x0000000000402358: mov eax, 0x9e; syscall; 
0x000000000044f2b4: mov eax, 0xa; syscall; 
0x000000000044f284: mov eax, 0xb; syscall; 
0x0000000000407a20: mov eax, 0xba; syscall; 
0x0000000000483644: mov eax, 0xc; syscall; 
0x0000000000470c8a: mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709fe: mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec6a: mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f822: mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f75d: mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5c0: mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4f1: mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x000000000045474a: mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454636: mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454516: mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d35e: mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e1e: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424156: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x000000000042411e: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c46: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c46: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; pop rbp; ret; 
0x0000000000423c0e: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ace: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x000000000042362a: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c7a: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424312: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000424312: mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; pop rbx; ret; 
0x0000000000420d76: mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420d00: mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420abe: mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x000000000042059a: mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f050: mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f050: mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb50: mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7ec: mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e4a2: mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3dc: mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d13c: mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde8: mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde8: mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x000000000041788e: mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086ed: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084b6: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x000000000040847b: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408397: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065db: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de8: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403dff: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dd6: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403cab: mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x0000000000401217: mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000401386: mov eax, 0xca; syscall; 
0x0000000000470df4: mov eax, 0xca; syscall; ret; 
0x0000000000478d8d: mov eax, 0xca; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x0000000000490334: mov eax, 0xd9; syscall; 
0x000000000045eadf: mov eax, 0xd; syscall; 
0x0000000000482ed5: mov eax, 0xe4; syscall; 
0x0000000000407a4e: mov eax, 0xe; syscall; 
0x0000000000407a2c: mov eax, 0xea; syscall; 
0x0000000000430559: mov eax, 0xf66b8b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045ea11: mov eax, 0xf; syscall; 
0x00000000004833e9: mov eax, 0xfcd451e8; call qword ptr [rax - 0x5e1f00d]; mov eax, 0x3f; syscall; 
0x000000000048f846: mov eax, 0xffffbfd1; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000048f770: mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000048f88d: mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000045e815: mov eax, 0xffffffb0; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000044e311: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f209: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000483689: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000425108: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000004830d9: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 2; xor eax, eax; ret; 
0x000000000048ce05: mov eax, 0xffffffc0; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x0000000000422cf9: mov eax, 0xffffffc0; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000045e875: mov eax, 0xffffffe0; add rax, qword ptr fs:[0]; ret; 
0x000000000045e855: mov eax, 0xffffffe8; add rax, qword ptr fs:[0]; ret; 
0x0000000000498e44: mov eax, 0xffffffe; mov dh, 0xca; lea rdx, qword ptr [rip + 0x21a82]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x000000000045e835: mov eax, 0xfffffff0; add rax, qword ptr fs:[0]; ret; 
0x000000000045f61e: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x000000000041de41: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000419420: mov eax, 0xffffffff; pop rbp; ret; 
0x0000000000419b71: mov eax, 0xffffffff; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000419891: mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000041af83: mov eax, 0xffffffff; pop rbx; ret; 
0x000000000041a100: mov eax, 0xffffffff; ret; 
0x000000000048b7e0: mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048f78d: mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000048f6b5: mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x0000000000470ae9: mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x000000000041de21: mov eax, 1; pop rbp; pop r12; ret; 
0x000000000047855e: mov eax, 1; pop rbp; ret; 
0x0000000000426023: mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x0000000000454c64: mov eax, 1; pop rbx; pop rbp; ret; 
0x0000000000482c51: mov eax, 1; ret; 
0x000000000044e570: mov eax, 1; syscall; 
0x000000000049a790: mov eax, 2; add rsp, 8; ret; 
0x00000000004976ee: mov eax, 2; pop rbx; ret; 
0x0000000000482c61: mov eax, 2; ret; 
0x0000000000482c71: mov eax, 3; ret; 
0x000000000044ed94: mov eax, 3; syscall; 
0x000000000049a780: mov eax, 4; add rsp, 8; ret; 
0x0000000000482c81: mov eax, 4; ret; 
0x000000000044e2e3: mov eax, 4; syscall; 
0x0000000000482c91: mov eax, 5; ret; 
0x000000000044e342: mov eax, 5; syscall; 
0x0000000000482ca1: mov eax, 6; ret; 
0x0000000000483473: mov eax, 6; syscall; 
0x0000000000499baf: mov eax, 7; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000482cb1: mov eax, 7; ret; 
0x000000000049a762: mov eax, 8; add rsp, 8; ret; 
0x000000000044c1e8: mov eax, 8; pop rbx; ret; 
0x000000000044e604: mov eax, 8; syscall; 
0x000000000044f1ef: mov eax, 9; syscall; 
0x0000000000408319: mov eax, dword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000419415: mov eax, dword ptr [rax + 0x20]; jmp rax; 
0x000000000045e8cf: mov eax, dword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000047858a: mov eax, dword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000041940e: mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000494d6c: mov eax, dword ptr [rax + 8]; mov rdx, r13; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x000000000048e745: mov eax, dword ptr [rax + 8]; ret; 
0x000000000048e755: mov eax, dword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000045e823: mov eax, dword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000049c309: mov eax, dword ptr [rax]; add rax, 8; mov qword ptr [rbx], r8; pop rbx; ret; 
0x0000000000499e61: mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000049c229: mov eax, dword ptr [rax]; mov qword ptr [rbx], r8; pop rbx; ret; 
0x0000000000478319: mov eax, dword ptr [rax]; mov qword ptr [rdx], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045e820: mov eax, dword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000048ce0d: mov eax, dword ptr [rax]; ret; 
0x000000000045f74f: mov eax, dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x00000000004031d0: mov eax, dword ptr [rbp + 8]; sub eax, dword ptr [rbx + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044f852: mov eax, dword ptr [rbp - 0x60]; call rax; 
0x0000000000401d9b: mov eax, dword ptr [rbp - 4]; mov edi, eax; call 0x1c9e; mov eax, 0; leave; ret; 
0x000000000048fe89: mov eax, dword ptr [rbx + 0x10]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000048fe41: mov eax, dword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x000000000048fe31: mov eax, dword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000041d611: mov eax, dword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000041d62e: mov eax, dword ptr [rbx + 0x18]; mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000041b166: mov eax, dword ptr [rbx + 0x20]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000041d811: mov eax, dword ptr [rbx + 0x28]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000046dcba: mov eax, dword ptr [rbx + 0x38]; mov dword ptr [rbp - 0xf0], r9d; mov rdi, qword ptr [rbp - 0xd0]; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000041db6d: mov eax, dword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000041dd9f: mov eax, dword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000004504aa: mov eax, dword ptr [rbx]; mov qword ptr [rip + 0x7abdd], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004995ad: mov eax, dword ptr [rbx]; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x00000000004478f4: mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, qword ptr [rdx + 6]; ret; 
0x0000000000446124: mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x00000000004478d5: mov eax, dword ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446115: mov eax, dword ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000447906: mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, qword ptr [rdx + 8]; ret; 
0x0000000000446136: mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000447987: mov eax, dword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446177: mov eax, dword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000447926: mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, qword ptr [rdx + 9]; ret; 
0x0000000000446146: mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x00000000004479a7: mov eax, dword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x0000000000446197: mov eax, dword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000447946: mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, qword ptr [rdx + 0xa]; ret; 
0x0000000000446156: mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x00000000004479c7: mov eax, dword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x00000000004461b7: mov eax, dword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000447966: mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, qword ptr [rdx + 0xb]; ret; 
0x0000000000446166: mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000447857: mov eax, dword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460a7: mov eax, dword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000425819: mov eax, dword ptr [rcx + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000044041a: mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000441cf2: mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000414679: mov eax, dword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d32: mov eax, dword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x00000000004478b0: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, qword ptr [rdx + 3]; ret; 
0x00000000004478c0: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, qword ptr [rdx + 4]; ret; 
0x0000000000446100: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x00000000004478d0: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446110: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x00000000004478f0: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, qword ptr [rdx + 6]; ret; 
0x0000000000446120: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x00000000004460f0: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov rax, rdi; ret; 
0x0000000000447801: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, qword ptr [rdx + 7]; ret; 
0x0000000000447901: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, qword ptr [rdx + 8]; ret; 
0x0000000000446131: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000447921: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, qword ptr [rdx + 9]; ret; 
0x0000000000446141: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000447941: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, qword ptr [rdx + 0xa]; ret; 
0x0000000000446151: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000447961: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, qword ptr [rdx + 0xb]; ret; 
0x0000000000446161: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000447981: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446171: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x00000000004479a1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x0000000000446191: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x00000000004479c1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x00000000004461b1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000447851: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460a1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000446051: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000447881: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; lea rax, qword ptr [rdx + 1]; ret; 
0x0000000000447891: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, qword ptr [rdx + 2]; ret; 
0x00000000004460e1: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x00000000004460d1: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x000000000048b842: mov eax, dword ptr [rcx]; ret; 
0x000000000041ec44: mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x000000000041ec6c: mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000478bde: mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000478bf0: mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x000000000041f875: mov eax, dword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000420663: mov eax, dword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000041d49f: mov eax, dword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041ef85: mov eax, dword ptr [rdi + 0x68]; ret; 
0x0000000000499e71: mov eax, dword ptr [rdi + 0x90]; ret; 
0x0000000000499ed1: mov eax, dword ptr [rdi + 0x98]; ret; 
0x0000000000499f11: mov eax, dword ptr [rdi + 0xa0]; ret; 
0x0000000000499f71: mov eax, dword ptr [rdi + 0xa8]; ret; 
0x0000000000499f61: mov eax, dword ptr [rdi + 0xb0]; ret; 
0x0000000000499f21: mov eax, dword ptr [rdi + 0xb8]; ret; 
0x0000000000499ee1: mov eax, dword ptr [rdi + 0xc0]; shr rax, 0x3f; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000414722: mov eax, dword ptr [rdi + rax*8]; jmp rax; 
0x000000000041f9a5: mov eax, dword ptr [rdi]; mov dword ptr [rip + 0xaad83], 1; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f975: mov eax, dword ptr [rdi]; mov dword ptr [rip + 0xaadb3], 1; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f955: mov eax, dword ptr [rdi]; mov dword ptr [rip + 0xaadd3], 1; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f995: mov eax, dword ptr [rdi]; mov dword ptr [rip + 0xad317], eax; ret; 
0x000000000041ec36: mov eax, dword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x000000000041fa45: mov eax, dword ptr [rdi]; mov qword ptr [rip + 0xaad1a], rax; ret; 
0x000000000041f9d5: mov eax, dword ptr [rdi]; mov qword ptr [rip + 0xaad3a], rax; ret; 
0x000000000041f9c5: mov eax, dword ptr [rdi]; mov qword ptr [rip + 0xaad52], rax; ret; 
0x000000000041a0ee: mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x000000000043e016: mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000048ca3a: mov eax, dword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000478757: mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049aa0c: mov eax, dword ptr [rdx]; add rsp, 8; ret; 
0x000000000049bdaf: mov eax, dword ptr [rip + 0x3153b]; mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bcfb: mov eax, dword ptr [rip + 0x315ef]; mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x00000000004905a4: mov eax, dword ptr [rip + 0x3d27e]; ret; 
0x000000000048c595: mov eax, dword ptr [rip + 0x3db55]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x000000000048c59f: mov eax, dword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x000000000048c52e: mov eax, dword ptr [rip + 0x40ddc]; mov rax, r8; ret; 
0x000000000045c215: mov eax, dword ptr [rip + 0x70bd5]; ret; 
0x00000000004536e5: mov eax, dword ptr [rip + 0x7a1bd]; ret; 
0x0000000000452dc0: mov eax, dword ptr [rip + 0x7aa2e]; pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x7aa21], eax; ret; 
0x0000000000452d90: mov eax, dword ptr [rip + 0x7aa5e]; pop rbx; and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x7aa51], eax; ret; 
0x0000000000452d60: mov eax, dword ptr [rip + 0x7aa8e]; and eax, 0xffffffc7; or eax, 0x10; mov dword ptr [rip + 0x7aa82], eax; pop rbx; ret; 
0x0000000000452d20: mov eax, dword ptr [rip + 0x7aace]; pop rbx; and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x7aac1], eax; ret; 
0x0000000000452cf0: mov eax, dword ptr [rip + 0x7aafe]; pop rbx; and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x7aaf1], eax; ret; 
0x0000000000452cc0: mov eax, dword ptr [rip + 0x7ab2e]; and eax, 0xfffffff8; or eax, 2; mov dword ptr [rip + 0x7ab22], eax; pop rbx; ret; 
0x0000000000450454: mov eax, dword ptr [rip + 0x7d3ce]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x000000000041fdf4: mov eax, dword ptr [rip + 0xaa93e]; mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000041ef65: mov eax, dword ptr [rip + 0xab1b5]; ret; 
0x00000000004784f2: mov eax, dword ptr [rsi + 0xe0]; call qword ptr [rax + 0x68]; 
0x0000000000474f7e: mov eax, dword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x0000000000474059: mov eax, dword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x000000000049aa51: mov eax, dword ptr [rsi]; add rsp, 8; ret; 
0x0000000000499f46: mov eax, dword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x00000000004568f0: mov eax, dword ptr [rsp + 0x10]; call rax; 
0x000000000048effa: mov eax, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x00000000004025ba: mov eax, dword ptr [rsp + 0x18]; call rax; 
0x000000000044f670: mov eax, dword ptr [rsp + 0x18]; mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000045972f: mov eax, dword ptr [rsp + 0x20]; call rax; 
0x0000000000455899: mov eax, dword ptr [rsp + 0x28]; call rax; 
0x000000000045633c: mov eax, dword ptr [rsp + 0x30]; call rax; 
0x000000000048c656: mov eax, dword ptr [rsp + 8]; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000044e522: mov eax, dword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000407bd9: mov eax, dword ptr [rsp + 8]; call rax; 
0x0000000000418983: mov eax, dword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000407b66: mov eax, dword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000407cfc: mov eax, dword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000491b1c: mov eax, dword ptr [rsp]; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000048ce0c: mov eax, dword ptr fs:[rax]; ret; 
0x000000000041b005: mov eax, eax; add byte ptr [rax], al; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000040858a: mov eax, eax; add qword ptr [rip + 0xc51c4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000407a69: mov eax, eax; add rsp, 0x118; ret; 
0x000000000044e456: mov eax, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e5a2: mov eax, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000044e502: mov eax, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x000000000048b969: mov eax, eax; mov qword ptr [rsi], rdi; pop rbx; ret; 
0x00000000004247f3: mov eax, eax; pop r12; pop r13; ret; 
0x000000000042026e: mov eax, eax; pop r12; ret; 
0x0000000000424857: mov eax, eax; pop r13; ret; 
0x000000000047962a: mov eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000417f59: mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000470989: mov eax, eax; pop rbp; sub dword ptr [rip + 0x5c599], 1; pop r12; ret; 
0x0000000000408699: mov eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000417fc1: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000004085fc: mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000000470c3f: mov eax, eax; pop rbx; ret; 
0x00000000004085f1: mov eax, eax; ret; 
0x000000000044db94: mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x000000000044dd52: mov eax, eax; syscall; 
0x0000000000444341: mov eax, eax; vzeroupper; ret; 
0x0000000000499c2f: mov eax, ebp; mov rcx, r13; mov rdx, qword ptr [r13]; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000490916: mov eax, ebp; pop r12; pop r13; ret; 
0x0000000000417cce: mov eax, ebp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000044f7b9: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x000000000044f7a4: mov eax, ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000041bc7e: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000468e43: mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x000000000048c3e3: mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000499b30: mov eax, ebx; mov rcx, r12; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x000000000049a0fe: mov eax, ebx; mov rcx, r13; mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x000000000041c0b9: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x00000000004198ae: mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000041a77f: mov eax, ebx; pop rbx; ret; 
0x00000000004242e7: mov eax, ebx; syscall; 
0x000000000046795b: mov eax, ecx; adc eax, eax; ret; 
0x000000000045ebb3: mov eax, ecx; add rsp, 0x148; ret; 
0x0000000000483617: mov eax, ecx; add rsp, 0x38; ret; 
0x000000000044c1ff: mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x0000000000478c61: mov eax, ecx; lea rdx, qword ptr [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000406be6: mov eax, ecx; pop r12; ret; 
0x0000000000470f48: mov eax, ecx; pop r14; ret; 
0x0000000000470e97: mov eax, ecx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000406bb8: mov eax, ecx; pop rbx; pop rbp; pop r12; ret; 
0x000000000044c118: mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000044c163: mov eax, ecx; pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000046c1b2: mov eax, ecx; ret; 
0x0000000000407a19: mov eax, ecx; syscall; 
0x0000000000420269: mov eax, edi; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000000041ef95: mov eax, edi; ret; 
0x000000000044c136: mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000048206c: mov eax, edx; mov rdi, rsi; bsr eax, eax; lea rax, qword ptr [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000044c1c1: mov eax, edx; pop rbx; ret; 
0x0000000000444a19: mov eax, edx; ret; 
0x00000000004025f2: mov eax, edx; syscall; 
0x000000000044c214: mov eax, edx; xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000045ec79: mov eax, esi; mov r10d, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000048f128: mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000044dd42: mov eax, esi; syscall; 
0x0000000000478a06: mov eax, esp; pop r12; pop r13; pop r14; ret; 
0x0000000000478ea9: mov eax, esp; pop r12; pop r13; ret; 
0x0000000000403069: mov eax, esp; pop r12; ret; 
0x000000000044f369: mov eax, esp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000041dc25: mov eax, esp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000042008b: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000048cd06: mov eax, esp; pop rbp; pop r12; ret; 
0x000000000044f0f2: mov eax, esp; pop rbx; pop r12; ret; 
0x0000000000403257: mov eax, esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402fcb: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000493cd9: mov eax, esp; sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x000000000048efe5: mov eax, r12d; pop r12; ret; 
0x00000000004956a0: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000048cd05: mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000046bde4: mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000045038c: mov eax, r12d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000041776c: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407a68: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000479629: mov eax, r8d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000045c375: mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000470988: mov eax, r8d; pop rbp; sub dword ptr [rip + 0x5c599], 1; pop r12; ret; 
0x0000000000408698: mov eax, r8d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000041739d: mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000470c3e: mov eax, r8d; pop rbx; ret; 
0x0000000000409140: mov eax, r8d; ret; 
0x000000000044dd51: mov eax, r8d; syscall; 
0x000000000045ebb2: mov eax, r9d; add rsp, 0x148; ret; 
0x0000000000483616: mov eax, r9d; add rsp, 0x38; ret; 
0x000000000046c1b1: mov eax, r9d; ret; 
0x000000000041a508: mov eax, r9d; syscall; 
0x0000000000470ae7: mov ebp, 0x1b85b; add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x0000000000411dab: mov ebp, 0x4c000013; mov edx, ebp; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000430254: mov ebp, 0x4e6f0ff3; mov ebp, 0xf66bdb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000414ead: mov ebp, 0x8900000d; ret 0xc083; 
0x0000000000420ebd: mov ebp, 0x8d48000a; add eax, 0x3029; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000401d55: mov ebp, 0xb80049e0; add byte ptr [rax], al; add byte ptr [rax], al; call 0x8e70; leave; ret; 
0x000000000046c175: mov ebp, 0xe8fffffd; ret 0xfe46; 
0x0000000000430259: mov ebp, 0xf66bdb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000481c8c: mov ebp, 0xf80148c0; ret; 
0x0000000000481f1c: mov ebp, 0xf80148c6; ret; 
0x0000000000472184: mov ebp, 0xfffff738; mov rdx, r10; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x0000000000474881: mov ebp, 0xfffffb10; add byte ptr [rcx - 0x77], al; ret 0x1e74; 
0x00000000004139a4: mov ebp, 0xfffffb30; mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000048b024: mov ebp, 0xfffffb9c; lea rsi, qword ptr [rbp - 0x430]; mov eax, 0x14; syscall; 
0x000000000046dcc6: mov ebp, 0xffffff30; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000049a146: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e1: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000049a1ed: mov ebp, dword ptr [rbp]; mov rsp, rcx; ret; 
0x0000000000473cf3: mov ebp, ebx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000048f12e: mov ebp, ecx; jmp rdx; 
0x000000000044e6a6: mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000048cbb3: mov ebp, esp; mov rsi, rbp; syscall; 
0x0000000000420ed1: mov ebx, 0x4800002a; mov dword ptr [rip + 0xa98a4], eax; ret; 
0x0000000000413985: mov ebx, 0x8948004c; ret 0x8148; 
0x0000000000476ba4: mov ebx, 0xc748004c; ret 0xc208; 
0x0000000000418bdd: mov ebx, 0xc748004c; ret; 
0x00000000004303d9: mov ebx, 0xf66bbb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000469028: mov ebx, ds; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000499ad5: mov ebx, dword ptr [rax + 0x48000000]; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000432551: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432535: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000048e851: mov ebx, dword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7cf: mov ebx, dword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000407a14: mov ecx, 0x27; mov eax, ecx; syscall; 
0x000000000042471c: mov ecx, 0x3ce80007; mov bh, 0xff; jmp qword ptr [rsi + 0x66]; 
0x000000000042491a: mov ecx, 0x3ee80007; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000004029a1: mov ecx, 0x950f0009; ret; 
0x0000000000457c6f: mov ecx, 0xa9e80004; mov dl, 0xfa; jmp qword ptr [rsi + 0xf]; 
0x00000000004304d9: mov ecx, 0xf66b9b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044e255: mov ecx, 0xffffffc0; neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000045e7f4: mov ecx, 0xffffffe8; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000478554: mov ecx, 1; call 0x78010; mov eax, 1; pop rbp; ret; 
0x000000000041467c: mov ecx, 1; jmp rax; 
0x000000000041c174: mov ecx, 3; mov edx, 1; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x000000000044f231: mov ecx, 9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000000477fb6: mov ecx, dword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000043b813: mov ecx, dword ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000043b800: mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000043b7ee: mov ecx, dword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000499ad1: mov ecx, dword ptr [rcx]; mov qword ptr [rbx + 0x98], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043e013: mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000448534: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000448554: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000447e94: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000447e84: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x00000000004485b5: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485d5: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f15: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef5: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x00000000004484f5: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e55: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000448618: mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, qword ptr [rdi + 0x1a]; ret; 
0x0000000000447f58: mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000448638: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000447f78: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004485f9: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f39: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000448575: mov ecx, dword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447eb5: mov ecx, dword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000448514: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, qword ptr [rdi + 0x12]; ret; 
0x0000000000447e74: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000448595: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447ed5: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000448a04: mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447d4: mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000044af73: mov ecx, dword ptr [rsi + rdx - 4]; mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000448a24: mov ecx, dword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447e4: mov ecx, dword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000044af63: mov ecx, dword ptr [rsi + rdx - 8]; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x00000000004328f5: mov ecx, dword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432911: mov ecx, dword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ad5: mov ecx, dword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432af1: mov ecx, dword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cb5: mov ecx, dword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cd1: mov ecx, dword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ea5: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ec1: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330a5: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330c1: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332a5: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332c1: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432b05: mov ecx, dword ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000432ee3: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004330e3: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004332e3: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437fd4: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437f54: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437ed4: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000438054: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437e45: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437db5: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437d25: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432715: mov ecx, dword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432731: mov ecx, dword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004483b0: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000447d80: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000448401: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000447dc1: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000438983: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000438913: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004388a3: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004447d0: mov ecx, dword ptr [rsi]; mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x00000000004483c0: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000447d90: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000448411: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000447dd1: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x00000000004483e0: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000447da0: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x0000000000448431: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000447de1: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000448451: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000447df1: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x00000000004387c5: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438755: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004386e5: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438675: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438605: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438595: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438525: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004447e1: mov ecx, dword ptr [rsi]; mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000448471: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e01: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000448491: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000447e11: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004484b1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000447e21: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000438a65: mov ecx, dword ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000448391: mov ecx, dword ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000447d61: mov ecx, dword ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x000000000048ef9d: mov ecx, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000044cd6b: mov ecx, dword ptr [rsp + 0x10]; mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x00000000004570cc: mov ecx, dword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045ad96: mov ecx, dword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000456b80: mov ecx, dword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x000000000044d683: mov ecx, dword ptr [rsp + 0x20]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000456553: mov ecx, dword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x000000000045632d: mov ecx, dword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045604c: mov ecx, dword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x0000000000456ebc: mov ecx, dword ptr [rsp + 0x28]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000458292: mov ecx, dword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000459720: mov ecx, dword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000458af8: mov ecx, dword ptr [rsp + 0x38]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000048e85b: mov ecx, dword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d9: mov ecx, dword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000407d46: mov ecx, dword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000043b7ff: mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000450600: mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, qword ptr [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000044c134: mov ecx, eax; mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000470f41: mov ecx, eax; pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x0000000000499c32: mov ecx, ebp; mov rdx, qword ptr [r13]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000049a101: mov ecx, ebp; mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x000000000041ed16: mov ecx, edx; add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041ecda: mov ecx, edx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000044bc0e: mov ecx, edx; movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000044af46: mov ecx, edx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045350b: mov ecx, esi; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000044d506: mov ecx, esp; mov rdx, r13; call rbx; 
0x0000000000499b33: mov ecx, esp; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000402353: mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000000493484: mov edi, 0x3002; mov eax, 0x9e; sete sil; add esi, esi; syscall; 
0x0000000000402640: mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000000402671: mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x000000000049328e: mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x000000000048fea4: mov edi, 0x458; add byte ptr [rbp + 0x24], dh; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000401d54: mov edi, 0x49e0bd; mov eax, 0; call 0x8e70; leave; ret; 
0x0000000000401c4c: mov edi, 0x4baa20; call rax; 
0x0000000000401c91: mov edi, 0x4c7118; call rax; 
0x0000000000401be2: mov edi, 0x4cbb10; jmp rax; 
0x0000000000401c22: mov edi, 0x4cbb10; jmp rdx; 
0x0000000000498184: mov edi, 0x83480170; rol byte ptr [rbx], 0xeb; ret; 
0x00000000004719e2: mov edi, 0x85480005; sal byte ptr [rax + rdx + 0x4d], 0x63; ret; 
0x0000000000430089: mov edi, 0xf66bfb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045c4cc: mov edi, 0xff436ee8; jmp qword ptr [rsi + 0x66]; 
0x000000000044e3df: mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000499b3c: mov edi, 1; call rax; 
0x000000000049a49c: mov edi, 1; jmp rax; 
0x0000000000407a49: mov edi, 2; mov eax, 0xe; syscall; 
0x000000000041a503: mov edi, 2; mov eax, r9d; syscall; 
0x000000000048b023: mov edi, dword ptr [rbp - 0x464]; lea rsi, qword ptr [rbp - 0x430]; mov eax, 0x14; syscall; 
0x00000000004139a3: mov edi, dword ptr [rbp - 0x4d0]; mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000044f847: mov edi, dword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000472183: mov edi, dword ptr [rbp - 0x8c8]; mov rdx, r10; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x000000000046dcc5: mov edi, dword ptr [rbp - 0xd0]; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000049a14e: mov edi, dword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e9: mov edi, dword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000044f450: mov edi, dword ptr [rbp]; call rbx; 
0x000000000048f125: mov edi, dword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x0000000000493b95: mov edi, dword ptr [rdi]; call 0x95930; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000493ad1: mov edi, dword ptr [rdi]; call 0x95a30; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000049a5ae: mov edi, dword ptr [rdx + 8]; sbb ecx, ecx; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x000000000044ca45: mov edi, dword ptr [rsp + 0x10]; push 1; push 0; lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000044c9d7: mov edi, dword ptr [rsp + 0x10]; push 1; xor edx, edx; push 1; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000048efff: mov edi, dword ptr [rsp + 0x18]; call rax; 
0x000000000048efa2: mov edi, dword ptr [rsp + 0x18]; call rcx; 
0x000000000045829c: mov edi, dword ptr [rsp + 0x40]; call rbx; 
0x0000000000458b02: mov edi, dword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004570d6: mov edi, dword ptr [rsp + 0x48]; call rbx; 
0x0000000000456ec6: mov edi, dword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045972a: mov edi, dword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000045a389: mov edi, dword ptr [rsp + 0x50]; call rbx; 
0x000000000045655d: mov edi, dword ptr [rsp + 0x58]; call rbx; 
0x00000000004568eb: mov edi, dword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000455894: mov edi, dword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000456337: mov edi, dword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x0000000000456056: mov edi, dword ptr [rsp + 0x60]; call rbx; 
0x0000000000455dc2: mov edi, dword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004025b0: mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000041dba3: mov edi, dword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000044e5a4: mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000045ee25: mov edi, dword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000000044e504: mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x0000000000421409: mov edi, dword ptr [rsp + 8]; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000041d636: mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000407bd2: mov edi, dword ptr [rsp]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000048239c: mov edi, dword ptr [rsp]; push 0; lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x0000000000401d9e: mov edi, eax; call 0x1c9e; mov eax, 0; leave; ret; 
0x000000000048fbc1: mov edi, eax; call 0x24a70; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000049bf52: mov edi, eax; jmp qword ptr [rsi + 0x66]; 
0x0000000000407a1e: mov edi, eax; mov eax, 0xba; syscall; 
0x000000000044e515: mov edi, eax; mov qword ptr [rsp + 8], rax; call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000041898d: mov edi, ebp; call qword ptr [rax + 0x18]; 
0x0000000000494f12: mov edi, ebp; call qword ptr [rax]; 
0x00000000004176dc: mov edi, ebp; call qword ptr [rbx + 0x10]; 
0x000000000041b99d: mov edi, ebp; call qword ptr [rbx + 0x40]; 
0x0000000000494db6: mov edi, ebp; call qword ptr [rbx]; 
0x000000000041b46c: mov edi, ebp; call rax; 
0x000000000049c5f9: mov edi, ebp; call rbx; 
0x0000000000477d11: mov edi, ebp; jmp qword ptr [rsi + 0x2e]; 
0x000000000044e6a9: mov edi, ebp; mov eax, 0x4f; syscall; 
0x00000000004218ad: mov edi, ebp; mov eax, 0xca; syscall; 
0x0000000000482ed3: mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000044f1ed: mov edi, ebp; mov eax, 9; syscall; 
0x0000000000478552: mov edi, ebp; mov ecx, 1; call 0x78010; mov eax, 1; pop rbp; ret; 
0x000000000044f366: mov edi, ebp; mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000044d688: mov edi, ebp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000450986: mov edi, ebp; mov rsi, r8; call 0x50920; add rsp, 0x10; pop rbp; ret; 
0x000000000041940a: mov edi, ebp; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000478384: mov edi, ebp; pop rbp; pop r12; jmp rax; 
0x000000000041b1df: mov edi, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000041b16e: mov edi, ebp; pop rbx; pop rbp; jmp rax; 
0x0000000000408338: mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000041d520: mov edi, ebx; call qword ptr [rbp + 0x18]; 
0x000000000041d9f1: mov edi, ebx; call qword ptr [rbp + 0x20]; 
0x000000000041e141: mov edi, ebx; call qword ptr [rbp + 0x30]; 
0x000000000041c17f: mov edi, ebx; call qword ptr [rbp + 0x48]; 
0x0000000000417981: mov edi, ebx; call qword ptr [rbp + 0x60]; 
0x000000000041d93b: mov edi, ebx; call qword ptr [rbp + 0x68]; 
0x000000000041ba87: mov edi, ebx; call qword ptr [rbp + 0x70]; 
0x000000000041705a: mov edi, ebx; call rax; 
0x0000000000424fc8: mov edi, ebx; mov eax, 0xca; syscall; 
0x0000000000418634: mov edi, ebx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041aaf5: mov edi, ebx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000041817e: mov edi, edi; call qword ptr [rbp + 0x38]; 
0x0000000000418d24: mov edi, edi; call rax; 
0x000000000042576c: mov edi, edi; mov eax, 0xca; syscall; 
0x000000000044f67a: mov edi, edi; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000044dd40: mov edi, edx; mov eax, esi; syscall; 
0x000000000044dd4f: mov edi, edx; mov eax, r8d; syscall; 
0x000000000048206f: mov edi, esi; bsr eax, eax; lea rax, qword ptr [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000041da8f: mov edi, esi; call qword ptr [rbx + 0x18]; 
0x000000000041235e: mov edi, esi; call qword ptr [rbx + 0x38]; 
0x0000000000411db6: mov edi, esi; call qword ptr [rcx + 0x38]; 
0x000000000045ee57: mov edi, esi; call rbx; 
0x0000000000411af0: mov edi, esi; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000453e91: mov edi, esi; mov qword ptr [rbp - 0x70], rsi; call 0x52080; mov rsi, qword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x000000000044f84f: mov edi, esi; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000411b9d: mov edi, esi; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000413ec0: mov edi, esp; call qword ptr [rax + 0x38]; 
0x00000000004749e0: mov edi, esp; call qword ptr [rbx + 0x38]; 
0x000000000041419b: mov edi, esp; call qword ptr [rcx + 0x38]; 
0x0000000000407b71: mov edi, esp; call rax; 
0x000000000045ee18: mov edi, esp; call rbx; 
0x0000000000407d55: mov edi, esp; call rcx; 
0x0000000000453ea1: mov edi, esp; call rsi; 
0x000000000044cc1a: mov edi, esp; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x00000000004743a6: mov edi, esp; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x0000000000415035: mov edi, esp; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004144a7: mov edi, esp; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004756c2: mov edi, esp; mov dword ptr [rbp - 0x508], r8d; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x00000000004246f7: mov edi, esp; mov eax, 0xca; syscall; 
0x000000000041527a: mov edi, esp; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000044cd70: mov edi, esp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000474222: mov edi, esp; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x00000000004139ad: mov edi, esp; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000473ced: mov edi, esp; sub rbx, r14; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000044e514: mov edi, r8d; mov qword ptr [rsp + 8], rax; call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000425efd: mov edx, 0; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048ca3d: mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000044341a: mov edx, 0; lea rax, qword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044c106: mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x00000000004025e1: mov edx, 0x3c; nop word ptr cs:[rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000000420eca: mov edx, 0x48000a98; lea eax, dword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000045045a: mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x000000000048f812: mov edx, 0x894830e8; or byte ptr [r8 + 2], r15b; ret; 
0x0000000000407a21: mov edx, 0xf000000; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000430459: mov edx, 0xf66bab2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044e2f9: mov edx, 0xffffffc0; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e531: mov edx, 0xffffffc0; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000045e8d3: mov edx, 0xffffffe0; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e7ff: mov edx, 0xffffffe0; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045563b: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000497837: mov edx, 0xffffffff; shl rdx, cl; or r8, rdx; mov qword ptr [rsi], r8; ret; 
0x0000000000470c80: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f4: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec60: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f818: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f753: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5b6: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4e7: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454740: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x000000000045462c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x000000000045450c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d354: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e14: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x000000000042414c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424114: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c3c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c04: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac4: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423620: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c70: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424308: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d6c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf6: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab4: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420590: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f046: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041eb46: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e2: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e498: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d2: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d132: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cdde: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x0000000000417884: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e3: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084ac: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408471: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040838d: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d1: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404dde: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df5: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dcc: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca1: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040120d: mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x000000000040137c: mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470dea: mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004242dd: mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004246ec: mov edx, 1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249de: mov edx, 1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425761: mov edx, 1; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a2: mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fbd: mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000041c179: mov edx, 1; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x000000000041f8f9: mov edx, 2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000045eada: mov edx, 8; mov eax, 0xd; syscall; 
0x000000000045ec7c: mov edx, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000041b461: mov edx, dword ptr [rbp + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000000499c35: mov edx, dword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000049a104: mov edx, dword ptr [rbp]; mov esi, 1; mov edi, 1; call rax; 
0x000000000048fead: mov edx, dword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000418630: mov edx, dword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041aaf1: mov edx, dword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x0000000000441cef: mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044041d: mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004508ea: mov edx, dword ptr [rcx + rdx]; lea rcx, qword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000411b99: mov edx, dword ptr [rdi + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000048fe35: mov edx, dword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000418d18: mov edx, dword ptr [rdi + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000048fe94: mov edx, dword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000417bf4: mov edx, dword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004903ef: mov edx, dword ptr [rip + 0x3cce3]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004025aa: mov edx, dword ptr [rip + 0xca738]; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000447f55: mov edx, dword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000447f75: mov edx, dword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000438a61: mov edx, dword ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000438980: mov edx, dword ptr [rsi + 1]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004387c1: mov edx, dword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438910: mov edx, dword ptr [rsi + 2]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000438751: mov edx, dword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004483e2: mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000447da2: mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004388a0: mov edx, dword ptr [rsi + 3]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004386e1: mov edx, dword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004483c3: mov edx, dword ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000447d93: mov edx, dword ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000438671: mov edx, dword ptr [rsi + 4]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448474: mov edx, dword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e04: mov edx, dword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000438601: mov edx, dword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448494: mov edx, dword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000447e14: mov edx, dword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000438591: mov edx, dword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448433: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000447de3: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x00000000004484b4: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000447e24: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000438521: mov edx, dword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448453: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000447df3: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000448414: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000447dd4: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000437fd1: mov edx, dword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437f51: mov edx, dword ptr [rsi - 0xb]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437ed1: mov edx, dword ptr [rsi - 0xc]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437e41: mov edx, dword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437db1: mov edx, dword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437d21: mov edx, dword ptr [rsi - 0xf]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432921: mov edx, dword ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000432b01: mov edx, dword ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000432ce0: mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432718: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004328f8: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ad8: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cb8: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432914: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432af4: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cd4: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432734: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ee0: mov edx, dword ptr [rsi - 5]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004330e0: mov edx, dword ptr [rsi - 6]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004332e0: mov edx, dword ptr [rsi - 7]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432555: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ea9: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330a9: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332a9: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432539: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ec5: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330c5: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332c5: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432571: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000438051: mov edx, dword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004483a0: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 3]; ret; 
0x00000000004489f0: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 3]; vzeroupper; ret; 
0x00000000004389f0: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x00000000004447c0: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; vzeroupper; ret; 
0x00000000004483f1: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, qword ptr [rdi + 7]; ret; 
0x0000000000438831: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000448381: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000447d51: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000048e856: mov edx, dword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d4: mov edx, dword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000455db8: mov edx, dword ptr [rsp + 0x68]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000499b39: mov edx, dword ptr [rsp]; mov edi, 1; call rax; 
0x0000000000474229: mov edx, eax; call qword ptr [rcx + 0x38]; 
0x0000000000407a2a: mov edx, eax; mov eax, 0xea; syscall; 
0x000000000040263c: mov edx, eax; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x000000000044eeeb: mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000494d70: mov edx, ebp; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000473cfa: mov edx, ebp; call qword ptr [rax + 0x38]; 
0x000000000044d509: mov edx, ebp; call rbx; 
0x000000000049c5f1: mov edx, ebp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000044cd68: mov edx, ebp; mov r9, qword ptr [rsp + 0x10]; mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000045f150: mov edx, ebp; mov rdi, r12; call rbx; 
0x000000000046dccc: mov edx, ebp; mov rsi, r12; call rax; 
0x000000000045ee2a: mov edx, ebp; mov rsi, r12; call rbx; 
0x0000000000494f0d: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x0000000000494db1: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000411db0: mov edx, ebp; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045ee51: mov edx, ebp; mov rsi, r12; mov rdi, r14; call rbx; 
0x000000000041b997: mov edx, ebp; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000045ee6c: mov edx, ebp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000000453506: mov edx, ebp; push 0; mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000045ee0a: mov edx, ebp; shr rax, 1; imul rax, rdi; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000044cc14: mov edx, ebp; xor r8d, r8d; mov rdi, r12; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x000000000044f1ea: mov edx, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x0000000000412021: mov edx, ebx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000413eba: mov edx, ebx; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000047534b: mov edx, ebx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000490375: mov edx, ecx; mov eax, 0x11; syscall; 
0x00000000004504d5: mov edx, ecx; mov eax, 0x19; syscall; 
0x000000000044f22f: mov edx, ecx; mov ecx, 9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000041502f: mov edx, ecx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004144a1: mov edx, ecx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004749da: mov edx, ecx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x00000000004743a0: mov edx, ecx; mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x00000000004756bc: mov edx, ecx; mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x508], r8d; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x00000000004139b3: mov edx, edi; call qword ptr [rax + 0x38]; 
0x0000000000414195: mov edx, edi; mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415274: mov edx, edi; mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000041ba81: mov edx, edi; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000044bc15: mov edx, edi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000047218a: mov edx, edx; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x0000000000411aea: mov edx, edx; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000407bd6: mov edx, esi; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000407cf9: mov edx, esi; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000407d4b: mov edx, esi; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407b6b: mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000044f065: mov edx, esi; xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000000483591: mov edx, esp; mov eax, 0x10; syscall; 
0x000000000044ee09: mov edx, esp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000412358: mov edx, esp; mov rsi, r9; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000041266a: mov edx, esp; mov rsi, r9; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044e3da: mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e450: mov edx, esp; mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e3d9: mov edx, r12d; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e44f: mov edx, r12d; mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407a29: mov edx, r8d; mov eax, 0xea; syscall; 
0x000000000044eeea: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000450608: mov es, word ptr [rbx]; add al, 0x11; ret; 
0x0000000000475b36: mov es, word ptr [rsi + 0x45ffffe3]; xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000044ee0b: mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000044c0bc: mov esi, 0x3ef00148; jmp rax; 
0x000000000049c5f3: mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000042619e: mov esi, 0x48000248; lea eax, dword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426dee: mov esi, 0x48000250; lea eax, dword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x000000000041f8fe: mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000478d9c: mov esi, 0x80; syscall; 
0x0000000000470c85: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f9: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec65: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f81d: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f758: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5bb: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4ec: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x0000000000454745: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454631: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454511: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d359: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e19: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424151: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424119: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c41: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c09: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac9: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x0000000000423625: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c75: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x000000000042430d: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d71: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cfb: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab9: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x0000000000420595: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f04b: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041f04b: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; ret; 
0x000000000041eb4b: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e7: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e49d: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d7: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d137: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cde3: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x000000000041cde3: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; ret; 
0x0000000000417889: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e8: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084b1: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408476: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x0000000000408392: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d6: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404de3: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403dfa: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dd1: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca6: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x0000000000401212: mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000401381: mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470def: mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004242e2: mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004246f1: mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249e3: mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425766: mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a7: mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fc2: mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000000460655: mov esi, 0x83480143; ret; 
0x0000000000408802: mov esi, 0x8348014b; ret; 
0x000000000047547e: mov esi, 0x89000008; ret 0xc083; 
0x0000000000499c38: mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000430159: mov esi, 0xf66beb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000460799: mov esi, 0xf98341d4; adc byte ptr [rbx - 0x6af06ec4], cl; ret 0x8941; 
0x00000000004986d3: mov esi, 0xfc0c7; add byte ptr [rax], al; syscall; 
0x0000000000478590: mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x0000000000418987: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x000000000041d51a: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000041e1d3: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x0000000000474f81: mov esi, 1; jmp rax; 
0x000000000049a107: mov esi, 1; mov edi, 1; call rax; 
0x0000000000417054: mov esi, 1; mov rdi, rbx; call rax; 
0x0000000000408335: mov esi, dword ptr [rax + 0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000049a14a: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e5: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x0000000000453e9d: mov esi, dword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x0000000000407bce: mov esi, dword ptr [rbp]; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000041862c: mov esi, dword ptr [rbx + 0x10]; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x0000000000411b95: mov esi, dword ptr [rdi + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000048f121: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x0000000000493b91: mov esi, dword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x95930; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000493acd: mov esi, dword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x95a30; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000044f844: mov esi, dword ptr [rdx]; mov rdi, qword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000043b810: mov esi, dword ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000044af77: mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x000000000043b7fe: mov esi, dword ptr [rsi]; mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000044af68: mov esi, dword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000043b7eb: mov esi, dword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000044e59d: mov esi, dword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000044e4fd: mov esi, dword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x00000000004025b5: mov esi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000041db9e: mov esi, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000045f14b: mov esi, dword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000000424af9: mov esi, dword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x000000000044cd73: mov esi, dword ptr [rsp + 0x18]; call rbx; 
0x000000000044d501: mov esi, dword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000424591: mov esi, dword ptr [rsp + 0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000045350e: mov esi, dword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000425311: mov esi, dword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x00000000004570d1: mov esi, dword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000456ec1: mov esi, dword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000458297: mov esi, dword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000458afd: mov esi, dword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000457818: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000459725: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000456558: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x00000000004568e6: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045588f: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000456332: mov esi, dword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045a384: mov esi, dword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x0000000000456051: mov esi, dword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x0000000000455dbd: mov esi, dword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000041d631: mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000450989: mov esi, eax; call 0x50920; add rsp, 0x10; pop rbp; ret; 
0x000000000045ec82: mov esi, eax; mov eax, 0xe; syscall; 
0x0000000000401d52: mov esi, eax; mov edi, 0x49e0bd; mov eax, 0; call 0x8e70; leave; ret; 
0x0000000000401c20: mov esi, eax; mov edi, 0x4cbb10; jmp rdx; 
0x0000000000407a27: mov esi, eax; mov edx, r8d; mov eax, 0xea; syscall; 
0x0000000000413ebd: mov esi, eax; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x0000000000407d4e: mov esi, ebp; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000044e3dd: mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e453: mov esi, ebp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407b6e: mov esi, ebp; mov rdi, r12; call rax; 
0x00000000004139aa: mov esi, ebp; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000041817b: mov esi, ebp; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x00000000004082fc: mov esi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000048cbb6: mov esi, ebp; syscall; 
0x000000000041a501: mov esi, ebx; mov edi, 2; mov eax, r9d; syscall; 
0x000000000047421f: mov esi, ebx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000044eeee: mov esi, ecx; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407a47: mov esi, ecx; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000047534e: mov esi, ecx; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004749dd: mov esi, ecx; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x00000000004743a3: mov esi, ecx; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x00000000004756bf: mov esi, ecx; mov rdi, r12; mov dword ptr [rbp - 0x508], r8d; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x000000000041235b: mov esi, ecx; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000041266d: mov esi, ecx; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044f069: mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000049a49a: mov esi, edi; mov edi, 1; jmp rax; 
0x000000000045ee6f: mov esi, edi; mov rdi, r12; call rbx; 
0x0000000000411aed: mov esi, edi; mov rdi, r14; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x000000000040263e: mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000000414198: mov esi, edx; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415032: mov esi, edx; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004144a4: mov esi, edx; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x0000000000415277: mov esi, edx; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000047218d: mov esi, esi; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x000000000041b99a: mov esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000041ba84: mov esi, esi; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000046dccf: mov esi, esp; call rax; 
0x000000000045ee2d: mov esi, esp; call rbx; 
0x0000000000494f10: mov esi, esp; mov edi, ebp; call qword ptr [rax]; 
0x0000000000494db4: mov esi, esp; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000494d76: mov esi, esp; mov edi, ebp; call rax; 
0x0000000000482ed1: mov esi, esp; mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000000411db3: mov esi, esp; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045ee54: mov esi, esp; mov rdi, r14; call rbx; 
0x0000000000478380: mov esi, esp; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000047837f: mov esi, r12d; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000042e5d1: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000042e601: mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000042e5f1: mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x0000000000429bfe: mov esp, 0x44b60ff9; cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000004439c2: mov esp, 0x48d231c0; lea eax, dword ptr [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004439e2: mov esp, 0x48d231c0; lea eax, dword ptr [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000443a20: mov esp, 0x48d231c0; lea eax, dword ptr [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004439a2: mov esp, 0x48d231c0; lea eax, dword ptr [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000430354: mov esp, 0x4e6f0ff3; mov esp, 0xf66bcb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000402aed: mov esp, 0x90005; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000443418: mov esp, 0xbac0; add byte ptr [rax], al; lea rax, qword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000417a06: mov esp, 0xbad23145; add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000044dcb2: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444132: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb02: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x0000000000444112: mov esp, 0xc08348c0; and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042eaf2: mov esp, 0xc08348c0; and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x0000000000443ab5: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x0000000000443dc3: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000044d928: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x0000000000430359: mov esp, 0xf66bcb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042e6cb: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x0000000000482d17: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444047: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb97: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x000000000042e5e1: mov esp, 0xf80148c0; ret; 
0x000000000044dc72: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444102: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x000000000042eae2: mov esp, 0xf80148c0; vzeroupper; ret; 
0x000000000044f0e7: mov esp, 0xffffffff; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000049a142: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000048f12b: mov esp, eax; mov rbp, r9; jmp rdx; 
0x000000000049a1f1: mov esp, ecx; ret; 
0x0000000000452d62: mov gs, word ptr [rdx - 0x1f7cfff9]; mov dword ptr [rbx + 0x58910c8], 0x7aa82; pop rbx; ret; 
0x000000000048eff1: mov qword ptr [r12], 0; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x00000000004795c1: mov qword ptr [r12], r14; pop r12; pop r13; pop r14; ret; 
0x000000000049a812: mov qword ptr [r12], r8; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000048f76d: mov qword ptr [r8], rax; mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000048f78a: mov qword ptr [r8], rax; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000043b7f4: mov qword ptr [r9 - 8], rcx; ret; 
0x00000000004508f4: mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000478c5c: mov qword ptr [rax + 0x10], rcx; mov r8, rcx; lea rdx, qword ptr [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000478c98: mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000477fbc: mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000477ff9: mov qword ptr [rax + 0x10], rsi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x00000000004785cb: mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000420666: mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x00000000004785c7: mov qword ptr [rax + 0x28], rdx; mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000477ffd: mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x0000000000477fc0: mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000478c9c: mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000047864d: mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x0000000000478645: mov qword ptr [rax + 0x50], 0; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000041df38: mov qword ptr [rax + 8], 0; ret; 
0x0000000000477fb1: mov qword ptr [rax + 8], rcx; mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000477ff5: mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x10], rsi; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x00000000004508f8: mov qword ptr [rax + 8], rdx; ret; 
0x000000000041df31: mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000048fe8c: mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000478754: mov qword ptr [rax], rcx; mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048ed1e: mov qword ptr [rax], rcx; pop rbp; ret; 
0x000000000048fe44: mov qword ptr [rax], rdi; pop rbx; ret; 
0x000000000048fdb0: mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000477fb9: mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000048fe38: mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000478001: mov qword ptr [rax], rdx; ret; 
0x0000000000478c67: mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000473e03: mov qword ptr [rbp - 0x4d8], 0; mov dword ptr [rbp - 0x500], 0x20; jmp rax; 
0x00000000004749d2: mov qword ptr [rbp - 0x4e0], rcx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x0000000000474398: mov qword ptr [rbp - 0x4e0], rcx; mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x0000000000413ad6: mov qword ptr [rbp - 0x4e8], 0; mov byte ptr [rbp - 0x508], 0x20; jmp rax; 
0x0000000000415027: mov qword ptr [rbp - 0x4f0], rcx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x0000000000414499: mov qword ptr [rbp - 0x4f0], rcx; mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004756cb: mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x000000000044f84a: mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000041527c: mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x0000000000453e93: mov qword ptr [rbp - 0x70], rsi; call 0x52080; mov rsi, qword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x0000000000489ef7: mov qword ptr [rbp - 0xd8], r11; call rax; 
0x000000000041ebce: mov qword ptr [rbp], rax; mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000478e8d: mov qword ptr [rbp], rax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000045ca46: mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000041a77a: mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000048ebf1: mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000041af72: mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000041a772: mov qword ptr [rbx + 0x18], rax; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000048e8a6: mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000493ad8: mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x00000000004770e0: mov qword ptr [rbx + 0x18], rdi; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000493b9c: mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000041d554: mov qword ptr [rbx + 0x20], rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041d969: mov qword ptr [rbx + 0x40], r12; mov dword ptr [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000041d5c4: mov qword ptr [rbx + 0x50], 0; pop rbx; ret; 
0x000000000041ebd2: mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041a70e: mov qword ptr [rbx + 0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041bc76: mov qword ptr [rbx + 0x90], rax; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000041af67: mov qword ptr [rbx + 0x90], rsi; mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x0000000000499ad3: mov qword ptr [rbx + 0x98], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e038: mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000049a072: mov qword ptr [rbx + 8], rax; add rsp, 0x278; mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000041a776: mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; mov rax, rbx; pop rbx; ret; 
0x000000000041af6e: mov qword ptr [rbx + 8], rax; mov qword ptr [rbx + 0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000048c3de: mov qword ptr [rbx + 8], rax; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000453746: mov qword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e031: mov qword ptr [rbx], 0; mov qword ptr [rbx + 8], 0; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000048cde7: mov qword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x000000000048fbc8: mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000420532: mov qword ptr [rbx], r12; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000470ad5: mov qword ptr [rbx], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000049c22b: mov qword ptr [rbx], r8; pop rbx; ret; 
0x00000000004906cd: mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000049010d: mov qword ptr [rbx], rax; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000426020: mov qword ptr [rbx], rax; mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x00000000004956dc: mov qword ptr [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000040918c: mov qword ptr [rbx], rdx; mov byte ptr [rax], bpl; pop rbx; pop rbp; pop r12; ret; 
0x0000000000425e83: mov qword ptr [rbx], rdx; xor eax, eax; pop rbx; ret; 
0x000000000041e01e: mov qword ptr [rcx + 0x50], 0; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041e026: mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000046bddc: mov qword ptr [rcx + rdx*8], rax; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000000499ec8: mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x000000000045e8cb: mov qword ptr [rcx], rdx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e7fb: mov qword ptr [rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000467c0e: mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000041d4ce: mov qword ptr [rdi + 0x10], rax; mov qword ptr [rdi + 0x18], rcx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004485bc: mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485dc: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f1c: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447efc: mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000044861f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, qword ptr [rdi + 0x1a]; ret; 
0x0000000000447f5f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x000000000044863f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000447f7f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000448600: mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f40: mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x000000000041d4a6: mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041d4d2: mov qword ptr [rdi + 0x18], rcx; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041ecd5: mov qword ptr [rdi + 0x18], rdx; mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041ed1b: mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000045093e: mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000450950: mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000048880c: mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887da: mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000041d4a2: mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041d4d6: mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041d49a: mov qword ptr [rdi + 0x58], rax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041fe48: mov qword ptr [rdi + 0x60], rcx; ret; 
0x0000000000499f00: mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000041df63: mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041df6e: mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000417bec: mov qword ptr [rdi + 0xd8], rdx; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000044857c: mov qword ptr [rdi + 0xe], rcx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447ebc: mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000044859c: mov qword ptr [rdi + 0xf], rcx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447edc: mov qword ptr [rdi + 0xf], rcx; ret; 
0x00000000004387c7: mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438757: mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004386e7: mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438677: mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000044847a: mov qword ptr [rdi + 5], rdx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000438607: mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447e0a: mov qword ptr [rdi + 5], rdx; ret; 
0x000000000044849a: mov qword ptr [rdi + 6], rdx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000438597: mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447e1a: mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004484ba: mov qword ptr [rdi + 7], rdx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000438527: mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000447e2a: mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000468e3f: mov qword ptr [rdi + 8], r10; mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000000467957: mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000467c07: mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000467b97: mov qword ptr [rdi + 8], r9; ret; 
0x000000000048f889: mov qword ptr [rdi + 8], rax; mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000048f815: mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x000000000041d4aa: mov qword ptr [rdi + 8], rax; ret; 
0x000000000041ecdf: mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000048f842: mov qword ptr [rdi + 8], rsi; mov eax, 0xffffbfd1; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000046811c: mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000000448a2b: mov qword ptr [rdi + rdx - 7], r9; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447eb: mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000044bcee: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rcx; ret; 
0x000000000044be6d: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000044af6a: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000499eba: mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x0000000000432404: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432442: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000467afe: mov qword ptr [rdi - 0x10], r9; ret; 
0x00000000004325b7: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b3: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325ff: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432787: mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432967: mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432b57: mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432d28: mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432f28: mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433128: mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432400: mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043243e: mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004325b3: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326af: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325fb: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432783: mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432963: mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432b53: mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432d24: mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432f24: mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433124: mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004323fc: mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043243a: mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004325af: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326ab: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325f7: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043277f: mov qword ptr [rdi - 0x22], r9; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043295f: mov qword ptr [rdi - 0x23], r9; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432b4f: mov qword ptr [rdi - 0x24], r9; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432d20: mov qword ptr [rdi - 0x25], r9; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432f20: mov qword ptr [rdi - 0x26], r9; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433120: mov qword ptr [rdi - 0x27], r9; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004323f8: mov qword ptr [rdi - 0x28], r8; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432436: mov qword ptr [rdi - 0x28], r8; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043278b: mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437fd7: mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043296b: mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437f57: mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432b5b: mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437ed7: mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432d2c: mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437e48: mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432f2c: mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437db8: mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043312c: mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437d28: mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000467af7: mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000467a7d: mov qword ptr [rdi - 8], r9; ret; 
0x0000000000432408: mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432446: mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004325bb: mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b7: mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000432603: mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000438057: mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000467af0: mov qword ptr [rdi], r11; shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000467c00: mov qword ptr [rdi], r11; shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000467a77: mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000467b91: mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000467a4c: mov qword ptr [rdi], r9; ret; 
0x000000000048c59b: mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x0000000000448406: mov qword ptr [rdi], rcx; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000448436: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000447de6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000448456: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000447df6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000448477: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e07: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000448497: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000447e17: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004484b7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000447e27: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000448a28: mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447e8: mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000448417: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000447dd7: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000043852b: mov qword ptr [rdi], rcx; ret; 
0x000000000044be72: mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x00000000004483f3: mov qword ptr [rdi], rdx; lea rax, qword ptr [rdi + 7]; ret; 
0x0000000000438833: mov qword ptr [rdi], rdx; ret; 
0x000000000048f6d5: mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000043b7f1: mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000044af6f: mov qword ptr [rdi], rsi; ret; 
0x000000000042065e: mov qword ptr [rdx + 0x28], rcx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000041a80c: mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000417bfa: mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000044798a: mov qword ptr [rdx + 5], rax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x000000000044617a: mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x00000000004479aa: mov qword ptr [rdx + 6], rax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x000000000044619a: mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x00000000004479ca: mov qword ptr [rdx + 7], rax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x00000000004461ba: mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x000000000044785a: mov qword ptr [rdx + 8], rax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460aa: mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000447803: mov qword ptr [rdx], rax; lea rax, qword ptr [rdx + 7]; ret; 
0x0000000000447903: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, qword ptr [rdx + 8]; ret; 
0x0000000000446133: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000447923: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, qword ptr [rdx + 9]; ret; 
0x0000000000446143: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000447943: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, qword ptr [rdx + 0xa]; ret; 
0x0000000000446153: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000447963: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, qword ptr [rdx + 0xb]; ret; 
0x0000000000446163: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000447983: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446173: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x00000000004479a3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x0000000000446193: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x00000000004479c3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x00000000004461b3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000447853: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460a3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000446053: mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000048feb0: mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000041ec38: mov qword ptr [rdx], rax; ret; 
0x000000000047831b: mov qword ptr [rdx], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044f564: mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x000000000049cf50: mov qword ptr [rip + 0x2ffbd], 0; add rsp, 8; ret; 
0x000000000049cb4b: mov qword ptr [rip + 0x302a2], 0; add rsp, 8; ret; 
0x000000000049bdb5: mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bd01: mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000048f907: mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x000000000048f8f0: mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x000000000048e730: mov qword ptr [rip + 0x3e865], 0; add rsp, 8; ret; 
0x000000000048c438: mov qword ptr [rip + 0x40ed1], rax; ret; 
0x00000000004504ac: mov qword ptr [rip + 0x7abdd], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000042440f: mov qword ptr [rip + 0xa636a], rax; ret; 
0x0000000000424401: mov qword ptr [rip + 0xa6380], rax; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x00000000004243b6: mov qword ptr [rip + 0xa88eb], rdx; mov dword ptr [rip + 0xa88d9], 0; ret; 
0x0000000000420ed5: mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420ec7: mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041fa47: mov qword ptr [rip + 0xaad1a], rax; ret; 
0x000000000041fa30: mov qword ptr [rip + 0xaad29], rax; ret; 
0x000000000041fa16: mov qword ptr [rip + 0xaad33], rdx; ret; 
0x000000000041f9d7: mov qword ptr [rip + 0xaad3a], rax; ret; 
0x000000000041f9b1: mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f9c7: mov qword ptr [rip + 0xaad52], rax; ret; 
0x000000000041f981: mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f930: mov qword ptr [rip + 0xaadd9], rax; mov dword ptr [rip + 0xaadf3], 1; ret; 
0x0000000000420eb9: mov qword ptr [rip + 0xabdb8], rax; lea rax, qword ptr [rip + 0x3029]; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041fa74: mov qword ptr [rip + 0xad23d], rax; ret; 
0x000000000041f06f: mov qword ptr [rip + 0xadbbe], 0; ret; 
0x000000000041efcf: mov qword ptr [rip + 0xadc62], rbx; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x0000000000401f6d: mov qword ptr [rip + 0xcae2c], rax; add rsp, 0x88; pop rbx; ret; 
0x0000000000402b9d: mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000049bd08: mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x0000000000402b91: mov qword ptr [rsi + 8], rax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000497843: mov qword ptr [rsi], r8; ret; 
0x000000000048c5a5: mov qword ptr [rsi], rax; ret; 
0x000000000045e7f0: mov qword ptr [rsi], rcx; mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000048b96b: mov qword ptr [rsi], rdi; pop rbx; ret; 
0x0000000000402b9a: mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000044f680: mov qword ptr [rsp + 0x10], rbx; call rax; 
0x00000000004225d5: mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000042256f: mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rax; call rsi; 
0x00000000004225d0: mov qword ptr [rsp + 0x18], r10; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048b627: mov qword ptr [rsp + 0x18], rax; call 0x8af50; add rsp, 0xd8; ret; 
0x0000000000483589: mov qword ptr [rsp + 0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000044e517: mov qword ptr [rsp + 8], rax; call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000422574: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rax; call rsi; 
0x0000000000418d1e: mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000046bc1c: mov qword ptr [rsp - 0x10], rdx; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x0000000000468ed6: mov qword ptr [rsp - 0x18], rax; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000422579: mov qword ptr [rsp], rax; call rsi; 
0x000000000041b467: mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000044f67c: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000048eff0: mov qword ptr fs:[r12], 0; mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x0000000000420531: mov qword ptr fs:[rbx], r12; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000045e8ca: mov qword ptr fs:[rcx], rdx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e7fa: mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e805: mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e7ef: mov qword ptr fs:[rsi], rcx; mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044af69: mov qword ptr ss:[rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000402b9c: mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x0000000000490374: mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000004504d4: mov r10, rcx; mov eax, 0x19; syscall; 
0x000000000044f064: mov r10, rsi; xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000045ead9: mov r10d, 8; mov eax, 0xd; syscall; 
0x000000000045ec7b: mov r10d, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000044f1e9: mov r10d, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x000000000044f22e: mov r10d, ecx; mov ecx, 9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000000432550: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432534: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000048e850: mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7ce: mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000000044f0e6: mov r12, -1; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000049a141: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a145: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e0: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x0000000000473cf2: mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000049a149: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e4: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000048f120: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000049bcf7: mov r14b, 0xff; mov rax, qword ptr [rip + 0x315ef]; mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x00000000004139a2: mov r15, qword ptr [rbp - 0x4d0]; mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000049a14d: mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049a1e8: mov r15, qword ptr [rbp - 8]; mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000048f124: mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000044f84e: mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000049c228: mov r8, qword ptr [r8]; mov qword ptr [rbx], r8; pop rbx; ret; 
0x000000000049c308: mov r8, qword ptr [rax]; add rax, 8; mov qword ptr [rbx], r8; pop rbx; ret; 
0x000000000048c52d: mov r8, qword ptr [rip + 0x40ddc]; mov rax, r8; ret; 
0x0000000000499c2e: mov r8, rbp; mov rcx, r13; mov rdx, qword ptr [r13]; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000499b2f: mov r8, rbx; mov rcx, r12; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x000000000049a0fd: mov r8, rbx; mov rcx, r13; mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x0000000000478c60: mov r8, rcx; lea rdx, qword ptr [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000420268: mov r8, rdi; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000000045ec78: mov r8, rsi; mov r10d, 8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000044f84c: mov r8b, 0x45; mov edi, esi; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000492e67: mov r8b, 0xe8; ret 0xf6e1; 
0x000000000048a814: mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000044e455: mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e5a1: mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000044e501: mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x0000000000448a23: mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447e3: mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000044cd6a: mov r9, qword ptr [rsp + 0x10]; mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x00000000004570cb: mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045ad95: mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000456b7f: mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x0000000000456552: mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x000000000045632c: mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045604b: mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x0000000000458291: mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x000000000045971f: mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000458af7: mov r9, qword ptr [rsp + 0x38]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000045350a: mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000470f40: mov r9, rax; pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x000000000045e834: mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000045e854: mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000045e874: mov rax, -0x20; add rax, qword ptr fs:[0]; ret; 
0x000000000044e310: mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f208: mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000483688: mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000425107: mov rax, -0x40; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000004830d8: mov rax, -0x40; mov dword ptr fs:[rax], 2; xor eax, eax; ret; 
0x000000000048ce04: mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x0000000000422cf8: mov rax, -0x40; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000045e814: mov rax, -0x50; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000041e0f4: mov rax, -1; ret; 
0x000000000045ea10: mov rax, 0xf; syscall; 
0x0000000000482c50: mov rax, 1; ret; 
0x0000000000482c60: mov rax, 2; ret; 
0x0000000000482c70: mov rax, 3; ret; 
0x0000000000482c80: mov rax, 4; ret; 
0x0000000000482c90: mov rax, 5; ret; 
0x0000000000482ca0: mov rax, 6; ret; 
0x0000000000482cb0: mov rax, 7; ret; 
0x0000000000491b1b: mov rax, qword ptr [r12]; pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x0000000000408318: mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000419414: mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000045e8ce: mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000478589: mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x000000000041940d: mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000494d6b: mov rax, qword ptr [rax + 8]; mov rdx, r13; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x000000000048e744: mov rax, qword ptr [rax + 8]; ret; 
0x000000000048e754: mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000045e822: mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000499e60: mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x000000000045e81f: mov rax, qword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000044f851: mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000048fe88: mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000048fe40: mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x000000000048fe30: mov rax, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000041d610: mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000041d62d: mov rax, qword ptr [rbx + 0x18]; mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000041b165: mov rax, qword ptr [rbx + 0x20]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000041d810: mov rax, qword ptr [rbx + 0x28]; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000046dcb9: mov rax, qword ptr [rbx + 0x38]; mov dword ptr [rbp - 0xf0], r9d; mov rdi, qword ptr [rbp - 0xd0]; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000041db6c: mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000041dd9e: mov rax, qword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000004504a9: mov rax, qword ptr [rbx]; mov qword ptr [rip + 0x7abdd], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000447986: mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446176: mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x00000000004479a6: mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x0000000000446196: mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x00000000004479c6: mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x00000000004461b6: mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000447856: mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460a6: mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000425818: mov rax, qword ptr [rcx + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000414678: mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d31: mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000447800: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, qword ptr [rdx + 7]; ret; 
0x0000000000447900: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, qword ptr [rdx + 8]; ret; 
0x0000000000446130: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000447920: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, qword ptr [rdx + 9]; ret; 
0x0000000000446140: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000447940: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, qword ptr [rdx + 0xa]; ret; 
0x0000000000446150: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000447960: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, qword ptr [rdx + 0xb]; ret; 
0x0000000000446160: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000447980: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, qword ptr [rdx + 0xc]; ret; 
0x0000000000446170: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x00000000004479a0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, qword ptr [rdx + 0xd]; ret; 
0x0000000000446190: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x00000000004479c0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, qword ptr [rdx + 0xe]; ret; 
0x00000000004461b0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000447850: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, qword ptr [rdx + 0xf]; ret; 
0x00000000004460a0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000446050: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000041f874: mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000420662: mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000041d49e: mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041ef84: mov rax, qword ptr [rdi + 0x68]; ret; 
0x0000000000499e70: mov rax, qword ptr [rdi + 0x90]; ret; 
0x0000000000499ed0: mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000499f10: mov rax, qword ptr [rdi + 0xa0]; ret; 
0x0000000000499f70: mov rax, qword ptr [rdi + 0xa8]; ret; 
0x0000000000499f60: mov rax, qword ptr [rdi + 0xb0]; ret; 
0x0000000000499f20: mov rax, qword ptr [rdi + 0xb8]; ret; 
0x0000000000499ee0: mov rax, qword ptr [rdi + 0xc0]; shr rax, 0x3f; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000414721: mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000041f9a4: mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xaad83], 1; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f974: mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xaadb3], 1; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f954: mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xaadd3], 1; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f994: mov rax, qword ptr [rdi]; mov dword ptr [rip + 0xad317], eax; ret; 
0x000000000041ec35: mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x000000000041fa44: mov rax, qword ptr [rdi]; mov qword ptr [rip + 0xaad1a], rax; ret; 
0x000000000041f9d4: mov rax, qword ptr [rdi]; mov qword ptr [rip + 0xaad3a], rax; ret; 
0x000000000041f9c4: mov rax, qword ptr [rdi]; mov qword ptr [rip + 0xaad52], rax; ret; 
0x000000000048ca39: mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000049aa0b: mov rax, qword ptr [rdx]; add rsp, 8; ret; 
0x000000000049bdae: mov rax, qword ptr [rip + 0x3153b]; mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bcfa: mov rax, qword ptr [rip + 0x315ef]; mov qword ptr [rip + 0x315e8], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000048c594: mov rax, qword ptr [rip + 0x3db55]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x000000000048c59e: mov rax, qword ptr [rip + 0x40d63]; mov qword ptr [rsi], rax; ret; 
0x000000000045c214: mov rax, qword ptr [rip + 0x70bd5]; ret; 
0x00000000004536e4: mov rax, qword ptr [rip + 0x7a1bd]; ret; 
0x000000000041fdf3: mov rax, qword ptr [rip + 0xaa93e]; mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000041ef64: mov rax, qword ptr [rip + 0xab1b5]; ret; 
0x00000000004784f1: mov rax, qword ptr [rsi + 0xe0]; call qword ptr [rax + 0x68]; 
0x0000000000474f7d: mov rax, qword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x0000000000474058: mov rax, qword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x000000000049aa50: mov rax, qword ptr [rsi]; add rsp, 8; ret; 
0x0000000000499f45: mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x00000000004568ef: mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000048eff9: mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x00000000004025b9: mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000044f66f: mov rax, qword ptr [rsp + 0x18]; mov dword ptr [rsp + 0xc], r8d; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000045972e: mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000455898: mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000045633b: mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000048c655: mov rax, qword ptr [rsp + 8]; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000044e521: mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000407bd8: mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000418982: mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000407b65: mov rax, qword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000407cfb: mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000045e81e: mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000478a05: mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x0000000000478ea8: mov rax, r12; pop r12; pop r13; ret; 
0x0000000000403068: mov rax, r12; pop r12; ret; 
0x000000000044f368: mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000041dc24: mov rax, r12; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000042008a: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000044f0f1: mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000403256: mov rax, r12; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402fca: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000493cd8: mov rax, r12; sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000490915: mov rax, r13; pop r12; pop r13; ret; 
0x0000000000417ccd: mov rax, r13; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000044f7b8: mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x000000000044f7a3: mov rax, r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408589: mov rax, r8; add qword ptr [rip + 0xc51c4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048b968: mov rax, r8; mov qword ptr [rsi], rdi; pop rbx; ret; 
0x00000000004247f2: mov rax, r8; pop r12; pop r13; ret; 
0x000000000042026d: mov rax, r8; pop r12; ret; 
0x0000000000424856: mov rax, r8; pop r13; ret; 
0x00000000004832d1: mov rax, r8; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000417f58: mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000417b14: mov rax, r8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000417fc0: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x00000000004085fb: mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000048b954: mov rax, r8; pop rbx; ret; 
0x00000000004085f0: mov rax, r8; ret; 
0x000000000044db93: mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x0000000000444340: mov rax, r8; vzeroupper; ret; 
0x0000000000406be5: mov rax, r9; pop r12; ret; 
0x0000000000470f47: mov rax, r9; pop r14; ret; 
0x0000000000470e96: mov rax, r9; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000406bb7: mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x000000000041bc7d: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000048c3e2: mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041c0b8: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000049a07d: mov rax, rbx; pop rbx; pop rbp; ret; 
0x000000000041a77e: mov rax, rbx; pop rbx; ret; 
0x000000000041ef94: mov rax, rdi; ret; 
0x000000000044c1c0: mov rax, rdx; pop rbx; ret; 
0x0000000000444a18: mov rax, rdx; ret; 
0x000000000049a1ec: mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x000000000048f12d: mov rbp, r9; jmp rdx; 
0x000000000044e6a5: mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000048cbb2: mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000045e7f3: mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044e254: mov rcx, -0x40; neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000000477fb5: mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000043b7ed: mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000499ad0: mov rcx, qword ptr [rcx]; mov qword ptr [rbx + 0x98], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004485b4: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485d4: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f14: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef4: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000448574: mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447eb4: mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000448594: mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447ed4: mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000044af62: mov rcx, qword ptr [rsi + rdx - 8]; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x00000000004328f4: mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432910: mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ad4: mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432af0: mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cb4: mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cd0: mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ea4: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ec0: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330a4: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330c0: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332a4: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332c0: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000437e44: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437db4: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437d24: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432714: mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432730: mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000448400: mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000447dc0: mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000448410: mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000447dd0: mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000448430: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000447de0: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000448450: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000447df0: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x00000000004387c4: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438754: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004386e4: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438674: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438604: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438594: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438524: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004447e0: mov rcx, qword ptr [rsi]; mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000448470: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e00: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000448490: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000447e10: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004484b0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000447e20: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000048ef9c: mov rcx, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000044d682: mov rcx, qword ptr [rsp + 0x20]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000456ebb: mov rcx, qword ptr [rsp + 0x28]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045aa24: mov rcx, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000048e85a: mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d8: mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000407d45: mov rcx, qword ptr [rsp + 8]; mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x000000000043b7ec: mov rcx, qword ptr ss:[rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000044d505: mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000499b32: mov rcx, r12; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000499c31: mov rcx, r13; mov rdx, qword ptr [r13]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000049a100: mov rcx, r13; mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x000000000041ed15: mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000041ecd9: mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000044bc0d: mov rcx, rdx; movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000044af45: mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044ca44: mov rdi, qword ptr [r12 + 0x10]; push 1; push 0; lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000044c9d6: mov rdi, qword ptr [r12 + 0x10]; push 1; xor edx, edx; push 1; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x0000000000407bd1: mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x000000000048239b: mov rdi, qword ptr [r12]; push 0; lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000044f846: mov rdi, qword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000472182: mov rdi, qword ptr [rbp - 0x8c8]; mov rdx, r10; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x000000000046dcc4: mov rdi, qword ptr [rbp - 0xd0]; mov rdx, r13; mov rsi, r12; call rax; 
0x000000000044f44f: mov rdi, qword ptr [rbp]; call rbx; 
0x0000000000493b94: mov rdi, qword ptr [rdi]; call 0x95930; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000493ad0: mov rdi, qword ptr [rdi]; call 0x95a30; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000049a5ad: mov rdi, qword ptr [rdx + 8]; sbb ecx, ecx; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x000000000048effe: mov rdi, qword ptr [rsp + 0x18]; call rax; 
0x000000000048efa1: mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000045829b: mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000458b01: mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x00000000004570d5: mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000456ec5: mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000459729: mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000045a388: mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x000000000045655c: mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x00000000004568ea: mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000455893: mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000456336: mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x0000000000456055: mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x0000000000455dc1: mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000041dba2: mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000045ee24: mov rdi, qword ptr [rsp + 8]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000000421408: mov rdi, qword ptr [rsp + 8]; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000041d635: mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000413ebf: mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004749df: mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x000000000041419a: mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000407b70: mov rdi, r12; call rax; 
0x000000000045ee17: mov rdi, r12; call rbx; 
0x0000000000407d54: mov rdi, r12; call rcx; 
0x0000000000453ea0: mov rdi, r12; call rsi; 
0x000000000044cc19: mov rdi, r12; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x00000000004743a5: mov rdi, r12; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x0000000000415034: mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004144a6: mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004756c1: mov rdi, r12; mov dword ptr [rbp - 0x508], r8d; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x00000000004246f6: mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000000415279: mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000044cd6f: mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000474221: mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x00000000004139ac: mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000473cec: mov rdi, r12; sub rbx, r14; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000049c5f8: mov rdi, r13; call rbx; 
0x00000000004249e8: mov rdi, r13; mov eax, 0xca; syscall; 
0x000000000041da8e: mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000041235d: mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000411db5: mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045ee56: mov rdi, r14; call rbx; 
0x0000000000411aef: mov rdi, r14; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000411b9c: mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000041817d: mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x0000000000418d23: mov rdi, r15; call rax; 
0x000000000042576b: mov rdi, r15; mov eax, 0xca; syscall; 
0x000000000044f679: mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x000000000048fbc0: mov rdi, r8; call 0x24a70; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000407a1d: mov rdi, rax; mov eax, 0xba; syscall; 
0x000000000041898c: mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x00000000004176db: mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x000000000041b99c: mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000041b46b: mov rdi, rbp; call rax; 
0x000000000044e6a8: mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000004218ac: mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000044f1ec: mov rdi, rbp; mov eax, 9; syscall; 
0x0000000000478551: mov rdi, rbp; mov ecx, 1; call 0x78010; mov eax, 1; pop rbp; ret; 
0x000000000044f365: mov rdi, rbp; mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000044d687: mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000450985: mov rdi, rbp; mov rsi, r8; call 0x50920; add rsp, 0x10; pop rbp; ret; 
0x0000000000419409: mov rdi, rbp; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000478383: mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000041b1de: mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000041b16d: mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000041d51f: mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x000000000041d9f0: mov rdi, rbx; call qword ptr [rbp + 0x20]; 
0x000000000041e140: mov rdi, rbx; call qword ptr [rbp + 0x30]; 
0x000000000041c17e: mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000417980: mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x000000000041d93a: mov rdi, rbx; call qword ptr [rbp + 0x68]; 
0x000000000041ba86: mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x0000000000417059: mov rdi, rbx; call rax; 
0x0000000000424fc7: mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000000418633: mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041aaf4: mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x000000000048206e: mov rdi, rsi; bsr eax, eax; lea rax, qword ptr [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000453e90: mov rdi, rsi; mov qword ptr [rbp - 0x70], rsi; call 0x52080; mov rsi, qword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x000000000045e8d2: mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045e7fe: mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000044e2f8: mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e530: mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000497836: mov rdx, -1; shl rdx, cl; or r8, rdx; mov qword ptr [rsi], r8; ret; 
0x0000000000499b38: mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000499c34: mov rdx, qword ptr [r13]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000049a103: mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x0000000000411b98: mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000418d17: mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000041b460: mov rdx, qword ptr [rbp + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000048feac: mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000041862f: mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041aaf0: mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004508e9: mov rdx, qword ptr [rcx + rdx]; lea rcx, qword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000048fe34: mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000048fe93: mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000417bf3: mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004903ee: mov rdx, qword ptr [rip + 0x3cce3]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004025a9: mov rdx, qword ptr [rip + 0xca738]; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000447f54: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000447f74: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004387c0: mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438750: mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004386e0: mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438670: mov rdx, qword ptr [rsi + 4]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448473: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e03: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000438600: mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448493: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000447e13: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000438590: mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004484b3: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000447e23: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000438520: mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000437fd0: mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437f50: mov rdx, qword ptr [rsi - 0xb]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437ed0: mov rdx, qword ptr [rsi - 0xc]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437e40: mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437db0: mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437d20: mov rdx, qword ptr [rsi - 0xf]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432554: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ea8: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330a8: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332a8: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432538: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ec4: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330c4: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332c4: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432570: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000438050: mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004483f0: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, qword ptr [rdi + 7]; ret; 
0x0000000000438830: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000048e855: mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d3: mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000455db7: mov rdx, qword ptr [rsp + 0x68]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000472189: mov rdx, r10; mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x0000000000411ae9: mov rdx, r10; mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000412357: mov rdx, r12; mov rsi, r9; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000412669: mov rdx, r12; mov rsi, r9; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000494d6f: mov rdx, r13; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000473cf9: mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000044d508: mov rdx, r13; call rbx; 
0x000000000044cd67: mov rdx, r13; mov r9, qword ptr [rsp + 0x10]; mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000046dccb: mov rdx, r13; mov rsi, r12; call rax; 
0x0000000000494f0c: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x0000000000494db0: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000411daf: mov rdx, r13; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000041b996: mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000044cc13: mov rdx, r13; xor r8d, r8d; mov rdi, r12; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x0000000000407bd5: mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000407cf8: mov rdx, r14; mov rax, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000407d4a: mov rdx, r14; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407b6a: mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000004139b2: mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000414194: mov rdx, r15; mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415273: mov rdx, r15; mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000041ba80: mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x0000000000474228: mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000049c5f0: mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000045f14f: mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000000045ee29: mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000000045ee50: mov rdx, rbp; mov rsi, r12; mov rdi, r14; call rbx; 
0x000000000045ee6b: mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000000453505: mov rdx, rbp; push 0; mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x000000000045ee09: mov rdx, rbp; shr rax, 1; imul rax, rdi; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x0000000000412020: mov rdx, rbx; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000413eb9: mov rdx, rbx; mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000047534a: mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000041502e: mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004144a0: mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x00000000004749d9: mov rdx, rcx; mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x000000000047439f: mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x00000000004756bb: mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x508], r8d; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x000000000044bc14: mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000483590: mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000044ee08: mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000407bcd: mov rsi, qword ptr [r13]; mov rdi, qword ptr [r12]; mov rdx, r14; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000411b94: mov rsi, qword ptr [r15 + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, r14; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000408334: mov rsi, qword ptr [rax + 0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x0000000000453e9c: mov rsi, qword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x000000000041862b: mov rsi, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rbx + 0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x0000000000493b90: mov rsi, qword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x95930; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000493acc: mov rsi, qword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0x95a30; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000044f843: mov rsi, qword ptr [rdx]; mov rdi, qword ptr [rbp - 0x58]; mov qword ptr [rbp - 0x50], r9; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x000000000044af67: mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000043b7ea: mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000044e59c: mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; mov eax, 1; syscall; 
0x000000000044e4fc: mov rsi, qword ptr [rsp + 0x10]; mov r8d, eax; mov edi, dword ptr [rsp + 8]; xor eax, eax; syscall; 
0x00000000004025b4: mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000041db9d: mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000045f14a: mov rsi, qword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000000424af8: mov rsi, qword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x000000000044cd72: mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000044d500: mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000424590: mov rsi, qword ptr [rsp + 0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000045350d: mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000425310: mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x00000000004570d0: mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000456ec0: mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000458296: mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000458afc: mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000457817: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000459724: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000456557: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x00000000004568e5: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045588e: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000456331: mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045a383: mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x0000000000456050: mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x0000000000455dbc: mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000414197: mov rsi, r10; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415031: mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004144a3: mov rsi, r10; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x0000000000415276: mov rsi, r10; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x000000000046dcce: mov rsi, r12; call rax; 
0x000000000045ee2c: mov rsi, r12; call rbx; 
0x0000000000494f0f: mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x0000000000494db3: mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000000494d75: mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000482ed0: mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000000411db2: mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000045ee53: mov rsi, r12; mov rdi, r14; call rbx; 
0x0000000000407d4d: mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407b6d: mov rsi, r13; mov rdi, r12; call rax; 
0x00000000004139a9: mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000041817a: mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000047218c: mov rsi, r14; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x000000000041b999: mov rsi, r14; mov rdi, rbp; call qword ptr [rbx + 0x40]; 
0x000000000041ba83: mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000045ee6e: mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000000411aec: mov rsi, r15; mov rdi, r14; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x0000000000450988: mov rsi, r8; call 0x50920; add rsp, 0x10; pop rbp; ret; 
0x000000000045ec81: mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000000413ebc: mov rsi, r8; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x000000000044eeed: mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407a46: mov rsi, r9; mov edi, 2; mov eax, 0xe; syscall; 
0x000000000047534d: mov rsi, r9; mov rdi, r12; call qword ptr [rax + 0x38]; 
0x00000000004749dc: mov rsi, r9; mov rdi, r12; call qword ptr [rbx + 0x38]; 
0x00000000004743a2: mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x4e8], r8d; call qword ptr [rbx + 0x38]; 
0x00000000004756be: mov rsi, r9; mov rdi, r12; mov dword ptr [rbp - 0x508], r8d; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x000000000041235a: mov rsi, r9; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000041266c: mov rsi, r9; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000401d51: mov rsi, rax; mov edi, 0x49e0bd; mov eax, 0; call 0x8e70; leave; ret; 
0x0000000000401c1f: mov rsi, rax; mov edi, 0x4cbb10; jmp rdx; 
0x000000000044e3dc: mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000044e452: mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000048cbb5: mov rsi, rbp; syscall; 
0x000000000041a500: mov rsi, rbx; mov edi, 2; mov eax, r9d; syscall; 
0x000000000047421e: mov rsi, rbx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000049a499: mov rsi, rdi; mov edi, 1; jmp rax; 
0x000000000048f12a: mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000049a1f0: mov rsp, rcx; ret; 
0x000000000043b80f: mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000049bdab: mov sil, 0xff; mov rax, qword ptr [rip + 0x3153b]; mov qword ptr [rip + 0x31534], rsi; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000043b819: mov word ptr [r9 - 2], cx; ret; 
0x00000000004097e5: mov word ptr [rax + rax], cs; add byte ptr [rbx - 0x6276b], cl; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x8b48; 
0x000000000040c5df: mov word ptr [rax - 0x77], cs; ret 0xa8eb; 
0x0000000000498aaa: mov word ptr [rax], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041e494: mov word ptr [rbp + 0x31], es; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x00000000004484fc: mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e5c: mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000448604: mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f44: mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000438a67: mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x00000000004483c8: mov word ptr [rdi + 4], dx; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000447d98: mov word ptr [rdi + 4], dx; ret; 
0x000000000044841a: mov word ptr [rdi + 8], dx; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000447dda: mov word ptr [rdi + 8], dx; ret; 
0x000000000044bcfe: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], cx; ret; 
0x000000000044be83: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], cx; vzeroupper; ret; 
0x000000000044af88: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000044e5c0: mov word ptr [rdi - 0x74b7fffe], fs; and al, 8; add rsp, 0x28; ret; 
0x0000000000432b0c: mov word ptr [rdi - 2], cx; ret; 
0x0000000000432924: mov word ptr [rdi - 2], dx; ret; 
0x0000000000432b08: mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x00000000004489d3: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004447b3: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000448393: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000447d63: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x000000000044ac96: mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x0000000000438a6b: mov word ptr [rdi], cx; ret; 
0x000000000044be88: mov word ptr [rdi], cx; vzeroupper; ret; 
0x0000000000448383: mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; ret; 
0x00000000004489c3: mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; vzeroupper; ret; 
0x0000000000438ad3: mov word ptr [rdi], dx; ret; 
0x00000000004447a3: mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000043b816: mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000044af8d: mov word ptr [rdi], si; ret; 
0x00000000004478d8: mov word ptr [rdx + 4], ax; lea rax, qword ptr [rdx + 5]; ret; 
0x0000000000446118: mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000447883: mov word ptr [rdx], ax; lea rax, qword ptr [rdx + 1]; ret; 
0x0000000000447893: mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, qword ptr [rdx + 2]; ret; 
0x00000000004460e3: mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x00000000004460d3: mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x000000000044ac99: mov word ptr [rsi - 2], cx; ret; 
0x0000000000468edb: mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x000000000044af87: mov word ptr ss:[rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x0000000000452097: movabs al, byte ptr [0x441f0f660003]; ret; 
0x000000000041df66: movabs al, byte ptr [0x48ffffffff000000]; mov dword ptr [rdi + 0xa8], 0; ret; 
0x000000000041add8: movabs al, byte ptr [0x5d5be08944000000]; pop r12; ret; 
0x000000000044b46b: movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000471163: movabs al, byte ptr [0x852c8d4c000000]; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000417bf6: movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x000000000042d10c: movabs al, byte ptr [0xf10eb834900000c]; xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004105c1: movabs al, byte ptr [0xfff980858b48ffff]; dec dword ptr [rax - 0x7d]; ret; 
0x000000000049cb4e: movabs byte ptr [0x4800000000000302], al; add esp, 8; ret; 
0x000000000049ca7a: movabs byte ptr [0xe908c48348fffffe], al; sbb dword ptr [rbx], esi; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000042d40a: movabs byte ptr [0xf10eb8349000009], al; xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044d755: movabs dword ptr [0x440b3d8d48000545], eax; add eax, 0x57bbe800; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000477712: movabs dword ptr [0xc483480000441f0f], eax; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x0000000000430258: movabs rbp, 0xf66d1ef0f66bdb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000430358: movabs rsp, 0xf66d1ef0f66bcb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000468eb4: movd mm0, eax; ret; 
0x0000000000468e6e: movd mm0, esi; ret; 
0x0000000000468eb3: movd mm0, rax; ret; 
0x0000000000468e6d: movd xmm0, esi; ret; 
0x000000000046bc21: movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x00000000004484f0: movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e50: movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000448530: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000447e90: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000447e80: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000448510: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, qword ptr [rdi + 0x12]; ret; 
0x0000000000447e70: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x00000000004485b0: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x0000000000447f10: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef0: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000448570: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447eb0: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000448590: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447ed0: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000447ff0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000448650: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f90: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000448670: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fb0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000448690: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fd0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004484d0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x00000000004484e0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000447e40: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000447e30: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000447ff4: movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000448654: movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f94: movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000448674: movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fb4: movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000448694: movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fd4: movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004384b1: movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044bc66: movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004486bd: movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, qword ptr [rdi + 0x1f]; ret; 
0x0000000000447ffd: movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000438b21: movdqu xmmword ptr [rdi + 0x11], xmm0; lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438ab1: movdqu xmmword ptr [rdi + 0x12], xmm0; lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438a41: movdqu xmmword ptr [rdi + 0x13], xmm0; lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004389d1: movdqu xmmword ptr [rdi + 0x14], xmm0; lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438961: movdqu xmmword ptr [rdi + 0x15], xmm0; lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004388f1: movdqu xmmword ptr [rdi + 0x16], xmm0; lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438881: movdqu xmmword ptr [rdi + 0x17], xmm0; lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438811: movdqu xmmword ptr [rdi + 0x18], xmm0; lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004387a1: movdqu xmmword ptr [rdi + 0x19], xmm0; lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438731: movdqu xmmword ptr [rdi + 0x1a], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004386c1: movdqu xmmword ptr [rdi + 0x1b], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438651: movdqu xmmword ptr [rdi + 0x1c], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385e1: movdqu xmmword ptr [rdi + 0x1d], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438571: movdqu xmmword ptr [rdi + 0x1e], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438501: movdqu xmmword ptr [rdi + 0x1f], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004384a7: movdqu xmmword ptr [rdi + 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000043873f: movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004386cf: movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043865f: movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385ef: movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044865d: movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f9d: movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000043857f: movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044867d: movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fbd: movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000043850f: movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044869d: movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fdd: movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000438b2f: movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438abf: movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438a4f: movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004389df: movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043896f: movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004388ff: movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043888f: movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043881f: movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004387af: movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044bc6b: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000044bbdc: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044bc71: movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000437c9b: movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000437d0b: movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438446: movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004383c6: movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438336: movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004382b6: movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438236: movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004381b6: movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438136: movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004380b6: movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438036: movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437fb6: movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437f36: movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437eb6: movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437e26: movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d96: movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d06: movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437c91: movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000438437: movdqu xmmword ptr [rdi - 0x21], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004383b7: movdqu xmmword ptr [rdi - 0x22], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438327: movdqu xmmword ptr [rdi - 0x23], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004382a7: movdqu xmmword ptr [rdi - 0x24], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438227: movdqu xmmword ptr [rdi - 0x25], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004381a7: movdqu xmmword ptr [rdi - 0x26], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438127: movdqu xmmword ptr [rdi - 0x27], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004380a7: movdqu xmmword ptr [rdi - 0x28], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438027: movdqu xmmword ptr [rdi - 0x29], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437fa7: movdqu xmmword ptr [rdi - 0x2a], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437f27: movdqu xmmword ptr [rdi - 0x2b], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437ea7: movdqu xmmword ptr [rdi - 0x2c], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437e17: movdqu xmmword ptr [rdi - 0x2d], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d87: movdqu xmmword ptr [rdi - 0x2e], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437cf7: movdqu xmmword ptr [rdi - 0x2f], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437c87: movdqu xmmword ptr [rdi - 0x30], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x00000000004484d4: movdqu xmmword ptr [rdi], xmm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x00000000004484e4: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000447e44: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000448537: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000448557: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000447e97: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000447e87: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000448517: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, qword ptr [rdi + 0x12]; ret; 
0x0000000000447e77: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x00000000004485b8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485d8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f18: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000044861b: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, qword ptr [rdi + 0x1a]; ret; 
0x0000000000447f5b: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x000000000044863b: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000447f7b: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004485fc: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f3c: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000448578: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447eb8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000448598: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447ed8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x00000000004484f8: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e58: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000044bc62: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004486b9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, qword ptr [rdi + 0x1f]; ret; 
0x0000000000447ff9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000448659: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f99: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000448679: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fb9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000448699: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fd9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004384ba: movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000438514: movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000041ec68: movntps xmmword ptr [rax + 0x18], xmm2; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x00000000004484f1: movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e51: movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000448531: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000447e91: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000447e81: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000448511: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, qword ptr [rdi + 0x12]; ret; 
0x0000000000447e71: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x00000000004485b1: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x0000000000447f11: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef1: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000448571: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447eb1: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000448591: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447ed1: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000447ff1: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000448651: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f91: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000448671: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fb1: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000448691: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fd1: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004484d1: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x00000000004484e1: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000447e41: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000447e31: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000046bc22: movq mm0, qword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x0000000000447ff5: movq mm2, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000448655: movq mm2, qword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f95: movq mm2, qword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000448675: movq mm2, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fb5: movq mm2, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000448695: movq mm2, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fd5: movq mm2, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004384b2: movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044bc67: movq qword ptr [rdi + 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004486be: movq qword ptr [rdi + 0x10], mm2; lea rax, qword ptr [rdi + 0x1f]; ret; 
0x0000000000447ffe: movq qword ptr [rdi + 0x10], mm2; ret; 
0x0000000000438b22: movq qword ptr [rdi + 0x11], mm0; lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438ab2: movq qword ptr [rdi + 0x12], mm0; lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438a42: movq qword ptr [rdi + 0x13], mm0; lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004389d2: movq qword ptr [rdi + 0x14], mm0; lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438962: movq qword ptr [rdi + 0x15], mm0; lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004388f2: movq qword ptr [rdi + 0x16], mm0; lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438882: movq qword ptr [rdi + 0x17], mm0; lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438812: movq qword ptr [rdi + 0x18], mm0; lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004387a2: movq qword ptr [rdi + 0x19], mm0; lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438732: movq qword ptr [rdi + 0x1a], mm0; lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004386c2: movq qword ptr [rdi + 0x1b], mm0; lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438652: movq qword ptr [rdi + 0x1c], mm0; lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385e2: movq qword ptr [rdi + 0x1d], mm0; lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438572: movq qword ptr [rdi + 0x1e], mm0; lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438502: movq qword ptr [rdi + 0x1f], mm0; lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004384a8: movq qword ptr [rdi + 0x20], mm0; lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000438740: movq qword ptr [rdi + 0xa], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004386d0: movq qword ptr [rdi + 0xb], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438660: movq qword ptr [rdi + 0xc], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385f0: movq qword ptr [rdi + 0xd], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044865e: movq qword ptr [rdi + 0xd], mm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f9e: movq qword ptr [rdi + 0xd], mm2; ret; 
0x0000000000438580: movq qword ptr [rdi + 0xe], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044867e: movq qword ptr [rdi + 0xe], mm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fbe: movq qword ptr [rdi + 0xe], mm2; ret; 
0x0000000000438510: movq qword ptr [rdi + 0xf], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044869e: movq qword ptr [rdi + 0xf], mm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fde: movq qword ptr [rdi + 0xf], mm2; ret; 
0x0000000000438b30: movq qword ptr [rdi + 1], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438ac0: movq qword ptr [rdi + 2], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438a50: movq qword ptr [rdi + 3], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004389e0: movq qword ptr [rdi + 4], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438970: movq qword ptr [rdi + 5], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438900: movq qword ptr [rdi + 6], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438890: movq qword ptr [rdi + 7], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000438820: movq qword ptr [rdi + 8], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004387b0: movq qword ptr [rdi + 9], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044bc6c: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000044bbdd: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000044bc72: movq qword ptr [rdi + rdx - 0x20], mm0; ret; 
0x0000000000437c9c: movq qword ptr [rdi - 0x10], mm0; ret; 
0x0000000000437d0c: movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000438447: movq qword ptr [rdi - 0x11], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004383c7: movq qword ptr [rdi - 0x12], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438337: movq qword ptr [rdi - 0x13], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004382b7: movq qword ptr [rdi - 0x14], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438237: movq qword ptr [rdi - 0x15], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004381b7: movq qword ptr [rdi - 0x16], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438137: movq qword ptr [rdi - 0x17], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004380b7: movq qword ptr [rdi - 0x18], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438037: movq qword ptr [rdi - 0x19], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437fb7: movq qword ptr [rdi - 0x1a], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437f37: movq qword ptr [rdi - 0x1b], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437eb7: movq qword ptr [rdi - 0x1c], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437e27: movq qword ptr [rdi - 0x1d], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d97: movq qword ptr [rdi - 0x1e], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d07: movq qword ptr [rdi - 0x1f], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437c92: movq qword ptr [rdi - 0x20], mm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000438438: movq qword ptr [rdi - 0x21], mm0; lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004383b8: movq qword ptr [rdi - 0x22], mm0; lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438328: movq qword ptr [rdi - 0x23], mm0; lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004382a8: movq qword ptr [rdi - 0x24], mm0; lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438228: movq qword ptr [rdi - 0x25], mm0; lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004381a8: movq qword ptr [rdi - 0x26], mm0; lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438128: movq qword ptr [rdi - 0x27], mm0; lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004380a8: movq qword ptr [rdi - 0x28], mm0; lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000438028: movq qword ptr [rdi - 0x29], mm0; lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437fa8: movq qword ptr [rdi - 0x2a], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437f28: movq qword ptr [rdi - 0x2b], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437ea8: movq qword ptr [rdi - 0x2c], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437e18: movq qword ptr [rdi - 0x2d], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437d88: movq qword ptr [rdi - 0x2e], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437cf8: movq qword ptr [rdi - 0x2f], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000437c88: movq qword ptr [rdi - 0x30], mm0; lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x00000000004484d5: movq qword ptr [rdi], mm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x00000000004484e5: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000447e45: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000448538: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, qword ptr [rdi + 0x13]; ret; 
0x0000000000448558: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, qword ptr [rdi + 0x14]; ret; 
0x0000000000447e98: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000447e88: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000448518: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; lea rax, qword ptr [rdi + 0x12]; ret; 
0x0000000000447e78: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x00000000004485b9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, qword ptr [rdi + 0x17]; ret; 
0x00000000004485d9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000447f19: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000447ef9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000044861c: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, qword ptr [rdi + 0x1a]; ret; 
0x0000000000447f5c: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x000000000044863c: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000447f7c: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004485fd: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f3d: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000448579: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; lea rax, qword ptr [rdi + 0x15]; ret; 
0x0000000000447eb9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000448599: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; lea rax, qword ptr [rdi + 0x16]; ret; 
0x0000000000447ed9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x00000000004484f9: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, qword ptr [rdi + 0x11]; ret; 
0x0000000000447e59: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000044bc63: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004486ba: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, qword ptr [rdi + 0x1f]; ret; 
0x0000000000447ffa: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000044865a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f9a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000044867a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, qword ptr [rdi + 0x1d]; ret; 
0x0000000000447fba: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000044869a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, qword ptr [rdi + 0x1e]; ret; 
0x0000000000447fda: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004384bb: movq qword ptr [rdi], mm0; ret; 
0x0000000000438515: movq qword ptr [rdi], mm1; ret; 
0x0000000000468eb2: movq xmm0, rax; ret; 
0x000000000044aede: movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000420ed8: movsb byte ptr [rdi], byte ptr [rsi]; cwde; or al, byte ptr [rax]; ret; 
0x0000000000486c78: movsb byte ptr [rdi], byte ptr [rsi]; ret 0xfff7; 
0x000000000044aed0: movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000048b12f: movsd dword ptr [rdi], dword ptr [rsi]; add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x000000000049328b: movsd dword ptr [rdi], dword ptr [rsi]; add eax, dword ptr [rax]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000000401c57: movsd dword ptr [rdi], dword ptr [rsi]; or al, 0; add ebx, esi; ret; 
0x0000000000467ab2: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000048e08c: movsx eax, byte ptr [rsi]; neg eax; ret; 
0x0000000000496c9f: movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000498552: movsxd rax, dword ptr [r11 + rax*4]; add rax, r11; jmp rax; 
0x00000000004995af: movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x0000000000498653: movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x000000000044aacf: movsxd rax, ecx; ret; 
0x00000000004410eb: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442d48: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000442568: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000442958: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442178: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441c4b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044142b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x0000000000440c0b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x0000000000442317: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044176b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440f4b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044072b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044190b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x0000000000442808: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442028: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000443138: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440a6b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440ba1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004418a1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004413c1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442709: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000443039: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000441be1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440ee1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000440a01: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441701: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x0000000000442859: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442079: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000490290: movsxd rbx, ebx; cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000044ab7b: movsxd rbx, ebx; cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000004978e3: movsxd rcx, dword ptr [r15 + rcx*4]; add rcx, r15; jmp rcx; 
0x0000000000497a38: movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000000498e52: movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x000000000044ab03: movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000045e81c: movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000498c5c: movsxd rdx, dword ptr [rbp + rdx*4]; add rdx, rbp; jmp rdx; 
0x000000000048b021: movsxd rdx, ebx; mov edi, dword ptr [rbp - 0x464]; lea rsi, qword ptr [rbp - 0x430]; mov eax, 0x14; syscall; 
0x0000000000418178: movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000041f855: movsxd rdx, edx; call 0x1f780; or dword ptr [rbx], 8; pop rbx; ret; 
0x0000000000449f9c: movsxd rsi, esi; ret 0x7520; 
0x000000000044ae5b: movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044ae5e: movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044affc: movups xmm3, xmmword ptr [rsi + rdx - 0x20]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044b0a3: movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b12a: movups xmmword ptr [r11], xmm8; ret; 
0x000000000044b12b: movups xmmword ptr [rbx], xmm0; ret; 
0x000000000044b0a4: movups xmmword ptr [rbx], xmm4; ret; 
0x000000000044b096: movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b09a: movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b09f: movups xmmword ptr [rcx - 0x30], xmm0; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b09e: movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b093: movups xmmword ptr [rcx], xmm5; movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044b004: movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044b11e: movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000044b122: movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000044b126: movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000044ae66: movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044b008: movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044afdb: movups xmmword ptr [rdi + rdx - 0x10], xmm4; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044b00d: movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044afe0: movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044afe5: movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044afea: movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044b001: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000044ae63: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044b11b: movups xmmword ptr [rdi], xmm4; movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000453582: movzx eax, al; add eax, 1; push rax; call rbx; 
0x0000000000483555: movzx eax, al; add rsp, 0x58; ret; 
0x000000000049854f: movzx eax, al; movsxd rax, dword ptr [r11 + rax*4]; add rax, r11; jmp rax; 
0x0000000000498650: movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x000000000041c1e0: movzx eax, al; neg eax; ret; 
0x000000000048fc9d: movzx eax, al; pop rbx; pop rbp; pop r12; ret; 
0x000000000042ed84: movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000000429d22: movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c3c: movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000004286ad: movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000429bd7: movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c00: movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c20: movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000042e037: movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000041e19f: movzx eax, byte ptr [rax - 1]; and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049a9b0: movzx eax, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041bd44: movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041bd1e: movzx eax, byte ptr [rax]; ret; 
0x000000000041466d: movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb2cc8]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d26: movzx eax, byte ptr [rcx + rax]; lea rcx, qword ptr [rip + 0xb360f]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000475056: movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x5317f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474fd0: movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53205]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000474474: movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53961]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414716: movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414af1: movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a58: movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000042f434: movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000042f454: movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000042f41a: movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000042cf94: movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000042f1a4: movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a74: movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a94: movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000429ab4: movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000481bed: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x23028]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000048022d: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x249e8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047e25d: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x269b8]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bced: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x28f28]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000443398: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x6187d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d18: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x62efd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000440168: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x64aad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e008: movzx eax, byte ptr [rdi + rdx]; lea rdx, qword ptr [rip + 0x66c0d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000428543: movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000429a5a: movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000004284d8: movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000449fc0: movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x000000000044a020: movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000044a010: movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000044a000: movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000449ff0: movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000449fe0: movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000449fd0: movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000430340: movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x00000000004300f3: movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x0000000000449fa7: movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000481c13: movzx eax, byte ptr [rdi]; lea rdx, qword ptr [rip + 0x23003]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047e283: movzx eax, byte ptr [rdi]; lea rdx, qword ptr [rip + 0x26993]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000047bd13: movzx eax, byte ptr [rdi]; lea rdx, qword ptr [rip + 0x28f03]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004433b3: movzx eax, byte ptr [rdi]; lea rdx, qword ptr [rip + 0x61863]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000441d33: movzx eax, byte ptr [rdi]; lea rdx, qword ptr [rip + 0x62ee3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000440183: movzx eax, byte ptr [rdi]; lea rdx, qword ptr [rip + 0x64a93]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043e023: movzx eax, byte ptr [rdi]; lea rdx, qword ptr [rip + 0x66bf3]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000042f220: movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000042ed61: movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x00000000004284f3: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000042e203: movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000474f72: movzx eax, byte ptr [rsi + rax]; lea rsi, qword ptr [rip + 0x52e63]; mov rax, qword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x000000000047404d: movzx eax, byte ptr [rsi + rax]; lea rsi, qword ptr [rip + 0x53d88]; mov rax, qword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x000000000049d030: movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000044c150: movzx eax, cl; pop rbx; ret; 
0x000000000044bc11: movzx eax, dh; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000455635: movzx eax, dh; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000044c100: movzx eax, dl; and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000044bc10: movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000455634: movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000004284d4: movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000430344: movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000044af5c: movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004284f0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000042e200: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000000042f223: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000497a35: movzx ecx, cl; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000000498e48: movzx ecx, dl; lea rdx, qword ptr [rip + 0x21a82]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x000000000044af80: movzx ecx, word ptr [rsi + rdx - 2]; movzx esi, word ptr [rsi]; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x00000000004489d0: movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004447b0: movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000496c95: movzx edi, al; lea rax, qword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x0000000000429d27: movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c41: movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000004286b1: movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000429bdb: movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c05: movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c25: movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000042e03b: movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000042f439: movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000042f459: movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000042f41f: movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000004804d8: movzx edx, byte ptr [rsi + rcx]; lea rcx, qword ptr [rip + 0x2473d]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000047e568: movzx edx, byte ptr [rsi + rcx]; lea rcx, qword ptr [rip + 0x266ad]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000441f4f: movzx edx, byte ptr [rsi + rcx]; lea rcx, qword ptr [rip + 0x62cc6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000044040f: movzx edx, byte ptr [rsi + rcx]; lea rcx, qword ptr [rip + 0x64806]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000042cf98: movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000042f1a8: movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a79: movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a99: movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000429ab9: movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000428547: movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000429a5e: movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000449fc4: movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x000000000044a024: movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000044a014: movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000044a004: movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000449ff4: movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000449fe4: movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000449fd4: movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000438460: movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004300f7: movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x0000000000449fab: movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000438b40: movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000042ed64: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000044c190: movzx edx, cl; mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000000498c59: movzx edx, dl; movsxd rdx, dword ptr [rbp + rdx*4]; add rdx, rbp; jmp rdx; 
0x000000000042ed8a: movzx edx, dl; sub eax, edx; ret; 
0x00000000004383e0: movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x00000000004489c0: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, qword ptr [rdi + 1]; vzeroupper; ret; 
0x0000000000438ad0: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004447a0: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000041da84: movzx esi, byte ptr [r12]; lea r15, qword ptr [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000041da85: movzx esi, byte ptr [rsp]; lea r15, qword ptr [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x000000000044af85: movzx esi, word ptr [rsi]; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000042e1aa: movzx r8d, byte ptr [r8 + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041bd43: movzx r8d, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000499f53: mul byte ptr [rsi + 0x66]; nop dword ptr cs:[rax + rax]; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x0000000000481d67: mul byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000045dc48: neg byte ptr [rsi + 4]; add al, ch; iretd; push rdx; cli; jmp qword ptr [rsi + 0x66]; 
0x000000000044e25b: neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000044e2ff: neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e537: neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000041c1e3: neg eax; ret; 
0x000000000048b94c: neg eax; test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x000000000048b94b: neg rax; test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x0000000000482c28: nop dword ptr [rax + rax]; add rax, 3; ret; 
0x0000000000477713: nop dword ptr [rax + rax]; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x00000000004536d3: nop dword ptr [rax + rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049ca88: nop dword ptr [rax + rax]; add rsp, 8; ret; 
0x000000000042e5e8: nop dword ptr [rax + rax]; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x10]; ret; 
0x00000000004214f3: nop dword ptr [rax + rax]; call rax; 
0x0000000000448d48: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000448d58: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000448d68: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000448d78: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000448d88: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000448cd8: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000448ce8: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 3]; ret; 
0x0000000000448cf8: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000448d08: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000448d18: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000448d28: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000448d38: nop dword ptr [rax + rax]; lea rax, qword ptr [rdi + 9]; ret; 
0x0000000000448368: nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; lea rax, qword ptr [rdi]; ret; 
0x0000000000447d38: nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; ret; 
0x000000000044838b: nop dword ptr [rax + rax]; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000425e8b: nop dword ptr [rax + rax]; mov eax, 0x16; pop rbx; ret; 
0x000000000041941b: nop dword ptr [rax + rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000041a0f8: nop dword ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x000000000049a78b: nop dword ptr [rax + rax]; mov eax, 2; add rsp, 8; ret; 
0x000000000049a77b: nop dword ptr [rax + rax]; mov eax, 4; add rsp, 8; ret; 
0x000000000044dd3b: nop dword ptr [rax + rax]; mov edi, edx; mov eax, esi; syscall; 
0x0000000000447d6b: nop dword ptr [rax + rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000499ec3: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x0000000000450948: nop dword ptr [rax + rax]; mov qword ptr [rdi + 0x20], rsi; ret; 
0x0000000000499ef8: nop dword ptr [rax + rax]; mov qword ptr [rdi + 0x98], rsi; ret; 
0x00000000004225cb: nop dword ptr [rax + rax]; mov qword ptr [rsp + 0x18], r10; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000044e30b: nop dword ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000000483683: nop dword ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000482c58: nop dword ptr [rax + rax]; mov rax, 2; ret; 
0x0000000000482c68: nop dword ptr [rax + rax]; mov rax, 3; ret; 
0x0000000000482c78: nop dword ptr [rax + rax]; mov rax, 4; ret; 
0x0000000000482c88: nop dword ptr [rax + rax]; mov rax, 5; ret; 
0x0000000000482c98: nop dword ptr [rax + rax]; mov rax, 6; ret; 
0x0000000000482ca8: nop dword ptr [rax + rax]; mov rax, 7; ret; 
0x0000000000408313: nop dword ptr [rax + rax]; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000499e68: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0x90]; ret; 
0x0000000000499f08: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x0000000000499f68: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x0000000000499f18: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000049aa48: nop dword ptr [rax + rax]; mov rax, qword ptr [rsi]; add rsp, 8; ret; 
0x000000000044dc4b: nop dword ptr [rax + rax]; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x00000000004443f8: nop dword ptr [rax + rax]; mov rax, r8; vzeroupper; ret; 
0x00000000004483fb: nop dword ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000447dcb: nop dword ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000044e2f3: nop dword ptr [rax + rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e52b: nop dword ptr [rax + rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000447dab: nop dword ptr [rax + rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000494dab: nop dword ptr [rax + rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000049c5eb: nop dword ptr [rax + rax]; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000045ee4b: nop dword ptr [rax + rax]; mov rdx, rbp; mov rsi, r12; mov rdi, r14; call rbx; 
0x0000000000425308: nop dword ptr [rax + rax]; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x000000000049a9ab: nop dword ptr [rax + rax]; movzx eax, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000044a01b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x000000000044a00b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x0000000000449ffb: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000449feb: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000449fdb: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000449fcb: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000042f21b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000004447ab: nop dword ptr [rax + rax]; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000045ea04: nop dword ptr [rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000044a995: nop dword ptr [rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000448cc7: nop dword ptr [rax + rax]; nop; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000448cb7: nop dword ptr [rax + rax]; nop; lea rax, qword ptr [rdi]; ret; 
0x0000000000482c47: nop dword ptr [rax + rax]; nop; mov rax, 1; ret; 
0x0000000000499f57: nop dword ptr [rax + rax]; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000041af7b: nop dword ptr [rax + rax]; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000492c23: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000409198: nop dword ptr [rax + rax]; ret; 
0x000000000041ec73: nop dword ptr [rax + rax]; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000041e223: nop dword ptr [rax + rax]; sub rax, rcx; sub eax, 1; ret; 
0x0000000000478b33: nop dword ptr [rax + rax]; sub rcx, rax; sar rcx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x0000000000455523: nop dword ptr [rax + rax]; sub rsp, 8; call 0x55060; or dword ptr [rip + 0x778a4], 2; add rsp, 8; ret; 
0x000000000042eaeb: nop dword ptr [rax + rax]; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000049a79b: nop dword ptr [rax + rax]; xor eax, eax; add rsp, 8; ret; 
0x000000000044c0c3: nop dword ptr [rax + rax]; xor eax, eax; pop rbx; ret; 
0x00000000004078e8: nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x000000000042e1eb: nop dword ptr [rax + rax]; xor eax, eax; vzeroupper; ret; 
0x00000000004025e8: nop dword ptr [rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000000448af8: nop dword ptr [rax + rax]; xor rax, rax; ret; 
0x000000000045ee64: nop dword ptr [rax]; add r15, r13; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000000482c1c: nop dword ptr [rax]; add rax, 1; ret; 
0x0000000000494f05: nop dword ptr [rax]; add rbx, 8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x0000000000478325: nop dword ptr [rax]; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000000454c5c: nop dword ptr [rax]; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x0000000000493124: nop dword ptr [rax]; add rsp, 8; ret; 
0x000000000048b7ec: nop dword ptr [rax]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000430a9c: nop dword ptr [rax]; and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000042e5d9: nop dword ptr [rax]; bsf eax, eax; add rax, rdi; ret; 
0x000000000042e5f9: nop dword ptr [rax]; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x20]; ret; 
0x000000000042e5cc: nop dword ptr [rax]; bsf eax, eax; lea rax, qword ptr [rax + rdi - 0x10]; ret; 
0x0000000000408425: nop dword ptr [rax]; call qword ptr [rbx]; 
0x00000000004906e4: nop dword ptr [rax]; call rax; 
0x000000000048f8fc: nop dword ptr [rax]; lea rax, qword ptr [rip + 0x3d6d9]; mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x00000000004460bd: nop dword ptr [rax]; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x0000000000478565: nop dword ptr [rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000041ac64: nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x00000000004478ac: nop dword ptr [rax]; mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, qword ptr [rdx + 3]; ret; 
0x0000000000478bec: nop dword ptr [rax]; mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x00000000004788ad: nop dword ptr [rax]; mov eax, dword ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000447d9d: nop dword ptr [rax]; mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004382cc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432edc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 5]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004330dc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 6]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004332dc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 7]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004489ed: nop dword ptr [rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 3]; vzeroupper; ret; 
0x00000000004389e9: nop dword ptr [rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000041e039: nop dword ptr [rax]; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000045ec19: nop dword ptr [rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000044f201: nop dword ptr [rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x00000000004830d4: nop dword ptr [rax]; mov rax, -0x40; mov dword ptr fs:[rax], 2; xor eax, eax; ret; 
0x000000000045ea0c: nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000048fe3d: nop dword ptr [rax]; mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x00000000004477fd: nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, qword ptr [rdx + 7]; ret; 
0x000000000044604d: nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000044c1bd: nop dword ptr [rax]; mov rax, rdx; pop rbx; ret; 
0x0000000000447ded: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000447dfd: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x000000000044eda4: nop dword ptr [rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000044e614: nop dword ptr [rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000437fcc: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437e3c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437dac: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043256c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043804c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000438829: nop dword ptr [rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044ee01: nop dword ptr [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000424af5: nop dword ptr [rax]; mov rsi, qword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x0000000000482ecd: nop dword ptr [rax]; mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000041a4f9: nop dword ptr [rax]; mov rsi, rbx; mov edi, 2; mov eax, r9d; syscall; 
0x0000000000447e4c: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000447e6c: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000447eec: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000447ead: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000447ecc: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x00000000004484dd: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, qword ptr [rdi + 0x10]; ret; 
0x0000000000447e39: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000449fbd: nop dword ptr [rax]; movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x000000000042f49d: nop dword ptr [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000044c149: nop dword ptr [rax]; movzx eax, cl; pop rbx; ret; 
0x00000000004284ed: nop dword ptr [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000043845c: nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000438b39: nop dword ptr [rax]; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x00000000004383dc: nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000438ac9: nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000444799: nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000042485c: nop dword ptr [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000041e0c5: nop dword ptr [rax]; pop rbp; ret; 
0x0000000000491b29: nop dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000406e64: nop dword ptr [rax]; ret; 
0x0000000000443bcd: nop dword ptr [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000000497585: nop dword ptr [rax]; xor eax, eax; or rcx, r9; setne al; ret; 
0x000000000041c1ac: nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004820ed: nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000000417b4d: nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000482c27: nop dword ptr cs:[rax + rax]; add rax, 3; ret; 
0x0000000000448d47: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000448d57: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000448d67: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000448d77: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000448d87: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000448cd7: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000448ce7: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 3]; ret; 
0x0000000000448cf7: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000448d07: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000448d17: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000448d27: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000448d37: nop dword ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 9]; ret; 
0x000000000041ed27: nop dword ptr cs:[rax + rax]; mov eax, 0xffffffff; ret; 
0x0000000000499ef7: nop dword ptr cs:[rax + rax]; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000045ea03: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000044a994: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000448cc6: nop dword ptr cs:[rax + rax]; nop; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000448cb6: nop dword ptr cs:[rax + rax]; nop; lea rax, qword ptr [rdi]; ret; 
0x0000000000482c46: nop dword ptr cs:[rax + rax]; nop; mov rax, 1; ret; 
0x0000000000499f56: nop dword ptr cs:[rax + rax]; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x0000000000493cf7: nop dword ptr cs:[rax + rax]; ret; 
0x000000000049aa37: nop dword ptr cs:[rax + rax]; xor eax, eax; add rsp, 8; ret; 
0x0000000000419d27: nop dword ptr cs:[rax + rax]; xor eax, eax; ret; 
0x00000000004025e7: nop dword ptr cs:[rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000000482c37: nop dword ptr cs:[rax + rax]; xor rax, rax; ret; 
0x000000000048c40d: nop esp, edi; jmp qword ptr [rsi + 0x66]; 
0x00000000004536d2: nop word ptr [rax + rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049ca87: nop word ptr [rax + rax]; add rsp, 8; ret; 
0x000000000042e5e7: nop word ptr [rax + rax]; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x10]; ret; 
0x00000000004214f2: nop word ptr [rax + rax]; call rax; 
0x0000000000448367: nop word ptr [rax + rax]; mov byte ptr [rdi], dh; lea rax, qword ptr [rdi]; ret; 
0x0000000000447d37: nop word ptr [rax + rax]; mov byte ptr [rdi], dh; ret; 
0x0000000000425e8a: nop word ptr [rax + rax]; mov eax, 0x16; pop rbx; ret; 
0x000000000041941a: nop word ptr [rax + rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000049a78a: nop word ptr [rax + rax]; mov eax, 2; add rsp, 8; ret; 
0x000000000049a77a: nop word ptr [rax + rax]; mov eax, 4; add rsp, 8; ret; 
0x000000000044dd3a: nop word ptr [rax + rax]; mov edi, edx; mov eax, esi; syscall; 
0x0000000000447d6a: nop word ptr [rax + rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000450947: nop word ptr [rax + rax]; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000044e30a: nop word ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000000483682: nop word ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000408312: nop word ptr [rax + rax]; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x000000000049aa47: nop word ptr [rax + rax]; mov rax, qword ptr [rsi]; add rsp, 8; ret; 
0x00000000004443f7: nop word ptr [rax + rax]; mov rax, r8; vzeroupper; ret; 
0x0000000000447dca: nop word ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000044e352: nop word ptr [rax + rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000000494daa: nop word ptr [rax + rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000000049c5ea: nop word ptr [rax + rax]; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000000049a9aa: nop word ptr [rax + rax]; movzx eax, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004447aa: nop word ptr [rax + rax]; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000041af7a: nop word ptr [rax + rax]; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000492c22: nop word ptr [rax + rax]; pop rbp; ret; 
0x0000000000409197: nop word ptr [rax + rax]; ret; 
0x000000000041ec72: nop word ptr [rax + rax]; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000041e222: nop word ptr [rax + rax]; sub rax, rcx; sub eax, 1; ret; 
0x0000000000478b32: nop word ptr [rax + rax]; sub rcx, rax; sar rcx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x000000000049a79a: nop word ptr [rax + rax]; xor eax, eax; add rsp, 8; ret; 
0x0000000000444407: nop word ptr [rax + rax]; xor eax, eax; ret; 
0x000000000042e1ea: nop word ptr [rax + rax]; xor eax, eax; vzeroupper; ret; 
0x0000000000482c26: nop word ptr cs:[rax + rax]; add rax, 3; ret; 
0x0000000000448d46: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000448d56: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000448d66: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000448d76: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000448d86: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000448cd6: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000448ce6: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 3]; ret; 
0x0000000000448cf6: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000448d06: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000448d16: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000448d26: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000448d36: nop word ptr cs:[rax + rax]; lea rax, qword ptr [rdi + 9]; ret; 
0x000000000041ed26: nop word ptr cs:[rax + rax]; mov eax, 0xffffffff; ret; 
0x0000000000499ef6: nop word ptr cs:[rax + rax]; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000045ea02: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000044a993: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000448cc5: nop word ptr cs:[rax + rax]; nop; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000448cb5: nop word ptr cs:[rax + rax]; nop; lea rax, qword ptr [rdi]; ret; 
0x0000000000482c45: nop word ptr cs:[rax + rax]; nop; mov rax, 1; ret; 
0x0000000000499f55: nop word ptr cs:[rax + rax]; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x0000000000493cf6: nop word ptr cs:[rax + rax]; ret; 
0x000000000049aa36: nop word ptr cs:[rax + rax]; xor eax, eax; add rsp, 8; ret; 
0x0000000000419d26: nop word ptr cs:[rax + rax]; xor eax, eax; ret; 
0x00000000004025e6: nop word ptr cs:[rax + rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000000482c36: nop word ptr cs:[rax + rax]; xor rax, rax; ret; 
0x0000000000402364: nop; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000041bc79: nop; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c4319df; ret; 
0x0000000000437b87: nop; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000402974: nop; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000041864c: nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000042f7ae: nop; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042611c: nop; add byte ptr es:[rax], al; cmovne rax, rdx; ret; 
0x0000000000424aef: nop; add rsp, 0x18; ret; 
0x0000000000453e96: nop; call 0x52080; mov rsi, qword ptr [rbp - 0x70]; mov rdi, r12; call rsi; 
0x00000000004957ff: nop; call rax; 
0x0000000000491d61: nop; in al, dx; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], -0x7d; ret 0x4801; 
0x000000000046b40b: nop; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000448ccf: nop; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000448cbf: nop; lea rax, qword ptr [rdi]; ret; 
0x000000000044786f: nop; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, qword ptr [rdx]; ret; 
0x000000000043273f: nop; mov dl, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000488805: nop; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x00000000004887d3: nop; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000043291f: nop; mov dx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000432aff: nop; mov dx, word ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000447d4f: nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000425ecf: nop; mov eax, 0x16; ret; 
0x000000000040913f: nop; mov eax, r8d; ret; 
0x0000000000432cdf: nop; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044839f: nop; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, qword ptr [rdi + 3]; ret; 
0x00000000004447bf: nop; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; vzeroupper; ret; 
0x0000000000478c97: nop; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000478c66: nop; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000482c4f: nop; mov rax, 1; ret; 
0x0000000000499e5f: nop; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x0000000000499f5f: nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x0000000000447ddf: nop; mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000447e0f: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000447e1f: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000453e9f: nop; mov rdi, r12; call rsi; 
0x000000000044e5cf: nop; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x00000000004483ef: nop; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, qword ptr [rdi + 7]; ret; 
0x0000000000447e7f: nop; movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000447fef: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000447faf: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000447fcf: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004484cf: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, qword ptr [rdi + 0xf]; ret; 
0x0000000000447e2f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045ea00: nop; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000045e9ff: nop; nop; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x0000000000488cdf: nop; or byte ptr [rdi + 0x31d], 4; xor eax, eax; ret; 
0x000000000041d17f: nop; ret; 
0x00000000004862ca: nop; sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042eaff: nop; tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000004440ff: nop; tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eacf: nop; vzeroupper; xor eax, eax; ret; 
0x000000000042e64f: nop; xor eax, eax; ret; 
0x0000000000490023: or ah, bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000426d26: or ah, byte ptr [rax + 0xa]; add byte ptr [rdx], al; lea rdx, qword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x000000000042d117: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044270f: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d145: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000483692: or al, 0; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x0000000000422d05: or al, 0; add byte ptr [rax], al; mov rax, r8; ret; 
0x0000000000483645: or al, 0; add byte ptr [rax], al; syscall; 
0x0000000000425111: or al, 0; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000045feec: or al, 0; add byte ptr [rbp + 0x1e], dh; xor eax, eax; add rsp, 8; ret; 
0x00000000004097e6: or al, 0; add byte ptr [rbx - 0x6276b], cl; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x8b48; 
0x0000000000412354: or al, 0; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r9; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x0000000000401c58: or al, 0; add ebx, esi; ret; 
0x0000000000401f72: or al, 0; add rsp, 0x88; pop rbx; ret; 
0x00000000004025ae: or al, 0; mov edi, dword ptr [rsp + 0xc]; mov rsi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000401221: or al, 0; syscall; 
0x00000000004284d6: or al, 0x16; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000048f030: or al, 0x18; cld; jmp qword ptr [rsi + 0x66]; 
0x000000000041b469: or al, 0x24; mov rdi, rbp; call rax; 
0x0000000000402970: or al, 0x48; add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000000042580b: or al, 0x48; lea eax, dword ptr [rax - 0x10]; ret; 
0x000000000041d634: or al, 0x48; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000004903ed: or al, 0x48; mov edx, dword ptr [rip + 0x3cce3]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004025b3: or al, 0x48; mov esi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000048c433: or al, 0x49; lea eax, dword ptr [rax + 1]; mov qword ptr [rip + 0x40ed1], rax; ret; 
0x000000000044f678: or al, 0x4c; mov edi, edi; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x00000000004116c0: or al, 0x83; ret; 
0x0000000000471abf: or al, 0x84; ror byte ptr [rdi], cl; mov byte ptr [rax - 0x9ffffe9], al; ret 0xf40; 
0x000000000044c17b: or al, 0x89; ret 0xe283; 
0x0000000000498e54: or al, 0x8a; add rdx, rcx; jmp rdx; 
0x000000000043e014: or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000043b7fd: or al, 0x8b; mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000450607: or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x00000000004978e5: or al, 0x8f; add rcx, r15; jmp rcx; 
0x0000000000497a3a: or al, 0x8f; add rcx, rdi; jmp rcx; 
0x0000000000406e60: or al, 0xdc; add dword ptr [rax], eax; nop dword ptr [rax]; ret; 
0x0000000000438663: or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x000000000046f165: or al, 0xf6; ret 0xf01; 
0x0000000000477123: or al, 0xf6; ret 0xf04; 
0x0000000000471a94: or al, 0xf6; ret 0xf08; 
0x000000000046f29b: or al, 0xf6; ret 0xf40; 
0x000000000048fb87: or al, 0xfc; jmp qword ptr [rsi + 0xf]; 
0x00000000004205a2: or al, bh; or al, byte ptr [rax]; syscall; 
0x0000000000425e27: or al, byte ptr [r8]; syscall; 
0x0000000000426198: or al, byte ptr [rax]; adc byte ptr [rax - 0x73], cl; adc eax, 0x248be; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x0000000000426bd8: or al, byte ptr [rax]; adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffd0e; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x000000000042d2f7: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441291: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d325: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041f074: or al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000499c39: or al, byte ptr [rax]; add byte ptr [rax], al; mov edi, 1; call rax; 
0x000000000044f2b5: or al, byte ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000427014: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x23e22; lea rax, qword ptr [rip + 0x23edb]; cmove rax, rdx; ret; 
0x0000000000426ea4: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x23f82; lea rax, qword ptr [rip + 0x2403b]; cmove rax, rdx; ret; 
0x0000000000426d44: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x240f2; lea rax, qword ptr [rip + 0x241ab]; cmove rax, rdx; ret; 
0x0000000000426fa6: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x24260; lea rax, qword ptr [rip + 0x242a9]; cmove rax, rdx; ret; 
0x0000000000426e36: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x243c0; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x0000000000426cd6: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x24530; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426ff8: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x2464e; lea rax, qword ptr [rip + 0x24697]; cmove rax, rdx; ret; 
0x0000000000426e88: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x247ae; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x0000000000426d28: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x2491e; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426de8: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x250be; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x0000000000426eff: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; add eax, 0x1da27; lea rdx, qword ptr [rip + 0x1f2c0]; cmovne rax, rdx; ret; 
0x000000000042616f: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; add eax, 0x1e6c7; lea rdx, qword ptr [rip + 0x1e8a0]; cmovne rax, rdx; ret; 
0x000000000042610f: or al, byte ptr [rax]; add cl, byte ptr [rax - 0x73]; add eax, 0xf97; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x0000000000426cf4: or al, byte ptr [rax]; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x00000000004257ff: or al, byte ptr [rax]; add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x000000000041f95b: or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000041f9ab: or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad48], rax; ret; 
0x000000000041f97b: or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xaad80], rax; ret; 
0x000000000041f93b: or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000424c11: or al, byte ptr [rax]; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x000000000041efd4: or al, byte ptr [rax]; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x0000000000420dcd: or al, byte ptr [rax]; add rsp, 0x10; pop rbp; ret; 
0x000000000042708d: or al, byte ptr [rax]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x1c9a7]; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263ad: or al, byte ptr [rax]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x1dc37]; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263ed: or al, byte ptr [rax]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x000000000042704d: or al, byte ptr [rax]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x7ae7]; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c0d: or al, byte ptr [rax]; cmp rax, rdx; lea rdx, qword ptr [rip + 0x7c57]; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x00000000004260af: or al, byte ptr [rax]; lea rax, qword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x0000000000420ecc: or al, byte ptr [rax]; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420ebe: or al, byte ptr [rax]; lea rax, qword ptr [rip + 0x3029]; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000420dc6: or al, byte ptr [rax]; lea rax, qword ptr [rip + 0xa99d1]; add rsp, 0x10; pop rbp; ret; 
0x00000000004243f8: or al, byte ptr [rax]; lea rax, qword ptr [rip - 0x511]; mov qword ptr [rip + 0xa6380], rax; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x0000000000424406: or al, byte ptr [rax]; lea rax, qword ptr [rip - 0xa7f]; mov qword ptr [rip + 0xa636a], rax; ret; 
0x000000000041fdf8: or al, byte ptr [rax]; mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x00000000004243bb: or al, byte ptr [rax]; mov dword ptr [rip + 0xa88d9], 0; ret; 
0x000000000041f935: or al, byte ptr [rax]; mov dword ptr [rip + 0xaadf3], 1; ret; 
0x000000000041efcd: or al, byte ptr [rax]; mov qword ptr [rip + 0xadc62], rbx; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x000000000041ef69: or al, byte ptr [rax]; ret; 
0x000000000041cdf2: or al, byte ptr [rax]; syscall; 
0x0000000000423c50: or al, byte ptr [rax]; syscall; pop rbp; ret; 
0x000000000042431c: or al, byte ptr [rax]; syscall; pop rbx; ret; 
0x000000000041cdf2: or al, byte ptr [rax]; syscall; ret; 
0x00000000004020e0: or al, byte ptr [rcx + 0xcac950d]; add byte ptr [rax], al; and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x00000000004020d1: or al, byte ptr [rcx + 0xcaca40d]; add byte ptr [rax], al; adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x0000000000402087: or al, byte ptr [rcx + 0xcacee0d]; add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xcaca415], cl; add dh, dh; ret 0x7408; 
0x000000000042415e: or al, byte ptr ds:[rax]; syscall; 
0x00000000004811d7: or al, byte ptr es:[rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000425e70: or al, ch; cli; call 0xffffffff894b5e77; ret 0xcb8; 
0x0000000000469f85: or al, ch; mov ch, 0x70; stc; inc dword ptr [rbp + 1]; dec dword ptr [rax - 0x7d]; ret; 
0x000000000044e5be: or al, ch; mov word ptr [rdi - 0x74b7fffe], fs; and al, 8; add rsp, 0x28; ret; 
0x000000000044d9a4: or al, ch; out 0x36, al; sti; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000048d951: or al, ch; pop rcx; sub al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000048da18: or al, ch; xchg eax, edx; sub eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000488cd1: or bh, bh; adc eax, 0x42468; xor eax, eax; add rsp, 8; ret; 
0x0000000000402370: or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000044f5a1: or bl, bpl; ret 0x1f0f; 
0x000000000044f5a2: or bl, ch; ret 0x1f0f; 
0x0000000000407bee: or bl, ch; ret; 
0x0000000000467a70: or bl, ch; shld r8, r9, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000438823: or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x000000000045ca18: or byte ptr [r11 + 0x1974fdf8], al; pop rbx; ret; 
0x000000000044f548: or byte ptr [r11 + 0x94901e0], al; ret 0x894d; 
0x000000000044f486: or byte ptr [r11 + r9*4 + 0x57], r9b; adc byte ptr [rcx - 0x77], cl; ret; 
0x000000000041f0ac: or byte ptr [r8 + 0x39], r9b; sal byte ptr [rbx + 0x25], 1; movzx eax, byte ptr [rax]; ret; 
0x000000000041bd16: or byte ptr [r8 + 0x3b], r9b; adc byte ptr [r11 + 0xa], r14b; movzx eax, byte ptr [rax]; ret; 
0x000000000048f817: or byte ptr [r8 + 2], r15b; ret; 
0x000000000048f88b: or byte ptr [r8 - 0x3ffe], r15b; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x00000000004460a8: or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000048cb11: or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000483b02: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x000000000048cabd: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x00000000004813b2: or byte ptr [r8], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044f544: or byte ptr [r9 - 0x75], r9b; or byte ptr [r11 + 0x94901e0], al; ret 0x894d; 
0x0000000000446167: or byte ptr [r9 - 0x76b7f7be], cl; clc; ret; 
0x0000000000418e70: or byte ptr [rax + 0x2b], cl; adc dword ptr [rax - 0x3f], ecx; cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000488124: or byte ptr [rax + 0x39], cl; ret 0xd74; 
0x0000000000460eca: or byte ptr [rax + 0x39], cl; ret 0xf075; 
0x000000000041f0ad: or byte ptr [rax + 0x39], cl; sal byte ptr [rbx + 0x25], 1; movzx eax, byte ptr [rax]; ret; 
0x000000000041bd17: or byte ptr [rax + 0x3b], cl; adc byte ptr [r11 + 0xa], r14b; movzx eax, byte ptr [rax]; ret; 
0x00000000004569ff: or byte ptr [rax + 0x63], cl; ror byte ptr [rcx + 0x39], cl; ret 0x3176; 
0x0000000000402b94: or byte ptr [rax + 0x9e], bh; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000402b93: or byte ptr [rax + 0x9e], r15b; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x0000000000454c63: or byte ptr [rax + 1], bh; pop rbx; pop rbp; ret; 
0x000000000044e5a7: or byte ptr [rax + 1], bh; syscall; 
0x00000000004056a4: or byte ptr [rax + 1], cl; ret; 
0x000000000048f818: or byte ptr [rax + 2], bh; ret; 
0x0000000000494fd5: or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x000000000041f9e9: or byte ptr [rax + rax], al; add byte ptr [rsi + 1], dh; ret; 
0x000000000047803d: or byte ptr [rax + rbp - 0x77], dh; ret 0xc883; 
0x000000000048e757: or byte ptr [rax + rcx*2 + 0x2b], ah; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000048e756: or byte ptr [rax + rcx*2 + 0x2b], spl; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004933de: or byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000048f88c: or byte ptr [rax - 0x3ffe], bh; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000048f845: or byte ptr [rax - 0x402f], bh; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000426fd0: or byte ptr [rax - 0x73], cl; add eax, 0x9b08; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x0000000000426e60: or byte ptr [rax - 0x73], cl; add eax, 0x9c58; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x000000000044ce71: or byte ptr [rax - 0x73], cl; add eax, 0xb17; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000426d00: or byte ptr [rax - 0x73], cl; add eax, 0xc7b8; lea rdx, qword ptr [rip + 0x11e51]; cmovne rax, rdx; ret; 
0x000000000046041c: or byte ptr [rax - 0x73], cl; add qword ptr [r9 - 0x77], r9; xlatb; or byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004685fc: or byte ptr [rax - 0x73], cl; push rdi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x0000000000468b8c: or byte ptr [rax - 0x73], cl; push rsi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000044fc8c: or byte ptr [rax - 0x75], cl; add eax, dword ptr [rbx + 0x94801e0]; ret 0x8948; 
0x00000000004843ed: or byte ptr [rax - 0x75], cl; xor al, ch; ret 0xf7cc; 
0x0000000000422578: or byte ptr [rax - 0x77], cl; add al, 0x24; call rsi; 
0x0000000000422116: or byte ptr [rax - 0x77], cl; add ecx, ebp; ret; 
0x000000000042601f: or byte ptr [rax - 0x77], cl; add edi, dword ptr [rax + 1]; pop rbx; pop rbp; pop r12; ret; 
0x00000000004460ad: or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041c27a: or byte ptr [rax - 0x77], cl; fucompi st(0); insd dword ptr [rdi], dx; ret; 
0x0000000000477ff8: or byte ptr [rax - 0x77], cl; jo 0x7800d; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x00000000004460a9: or byte ptr [rax - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041b16c: or byte ptr [rax - 0x77], cl; out dx, eax; pop rbx; pop rbp; jmp rax; 
0x000000000044fc20: or byte ptr [rax - 0x77], cl; push rsi; adc byte ptr [rax - 0x75], cl; push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x0000000000423f97: or byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000048cb12: or byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000421524: or byte ptr [rax - 0x77], cl; ret; 
0x0000000000421523: or byte ptr [rax - 0x77], r9b; ret; 
0x000000000048993d: or byte ptr [rax - 0x7af0f506], al; cmp dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000483b03: or byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x000000000048cabe: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x0000000000417012: or byte ptr [rax - 0x7bf0dbc7], al; ret; 
0x000000000042399d: or byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x0000000000460425: or byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000467fb6: or byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000040470d: or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000419890: or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x000000000046cce9: or byte ptr [rax], al; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x000000000042439f: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000042d5c7: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441431: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d505: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000049a763: or byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000045eadb: or byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xd; syscall; 
0x000000000045ec7d: or byte ptr [rax], al; add byte ptr [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000044c1e9: or byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000044e605: or byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000414ea5: or byte ptr [rax], al; add byte ptr [rbx - 0x78f0d008], al; mov ebp, 0x8900000d; ret 0xc083; 
0x0000000000469ba5: or byte ptr [rax], al; add byte ptr [rcx - 0x142dce3a], cl; adc eax, 0x83489066; ret 0x4101; 
0x00000000004301d0: or byte ptr [rax], al; add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000044d368: or byte ptr [rax], al; syscall; 
0x000000000048cbae: or byte ptr [rax], dl; add byte ptr [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000000442afe: or byte ptr [rax], r8b; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004694f0: or byte ptr [rbp + 0x31], al; fisttp dword ptr [rax - 0x39]; ret; 
0x00000000004772af: or byte ptr [rbp + 0x31], al; in al, 0xe9; ret; 
0x00000000004085f7: or byte ptr [rbp + 0x31], al; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x000000000042140c: or byte ptr [rbp + 0x31], al; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000491b23: or byte ptr [rbp + 0x41], bl; pop rsp; jmp rax; 
0x0000000000482ec8: or byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x0000000000493033: or byte ptr [rbp + 0x440f4cc9], al; ret 0x8d48; 
0x0000000000426d21: or byte ptr [rbp - 0x11], dh; test byte ptr [rip + 0xa600a], 2; lea rdx, qword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x000000000040a4cf: or byte ptr [rbp - 0x7b], cl; in al, 0x75; ret; 
0x000000000045ca19: or byte ptr [rbx + 0x1974fdf8], al; pop rbx; ret; 
0x000000000045c9f7: or byte ptr [rbx + 0x37403fe], al; ret; 
0x000000000041bcce: or byte ptr [rbx + 0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x0000000000425f57: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000406f0c: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000490047: or byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000004031d9: or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000049a6e3: or byte ptr [rbx + 0x634801eb], al; ret; 
0x000000000044fc28: or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x000000000044f549: or byte ptr [rbx + 0x94901e0], al; ret 0x894d; 
0x000000000044f487: or byte ptr [rbx + rcx*4 + 0x57], cl; adc byte ptr [rcx - 0x77], cl; ret; 
0x0000000000478756: or byte ptr [rbx - 0x3b7cb7fe], cl; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000426fd4: or byte ptr [rbx - 0x72b80000], bl; adc eax, 0xf091; cmovne rax, rdx; ret; 
0x00000000004177c0: or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x00000000004907e5: or byte ptr [rbx - 0x7af0f802], al; ret 1; 
0x00000000004887cc: or byte ptr [rbx], al; add byte ptr [rax], al; lea rax, qword ptr [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000478d98: or byte ptr [rbx], al; add byte ptr [rax], al; mov esi, 0x80; syscall; 
0x000000000048880f: or byte ptr [rbx], al; add byte ptr [rax], al; ret; 
0x0000000000468e3b: or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x00000000004516fa: or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x000000000048f21b: or byte ptr [rcx + 1], cl; ret 0x894c; 
0x0000000000421043: or byte ptr [rcx + 1], cl; ror dword ptr [rax + 0xf], 1; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000468120: or byte ptr [rcx + rax - 0x3e], cl; mov rax, rdx; pop rbx; ret; 
0x000000000049c30e: or byte ptr [rcx + rcx*4 + 3], cl; pop rbx; ret; 
0x0000000000407cff: or byte ptr [rcx + rcx*4 - 0x12], cl; mov rdi, r12; call rax; 
0x0000000000494d6e: or byte ptr [rcx + rcx*4 - 0x16], cl; add rax, qword ptr [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000000494f0b: or byte ptr [rcx + rcx*4 - 0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000000044f7a2: or byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000048cd04: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x000000000046bde3: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x0000000000495686: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000044f0f0: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x0000000000403255: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408697: or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004179c6: or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000417b13: or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000407d49: or byte ptr [rcx + rcx*4 - 0xe], cl; mov rsi, r13; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000407b69: or byte ptr [rcx + rcx*4 - 0xe], cl; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000000418d22: or byte ptr [rcx + rcx*4 - 1], cl; call rax; 
0x0000000000468e42: or byte ptr [rcx - 0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000000469096: or byte ptr [rcx - 0x39], cl; ret; 
0x000000000044f545: or byte ptr [rcx - 0x75], cl; or byte ptr [r11 + 0x94901e0], al; ret 0x894d; 
0x000000000041917b: or byte ptr [rcx - 0x75], cl; sub byte ptr [r13 - 0x7b], r8b; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000446168: or byte ptr [rcx - 0x76b7f7be], cl; clc; ret; 
0x000000000048f789: or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004852f5: or byte ptr [rcx - 0x77], al; xchg eax, esp; and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x0000000000418d4c: or byte ptr [rcx - 0x77], cl; sbb byte ptr [r8 + 1], r9b; ret 0x148; 
0x0000000000485302: or byte ptr [rcx - 0x77], cl; test byte ptr [rax + rax*8], ah; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000498532: or byte ptr [rcx - 0x80], al; call qword ptr [rax + 0x4d]; 
0x000000000049a5b0: or byte ptr [rcx], bl; leave; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x00000000004256e1: or byte ptr [rcx], cl; ret 0x37e9; 
0x0000000000423a99: or byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000406ece: or byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000004513aa: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8348; 
0x0000000000451b7f: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8d48; 
0x0000000000451b5e: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6bf0ffc8], cl; ret 0x8d48; 
0x0000000000488ce0: or byte ptr [rdi + 0x31d], 4; xor eax, eax; ret; 
0x000000000040bda6: or byte ptr [rdi + r9 - 0x4a], r8b; and byte ptr [rcx + 0xf], al; mov dh, 0x45; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000040bda7: or byte ptr [rdi + rcx - 0x4a], al; and byte ptr [rcx + 0xf], al; mov dh, 0x45; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004093c6: or byte ptr [rdi + rcx - 0x4a], al; xor byte ptr [rbx - 0x60f7b], cl; dec dword ptr [rcx - 0x7d]; ret 0x8501; 
0x0000000000409f8e: or byte ptr [rdi + rcx - 0x4a], al; xor byte ptr [rbx - 0x6276b], cl; dec dword ptr [rcx - 0x7d]; ret 0x4801; 
0x000000000040f153: or byte ptr [rdi + rcx - 0x4a], al; xor byte ptr [rcx - 0x7d], cl; ret 0x4801; 
0x000000000040aaf9: or byte ptr [rdi + rcx - 0x4a], al; xor byte ptr [rcx - 0x7d], cl; ret 0x4c01; 
0x000000000040ef35: or byte ptr [rdi + rcx - 0x4a], al; xor byte ptr [rcx - 0x7d], cl; ret 0x8b01; 
0x000000000041d857: or byte ptr [rdi], cl; mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000483554: or byte ptr [rdi], cl; mov dh, 0xc0; add rsp, 0x58; ret; 
0x0000000000493aaf: or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x00000000004950fd: or byte ptr [rdi], cl; test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x23840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000044e77b: or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x00000000004025d5: or byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000044ac75: or byte ptr [rdx + 0xa], dh; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000043b7e7: or byte ptr [rdx + 0xf], dh; mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000424c10: or byte ptr [rdx], 0; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x0000000000424c83: or byte ptr [rdx], 0; syscall; 
0x0000000000418986: or byte ptr [rsi - 1], bh; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000458cd3: or byte ptr [rsi], al; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000046cce8: or byte ptr fs:[rax], al; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x000000000045c9cd: or ch, cl; popfq; cmp ah, 0xff; nop dword ptr [rax + rax]; ret; 
0x000000000041865c: or cl, byte ptr [rax + 1]; ret 0x8948; 
0x000000000041b886: or cl, byte ptr [rax + 1]; ret 0x8949; 
0x000000000048fda8: or cl, byte ptr [rax - 0x73]; adc eax, 0x3bcf0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000048a839: or cl, byte ptr [rax - 0x73]; add cl, byte ptr [rax - 0x77]; fimul dword ptr [rax - 0x77]; ret; 
0x000000000048ed16: or cl, byte ptr [rax - 0x73]; or eax, 0x3cd62; mov qword ptr [rax], rcx; pop rbp; ret; 
0x000000000049447a: or cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x00000000004182bc: or cl, byte ptr [rax - 0x7d]; ret; 
0x000000000041bd1d: or cl, byte ptr [rdi]; mov dh, 0; ret; 
0x000000000049311e: or cl, ch; fmul st(6), st(0); mov dh, 0xff; nop dword ptr [rax]; add rsp, 8; ret; 
0x000000000049ca81: or cl, ch; sbb dword ptr [rbx], esi; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000042cf92: or dh, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000438743: or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x000000000049bf35: or dh, bl; ret; 
0x00000000004198a7: or dh, byte ptr [rbp + rsi*4 + 0x48]; add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000044fa84: or dh, dh; ret 0x7401; 
0x00000000004231d3: or dh, dh; ret 0x7404; 
0x000000000041fef6: or dh, dh; ret 0x7502; 
0x000000000044f9f8: or dh, dh; ret 0xf01; 
0x00000000004231e7: or dh, dh; ret 0xf04; 
0x0000000000408405: or dl, al; add byte ptr [rax - 0x39], r9b; rcl byte ptr [rax], 0xc2; add byte ptr [rax + 0x39], r9b; ret; 
0x00000000004626d3: or dl, bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000004626d2: or dl, dil; jmp qword ptr [rsi + 0x2e]; 
0x0000000000451be1: or dword ptr [rax + 0xf], ecx; ror dword ptr [r8 - 0x77], 5; ret; 
0x00000000004077e9: or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x000000000040381a: or dword ptr [rax - 0x77], 0xc58349d7; add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x0000000000499ad2: or dword ptr [rax - 0x77], ecx; mov ebx, dword ptr [rax + 0x48000000]; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000045e386: or dword ptr [rax - 0x7d], ecx; ret 0x4101; 
0x000000000044491e: or dword ptr [rax - 1], ecx; ret 0xc148; 
0x00000000004120c2: or dword ptr [rax], eax; add bh, al; test esp, edx; idiv bh; call qword ptr [rax]; 
0x00000000004129d3: or dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000402af0: or dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042d4d7: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004429af: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d415: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044f1f0: or dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000044f232: or dword ptr [rax], eax; add byte ptr [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000000414e6c: or dword ptr [rax], eax; add byte ptr [rbx - 0x78f0d008], al; xor eax, 0x8900000e; ret 0xc083; 
0x0000000000412666: or dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r9; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x00000000004085e6: or dword ptr [rax], eax; call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x00000000004085df: or dword ptr [rax], eax; lea rdi, qword ptr [rip + 0x962e5]; call 0x2f20; xor r8d, r8d; mov rax, r8; ret; 
0x00000000004308c6: or dword ptr [rbp - 0xcffffff], 0xf; outsd dx, dword ptr [rsi]; push rdi; ret 0xff3; 
0x000000000041af80: or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000041f85c: or dword ptr [rbx], 8; pop rbx; ret; 
0x0000000000486c74: or dword ptr [rbx], eax; add al, ch; movsb byte ptr [rdi], byte ptr [rsi]; ret 0xfff7; 
0x000000000044d042: or dword ptr [rcx - 0x77], 0xc68348d2; add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x000000000041fe3d: or dword ptr [rdi + 4], 2; mov dword ptr [rdi + 8], 0; mov qword ptr [rdi + 0x60], rcx; ret; 
0x000000000046bcfc: or dword ptr [rdi - 0x2f], esi; mov rax, r8; ret; 
0x00000000004077e5: or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x0000000000461628: or dword ptr [rdi], ecx; xchg eax, edi; ret 0xd284; 
0x0000000000426e43: or dword ptr [rdx + rax], eax; cmove rax, rdx; ret; 
0x000000000048cdef: or dword ptr [rip + 0x3e312], 1; ret; 
0x0000000000455531: or dword ptr [rip + 0x778a4], 2; add rsp, 8; ret; 
0x0000000000402346: or dword ptr [rip - 0x147d1800], eax; add al, 0; lea rsi, qword ptr [rsp + 0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x00000000004129d2: or dword ptr fs:[rax], eax; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x0000000000452d69: or eax, 0x10; mov dword ptr [rip + 0x7aa82], eax; pop rbx; ret; 
0x0000000000452dca: or eax, 0x18; mov dword ptr [rip + 0x7aa21], eax; ret; 
0x0000000000448661: or eax, 0x1c478d48; ret; 
0x000000000049864b: or eax, 0x21e94; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rcx, rax; jmp rcx; 
0x0000000000481bbf: or eax, 0x2305c; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004804de: or eax, 0x2473d; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004801ff: or eax, 0x24a1c; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000047e56e: or eax, 0x266ad; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000048ed19: or eax, 0x3cd62; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000476f3a: or eax, 0x401f0f08; add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0xbe04; 
0x0000000000416c0a: or eax, 0x401f0f08; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000044c2fa: or eax, 0x441f0f; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000403062: or eax, 0x5be43145; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000042149a: or eax, 0x5d5bc031; pop r12; ret; 
0x000000000044336a: or eax, 0x618b1; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000441f55: or eax, 0x62cc6; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000441cea: or eax, 0x62f31; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000440415: or eax, 0x64806; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000448658: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f98: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000042d027: or eax, 0x83480000; ret 0x4910; 
0x0000000000440f51: or eax, 0x83480000; ret 0xe910; 
0x000000000042d055: or eax, 0x83480000; ret 0xeb10; 
0x000000000041433e: or eax, 0x89480000; ret; 
0x000000000043e00f: or eax, 0x8b00066c; or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000472da2: or eax, 0x8b480000; test dword ptr [rax], edi; idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x00000000004129ac: or eax, 0x8b490000; mov ds, eax; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x000000000041b001: or eax, 0x8b8b000b; rol byte ptr [rax], 0; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000041a807: or eax, 0xb14d4; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000414673: or eax, 0xb2cc8; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d2c: or eax, 0xb360f; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000044d892: or eax, 0xc2bc0f48; shr rax, 2; ret; 
0x0000000000401d5f: or eax, 0xc9000071; ret; 
0x00000000004385ea: or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385f3: or eax, 0xf7f0ff3; ret; 
0x00000000004742fd: or eax, 0xfb8148; adc byte ptr [rax], al; add byte ptr [rdi], cl; xchg esp, esi; and eax, 0x83480000; ret; 
0x00000000004508ef: or eax, 0xffffff9c; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000044e261: or eax, 0xffffffff; ret; 
0x0000000000452cfa: or eax, 1; mov dword ptr [rip + 0x7aaf1], eax; ret; 
0x000000000049770a: or eax, 1; pop rbx; ret; 
0x000000000042f1e9: or eax, 1; ret; 
0x0000000000452cc9: or eax, 2; mov dword ptr [rip + 0x7ab22], eax; pop rbx; ret; 
0x0000000000402639: or eax, 2; mov edx, eax; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000000452d2a: or eax, 3; mov dword ptr [rip + 0x7aac1], eax; ret; 
0x0000000000452d9a: or eax, 8; mov dword ptr [rip + 0x7aa51], eax; ret; 
0x000000000044ce76: or eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x8f0; cmovne rax, rdx; ret; 
0x0000000000482176: or eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add eax, 0x8a0; cmove rax, rdx; ret; 
0x000000000042d207: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004410f1: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d235: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044f285: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x000000000041a80a: or eax, dword ptr [rax]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000414676: or eax, dword ptr [rax]; mov rax, qword ptr [rcx + rax*8]; mov ecx, 1; jmp rax; 
0x0000000000413d2f: or eax, dword ptr [rax]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x000000000041471f: or eax, dword ptr [rax]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000417898: or eax, dword ptr [rax]; syscall; 
0x000000000045ca13: or eax, dword ptr [rbx + 0x438901e8]; or byte ptr [rbx + 0x1974fdf8], al; pop rbx; ret; 
0x000000000049b713: or eax, dword ptr [rcx + 0x7ffe2]; add byte ptr [rcx], cl; ret 0x5389; 
0x0000000000413d2e: or eax, dword ptr ss:[rax]; mov rax, qword ptr [rcx + rax*8]; xor ecx, ecx; jmp rax; 
0x0000000000443757: or eax, ecx; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x000000000044375e: or eax, edx; bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x0000000000497841: or eax, edx; mov qword ptr [rsi], r8; ret; 
0x0000000000468eb0: or eax, esi; movq xmm0, rax; ret; 
0x0000000000496c93: or ebp, esi; movzx edi, al; lea rax, qword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x000000000040ae66: or ebx, ebx; cmp dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x00000000004387b3: or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x0000000000499f44: or ecx, dword ptr [rax - 0x75]; and al, 0x10; add rsp, 0x28; ret; 
0x000000000041f85d: or ecx, dword ptr [rax]; pop rbx; ret; 
0x0000000000497c41: or ecx, ebp; ret; 
0x000000000049758b: or ecx, ecx; setne al; ret; 
0x0000000000472564: or ecx, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000045fed1: or ecx, edx; mov eax, 0; test dil, dil; cmovne eax, ecx; add rsp, 8; ret; 
0x00000000004286a7: or ecx, esi; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000045feb4: or ecx, esi; mov eax, 0; test dl, dl; cmovne eax, ecx; add rsp, 8; ret; 
0x0000000000447c00: or edi, dword ptr [rsi]; jmp rcx; 
0x000000000044f562: or edi, eax; mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x0000000000473f5b: or edi, ebx; jmp qword ptr [rsi - 0x70]; 
0x000000000044f239: or edx, 0x40; mov eax, ecx; syscall; 
0x0000000000443dbf: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000044d97b: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000443f80: or edx, ecx; bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000046bc1a: or edx, ecx; mov qword ptr [rsp - 0x10], rdx; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x0000000000499b35: or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000468e69: or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x000000000044bc47: or esi, ebx; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004386d3: or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x0000000000468ea7: or esi, ecx; or esi, edx; shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x0000000000468ed4: or esi, edx; mov qword ptr [rsp - 0x18], rax; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000468e6b: or esi, edx; movd xmm0, esi; ret; 
0x0000000000468ea9: or esi, edx; shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x000000000041af81: or esp, dword ptr [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000451be0: or qword ptr [rax + 0xf], rcx; ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000044f238: or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000000438822: or r11b, r14b; movq qword ptr [rdi], mm1; ret; 
0x00000000004387b2: or r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x0000000000496c92: or r13, r14; movzx edi, al; lea rax, qword ptr [rip + 0x236d9]; movsxd r13, dword ptr [rax + r13*4]; add rax, r13; jmp rax; 
0x000000000042cf91: or r14b, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000438742: or r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x00000000004386d2: or r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x0000000000497840: or r8, rdx; mov qword ptr [rsi], r8; ret; 
0x0000000000482175: or r8d, dword ptr [r8]; add byte ptr [rax - 0x73], cl; add eax, 0x8a0; cmove rax, rdx; ret; 
0x000000000045fed0: or r9d, edx; mov eax, 0; test dil, dil; cmovne eax, ecx; add rsp, 8; ret; 
0x0000000000476f39: or rax, 0x401f0f08; add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0xbe04; 
0x0000000000416c09: or rax, 0x401f0f08; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000044e260: or rax, 0xffffffffffffffff; ret; 
0x0000000000497709: or rax, 1; pop rbx; ret; 
0x00000000004810b2: or rax, qword ptr [r8]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000443756: or rax, rcx; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x000000000044375d: or rax, rdx; bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x0000000000468eaf: or rax, rsi; movq xmm0, rax; ret; 
0x000000000049758a: or rcx, r9; setne al; ret; 
0x00000000004286a6: or rcx, rsi; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000044f561: or rdi, rax; mov qword ptr [rdx], rdi; pop rbx; pop rbp; ret; 
0x0000000000443dbe: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000044d97a: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000443f7f: or rdx, rcx; bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000046bc19: or rdx, rcx; mov qword ptr [rsp - 0x10], rdx; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x00000000004978df: out 0, al; add byte ptr [rax], al; movsxd rcx, dword ptr [r15 + rcx*4]; add rcx, r15; jmp rcx; 
0x0000000000468e62: out 0x17, al; and eax, 0x7fffff; or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x0000000000468ead: out 0x20, al; or rax, rsi; movq xmm0, rax; ret; 
0x000000000044d9a6: out 0x36, al; sti; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x0000000000418293: out 0x41, al; call qword ptr [rbp + 0x38]; 
0x00000000004743a7: out 0x44, eax; mov dword ptr [rbp - 0x4e8], eax; call qword ptr [rbx + 0x38]; 
0x0000000000415036: out 0x44, eax; mov dword ptr [rbp - 0x4f8], ecx; call qword ptr [rax + 0x38]; 
0x00000000004144a8: out 0x44, eax; mov dword ptr [rbp - 0x500], ecx; call qword ptr [rbx + 0x38]; 
0x00000000004756c3: out 0x44, eax; mov dword ptr [rbp - 0x508], eax; mov qword ptr [rbp - 0x500], r9; call qword ptr [rax + 0x38]; 
0x0000000000454c52: out 0x48, al; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000499eb9: out 0x48, al; mov dword ptr [rdi + rsi*8], edx; add rsp, 8; ret; 
0x000000000048f6d4: out 0x48, al; mov dword ptr [rdi], esi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000045f149: out 0x48, al; mov esi, dword ptr [rsp + 0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000000044cd71: out 0x48, eax; mov esi, dword ptr [rsp + 0x18]; call rbx; 
0x0000000000474223: out 0x48, eax; sar eax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000425888: out 0x48, eax; sub eax, 0x10; ret; 
0x000000000044bb33: out 0x49, eax; jmp qword ptr [rdx - 0x2f]; 
0x0000000000432786: out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000411db4: out 0x4c, al; mov edi, esi; call qword ptr [rcx + 0x38]; 
0x000000000045ee55: out 0x4c, al; mov edi, esi; call rbx; 
0x000000000044cc1b: out 0x4c, eax; lea ecx, dword ptr [rsp + 0x30]; call rbx; 
0x000000000041527b: out 0x4c, eax; mov dword ptr [rbp - 0x510], edx; call qword ptr [rax + 0x38]; 
0x00000000004325b6: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b2: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325fe: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000473cee: out 0x4c, eax; sub ebx, esi; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x00000000004139ae: out 0x4d, eax; sub edi, ebp; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x0000000000478381: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000041b1dc: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000049ca26: out 0x5b, al; ret; 
0x000000000044ce36: out 0x60, al; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000456bdb: out 0x72, eax; ret 0x8d48; 
0x0000000000427055: out 0x7a, eax; add byte ptr [rax], al; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x000000000041175d: out 0x83, al; ret; 
0x000000000040ec73: out 0x83, eax; ret; 
0x0000000000494f11: out 0x89, al; out dx, eax; call qword ptr [rax]; 
0x0000000000494db5: out 0x89, al; out dx, eax; call qword ptr [rbx]; 
0x0000000000494d77: out 0x89, al; out dx, eax; call rax; 
0x0000000000482ed2: out 0x89, al; out dx, eax; mov eax, 0xe4; syscall; 
0x000000000041e515: out 0xa, eax; add al, ch; ret; 
0x0000000000420ac6: out 0xc1, al; or al, byte ptr [rax]; syscall; 
0x0000000000419018: out 0xe8, eax; ret 0x10; 
0x000000000040ca98: out 0xe8, eax; ret 0x10c; 
0x00000000004900f8: out 0xe8, eax; ret 0xf70f; 
0x000000000044c104: out 0xf0, al; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000437fba: out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000043803a: out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000485ca0: out 0xf9, eax; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x000000000041c1d6: out 0xff, al; dec dword ptr [rax + 0x39]; ret; 
0x000000000046e213: out 0xff, al; inc dword ptr [rbx - 0x9b43]; jmp qword ptr [rsi + 0xf]; 
0x000000000046eb51: out 0xff, al; jmp qword ptr [rsi + 0x66]; 
0x000000000040b110: out 0xff, eax; dec dword ptr [rbx - 0x6276b]; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x9589; 
0x0000000000475352: out 0xff, eax; push rax; cmp byte ptr [rax + 0x39], cl; ret; 
0x0000000000426176: out 1, al; add byte ptr [rax - 0x73], cl; adc eax, 0x1e8a0; cmovne rax, rdx; ret; 
0x0000000000426f53: out 2, al; lea rax, qword ptr [rip + 0x14eb4]; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x000000000042645a: out 2, al; lea rax, qword ptr [rip + 0x39fd]; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x0000000000478ef3: out 2, al; lea rax, qword ptr [rip + 0x7f4]; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000426c61: out 2, al; lea rax, qword ptr [rip + 0x8026]; lea rdx, qword ptr [rip + 0x2212f]; cmovne rax, rdx; ret; 
0x000000000045e72f: out 6, eax; add byte ptr [rcx + rcx*4 + 0x25], al; ret; 
0x0000000000407d4f: out dx, al; add r15, qword ptr [rsp]; mov rdi, r12; call rcx; 
0x0000000000412a8c: out dx, al; idiv edi; inc edi; test esp, edx; idiv bh; call qword ptr [rax]; 
0x00000000004383c0: out dx, al; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000405f0d: out dx, al; mov cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000044e3de: out dx, al; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000043278a: out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044e454: out dx, al; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000000407b6f: out dx, al; mov rdi, r12; call rax; 
0x00000000004139ab: out dx, al; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000041817c: out dx, al; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x00000000004383ca: out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044285e: out dx, al; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004082fd: out dx, al; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000048cbb7: out dx, al; syscall; 
0x000000000048f6b3: out dx, al; xor al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x000000000049bcfd: out dx, eax; adc eax, 0x89480003; xor eax, 0x315e8; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x00000000004659f1: out dx, eax; adc eax, dword ptr [rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x000000000047280a: out dx, eax; add dword ptr [rax - 0x93743], eax; jmp qword ptr [rax]; 
0x000000000044d56e: out dx, eax; add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x0000000000472804: out dx, eax; add eax, dword ptr [rax]; add byte ptr [rcx - 0x7d], al; out dx, eax; add dword ptr [rax - 0x93743], eax; jmp qword ptr [rax]; 
0x0000000000484a5e: out dx, eax; add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x000000000048fc0d: out dx, eax; add esi, dword ptr [rdi - 0x7fe0f001]; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000041e14d: out dx, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041e1a5: out dx, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041898e: out dx, eax; call qword ptr [rax + 0x18]; 
0x0000000000494f13: out dx, eax; call qword ptr [rax]; 
0x00000000004176dd: out dx, eax; call qword ptr [rbx + 0x10]; 
0x000000000041b99e: out dx, eax; call qword ptr [rbx + 0x40]; 
0x0000000000494db7: out dx, eax; call qword ptr [rbx]; 
0x000000000041b46d: out dx, eax; call rax; 
0x000000000049c5fa: out dx, eax; call rbx; 
0x000000000041682d: out dx, eax; fild dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8548; 
0x0000000000438440: out dx, eax; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044e6aa: out dx, eax; mov eax, 0x4f; syscall; 
0x00000000004218ae: out dx, eax; mov eax, 0xca; syscall; 
0x0000000000482ed4: out dx, eax; mov eax, 0xe4; syscall; 
0x000000000044f1ee: out dx, eax; mov eax, 9; syscall; 
0x0000000000478553: out dx, eax; mov ecx, 1; call 0x78010; mov eax, 1; pop rbp; ret; 
0x00000000004325ba: out dx, eax; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b6: out dx, eax; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000432602: out dx, eax; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044f367: out dx, eax; mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000004139b1: out dx, eax; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000045ee6a: out dx, eax; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x000000000044d689: out dx, eax; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x0000000000450987: out dx, eax; mov rsi, r8; call 0x50920; add rsp, 0x10; pop rbp; ret; 
0x000000000043844a: out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044295d: out dx, eax; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041940b: out dx, eax; pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000478385: out dx, eax; pop rbp; pop r12; jmp rax; 
0x000000000041b1e0: out dx, eax; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000041b16f: out dx, eax; pop rbx; pop rbp; jmp rax; 
0x000000000042f513: out dx, eax; push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042f528: out dx, eax; push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042f53d: out dx, eax; push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044a743: out dx, eax; ret 0xf66; 
0x0000000000405999: out dx, eax; ret; 
0x0000000000408339: out dx, eax; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x0000000000430a2c: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x2373; 
0x0000000000430a15: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x00000000004309fe: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x000000000042f4ba: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000426d23: out dx, eax; test byte ptr [rip + 0xa600a], 2; lea rdx, qword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x000000000042f791: out dx, eax; xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042f84e: out dx, eax; xchg eax, esi; lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042f7fd: out dx, eax; xchg eax, esi; rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044085e: outsb dx, byte ptr [rsi]; adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000448b6e: outsb dx, byte ptr [rsi]; add dword ptr [rax], eax; add dh, dh; ret 0x7504; 
0x00000000004710ce: outsb dx, byte ptr [rsi]; idiv ebp; jmp qword ptr [rsi + 0x66]; 
0x0000000000468750: outsb dx, byte ptr [rsi]; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000045291e: outsb dx, byte ptr [rsi]; ret; 
0x000000000049c81c: outsb dx, byte ptr [rsi]; sti; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004617a6: outsb dx, byte ptr [rsi]; syscall; 
0x000000000044b120: outsd dx, dword ptr [rsi]; adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x000000000046bc23: outsd dx, dword ptr [rsi]; and al, 0xe8; pinsrw xmm0, eax, 6; ret; 
0x00000000004305a8: outsd dx, dword ptr [rsi]; call 0xf69ee61; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043bc40: outsd dx, dword ptr [rsi]; cli; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043058d: outsd dx, dword ptr [rsi]; fdiv dword ptr [rdx - 0x10f09928]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043038d: outsd dx, dword ptr [rsi]; fdiv qword ptr [rdx - 0x10f09924]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000427298: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x000000000043c1ce: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x000000000043050d: outsd dx, dword ptr [rsi]; fnstenv dword ptr [rdx - 0x10f09927]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004272de: outsd dx, dword ptr [rsi]; fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x0000000000430257: outsd dx, dword ptr [rsi]; movabs rbp, 0xf66d1ef0f66bdb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000430357: outsd dx, dword ptr [rsi]; movabs rsp, 0xf66d1ef0f66bcb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043bd98: outsd dx, dword ptr [rsi]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000043048d: outsd dx, dword ptr [rsi]; push rdi; fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043028d: outsd dx, dword ptr [rsi]; push rdi; fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004308cd: outsd dx, dword ptr [rsi]; push rdi; ret 0xff3; 
0x000000000043082d: outsd dx, dword ptr [rsi]; push rdi; ret; 
0x0000000000481d6a: outsd dx, dword ptr [rsi]; push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x0000000000447ff6: outsd dx, dword ptr [rsi]; push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004300bd: outsd dx, dword ptr [rsi]; push rsi; fbstp dword ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043018d: outsd dx, dword ptr [rsi]; push rsi; fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000448656: outsd dx, dword ptr [rsi]; push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f96: outsd dx, dword ptr [rsi]; push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000046c2a0: outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000046d46d: outsd dx, dword ptr [rsi]; ret 0x2be; 
0x000000000046c2c1: outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000044a6ec: outsd dx, dword ptr [rsi]; ret; 
0x00000000004308ed: outsd dx, dword ptr [rsi]; sal byte ptr [rdx - 0x10f0992e], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000430a0e: outsd dx, dword ptr [rsi]; sal byte ptr [rdx - 0x10f09930], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000043084d: outsd dx, dword ptr [rsi]; sal qword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043098d: outsd dx, dword ptr [rsi]; sal qword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000048f11e: outsd dx, dword ptr [rsi]; sbb byte ptr [rbx + rcx*4 + 0x77], cl; and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000048c96d: paddw mm7, mm7; jmp qword ptr [rsi + 0x66]; 
0x0000000000482c14: pcmpeqb mm3, qword ptr [rcx]; add rax, 2; ret; 
0x0000000000482bff: pcmpeqb mm3, qword ptr [rsi]; ret; 
0x0000000000468ece: pcmpgtd mm0, qword ptr [rcx + 0x97fffe6]; salc; mov qword ptr [rsp - 0x18], rax; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x000000000044ab78: pcmpistri xmm3, xmm3, 0x3a; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000044be5a: pextrw edi, mm0, 0x77; ret; 
0x00000000004804d7: pi2fd mm6, qword ptr [rsi - 0x72b7f1ec]; cmp eax, 0x8b000247; add al, 0x81; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000046bc28: pinsrw mm0, eax, 6; ret; 
0x000000000046bc27: pinsrw xmm0, eax, 6; ret; 
0x000000000042e52c: pmovmskb eax, mm1; bsf eax, eax; lea rax, qword ptr [rdi + rax + 0x30]; ret; 
0x000000000042e52b: pmovmskb eax, xmm1; bsf eax, eax; lea rax, qword ptr [rdi + rax + 0x30]; ret; 
0x0000000000467078: pop qword ptr [rcx - 0x45]; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret 0xffff; 
0x0000000000424597: pop r12; jmp rax; 
0x0000000000424854: pop r12; mov rax, r8; pop r13; ret; 
0x000000000041b1e2: pop r12; pop r13; jmp rax; 
0x0000000000470f43: pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x0000000000424eab: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x000000000040344c: pop r12; pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004017d3: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000407889: pop r12; pop r13; pop r14; ret; 
0x000000000044d0e2: pop r12; pop r13; pop rbp; ret; 
0x000000000040325b: pop r12; pop r13; ret; 
0x000000000040297a: pop r12; ret; 
0x0000000000452e85: pop r12; shl eax, cl; ret; 
0x000000000041b1e4: pop r13; jmp rax; 
0x0000000000470f45: pop r13; mov rax, r9; pop r14; ret; 
0x0000000000424ead: pop r13; pop r14; pop r15; jmp rax; 
0x000000000040344e: pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004017d5: pop r13; pop r14; pop r15; ret; 
0x000000000040788b: pop r13; pop r14; ret; 
0x000000000044d0e4: pop r13; pop rbp; ret; 
0x000000000040325d: pop r13; ret; 
0x000000000045d5f5: pop r14; mov byte ptr [rdi], 0; ret; 
0x0000000000424eaf: pop r14; pop r15; jmp rax; 
0x0000000000403450: pop r14; pop r15; pop rbp; ret; 
0x00000000004017d7: pop r14; pop r15; ret; 
0x000000000040788d: pop r14; ret; 
0x0000000000424eb1: pop r15; jmp rax; 
0x0000000000403452: pop r15; pop rbp; ret; 
0x00000000004017d9: pop r15; ret; 
0x000000000041d49c: pop r8; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000044f540: pop rax; adc byte ptr [rax - 0x77], cl; or byte ptr [r9 - 0x75], r9b; or byte ptr [r11 + 0x94901e0], al; ret 0x894d; 
0x0000000000497973: pop rax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rcx]; 
0x0000000000456560: pop rax; call rbx; 
0x000000000048e7e0: pop rax; jmp qword ptr [rax]; 
0x000000000041d49d: pop rax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004568ee: pop rax; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000455897: pop rax; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000045633a: pop rax; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045a387: pop rax; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x0000000000456054: pop rax; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x0000000000455dc0: pop rax; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000041797f: pop rax; mov rdi, rbx; call qword ptr [rbp + 0x60]; 
0x000000000045e8d1: pop rax; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x00000000004077e4: pop rax; or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x000000000048e8aa: pop rax; pop rdx; pop rbx; ret; 
0x0000000000426e64: pop rax; pushfq; add byte ptr [rax], al; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x000000000044eea0: pop rax; ret; 
0x000000000041b171: pop rbp; jmp rax; 
0x000000000041fdfe: pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000401be1: pop rbp; mov edi, 0x4cbb10; jmp rax; 
0x00000000004795c0: pop rbp; mov qword ptr [r12], r14; pop r12; pop r13; pop r14; ret; 
0x000000000041940c: pop rbp; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000478a04: pop rbp; mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x0000000000478ea7: pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000403067: pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000490914: pop rbp; mov rax, r13; pop r12; pop r13; ret; 
0x00000000004247f1: pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x000000000042026c: pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000406be4: pop rbp; mov rax, r9; pop r12; ret; 
0x0000000000470f46: pop rbp; mov rax, r9; pop r14; ret; 
0x0000000000401c1e: pop rbp; mov rsi, rax; mov edi, 0x4cbb10; jmp rdx; 
0x0000000000426fc3: pop rbp; or al, byte ptr [rax]; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000424596: pop rbp; pop r12; jmp rax; 
0x0000000000424853: pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x000000000041b1e1: pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000424eaa: pop rbp; pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x00000000004017d2: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000407888: pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000040325a: pop rbp; pop r12; pop r13; ret; 
0x0000000000402979: pop rbp; pop r12; ret; 
0x0000000000424eae: pop rbp; pop r14; pop r15; jmp rax; 
0x000000000040344f: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x00000000004017d6: pop rbp; pop r14; pop r15; ret; 
0x000000000040788c: pop rbp; pop r14; ret; 
0x000000000044d0e5: pop rbp; pop rbp; ret; 
0x0000000000468e48: pop rbp; pop rbx; ret; 
0x0000000000401bd5: pop rbp; ret; 
0x0000000000452e81: pop rbp; shl ecx, 3; pop r12; shl eax, cl; ret; 
0x000000000047098b: pop rbp; sub dword ptr [rip + 0x5c599], 1; pop r12; ret; 
0x0000000000403faf: pop rbp; test al, 5; add byte ptr [rax - 0x76b7bcc8], al; ret; 
0x00000000004625bb: pop rbx; add al, byte ptr [rip + 0x3d8d4800]; ret 0x4fe; 
0x0000000000491b1f: pop rbx; add rax, qword ptr [rdx + 8]; pop rbp; pop r12; jmp rax; 
0x000000000044c1b6: pop rbx; and eax, 0x7ff80000; ret; 
0x0000000000452dc6: pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x7aa21], eax; ret; 
0x0000000000452d96: pop rbx; and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x7aa51], eax; ret; 
0x0000000000452cf6: pop rbx; and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x7aaf1], eax; ret; 
0x0000000000452d26: pop rbx; and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x7aac1], eax; ret; 
0x000000000044c10b: pop rbx; cmove rax, rdx; ret; 
0x000000000044c19b: pop rbx; cmovne rax, rdx; ret; 
0x000000000041d618: pop rbx; jmp rax; 
0x00000000004554e1: pop rbx; mov bl, 0xff; jmp qword ptr [rsi + 0x66]; 
0x000000000041de40: pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000470ae8: pop rbx; mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x000000000041de20: pop rbx; mov eax, 1; pop rbp; pop r12; ret; 
0x000000000048ce0b: pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000044c1fe: pop rbx; mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000049569f: pop rbx; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000046ec0a: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000470987: pop rbx; mov eax, r8d; pop rbp; sub dword ptr [rip + 0x5c599], 1; pop r12; ret; 
0x0000000000418981: pop rbx; mov rax, qword ptr [rsp + 8]; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax + 0x18]; 
0x0000000000420089: pop rbx; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000044f7b7: pop rbx; mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x0000000000417f57: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000478382: pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000041b1dd: pop rbx; mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000048cdee: pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x000000000044d0e1: pop rbx; pop r12; pop r13; pop rbp; ret; 
0x000000000044f0f4: pop rbx; pop r12; ret; 
0x000000000045d5f4: pop rbx; pop r14; mov byte ptr [rdi], 0; ret; 
0x000000000041b170: pop rbx; pop rbp; jmp rax; 
0x0000000000403066: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000490913: pop rbx; pop rbp; mov rax, r13; pop r12; pop r13; ret; 
0x000000000042026b: pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000406be3: pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x0000000000424595: pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000407887: pop rbx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000403259: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402978: pop rbx; pop rbp; pop r12; ret; 
0x00000000004031da: pop rbx; pop rbp; ret; 
0x0000000000452e80: pop rbx; pop rbp; shl ecx, 3; pop r12; shl eax, cl; ret; 
0x0000000000401f7b: pop rbx; ret; 
0x000000000041c1dc: pop rbx; setne al; movzx eax, al; neg eax; ret; 
0x000000000044c11a: pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000044c165: pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000041bccf: pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000041c0e0: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000004237c3: pop rcx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x000000000041760b: pop rcx; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000043bd99: pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000043b76c: pop rcx; jmp qword ptr [rdx - 0xf]; 
0x000000000040b10f: pop rcx; out 0xff, eax; dec dword ptr [rbx - 0x6276b]; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x9589; 
0x000000000048d953: pop rcx; sub al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000442fed: pop rdi; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004677cb: pop rdi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000045e4c3: pop rdi; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000432b59: pop rdi; in al, dx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432969: pop rdi; in eax, dx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000424eb2: pop rdi; jmp rax; 
0x000000000045bb55: pop rdi; jp 0x5bb5c; add al, ch; ret 0xfa73; 
0x00000000004177bf: pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000432789: pop rdi; out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004325b9: pop rdi; out dx, eax; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b5: pop rdi; out dx, eax; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000432601: pop rdi; out dx, eax; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000403453: pop rdi; pop rbp; ret; 
0x00000000004017da: pop rdi; ret; 
0x000000000042d896: pop rdx; add eax, 0x83480000; ret 0x4910; 
0x0000000000467899: pop rdx; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000415762: pop rdx; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000042364a: pop rdx; pop rbp; pop r12; ret; 
0x000000000048e8ab: pop rdx; pop rbx; ret; 
0x000000000045e4c2: pop rdx; pop rdi; cld; dec dword ptr [rax - 0x77]; ret; 
0x00000000004261e9: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000442eee: pop rsi; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000047001e: pop rsi; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045d5f6: pop rsi; mov byte ptr [rdi], 0; ret; 
0x000000000041d519: pop rsi; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp + 0x18]; 
0x0000000000426e53: pop rsi; or al, byte ptr [rax]; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000424eb0: pop rsi; pop r15; jmp rax; 
0x0000000000403451: pop rsi; pop r15; pop rbp; ret; 
0x00000000004017d8: pop rsi; pop r15; ret; 
0x0000000000423c5e: pop rsi; ret 0xffff; 
0x000000000040788e: pop rsi; ret; 
0x0000000000440a70: pop rsp; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042db94: pop rsp; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000441770: pop rsp; add eax, 0x83480000; ret 0xe910; 
0x000000000044f682: pop rsp; and al, 0x10; call rax; 
0x000000000048e852: pop rsp; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d0: pop rsp; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000413223: pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x0000000000424598: pop rsp; jmp rax; 
0x000000000048f803: pop rsp; mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x0000000000424855: pop rsp; mov rax, r8; pop r13; ret; 
0x000000000041b1e3: pop rsp; pop r13; jmp rax; 
0x0000000000470f44: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x0000000000424eac: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x000000000040344d: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004017d4: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000040788a: pop rsp; pop r13; pop r14; ret; 
0x000000000044d0e3: pop rsp; pop r13; pop rbp; ret; 
0x000000000040325c: pop rsp; pop r13; ret; 
0x0000000000470c28: pop rsp; ret 0x64c0; 
0x0000000000456cc0: pop rsp; ret 0xfffa; 
0x000000000040297b: pop rsp; ret; 
0x0000000000452e86: pop rsp; shl eax, cl; ret; 
0x000000000044db8f: popfq; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x000000000040628b: popfq; call 0x1000628e; test dword ptr [rbx], edx; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 + 0xd], cl; ret; 
0x00000000004778f7: popfq; clc; jmp qword ptr [rsi + 0xf]; 
0x000000000045c9cf: popfq; cmp ah, 0xff; nop dword ptr [rax + rax]; ret; 
0x0000000000413222: popfq; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x0000000000405aeb: popfq; ret 9; 
0x000000000046ccde: popfq; sar dh, 0xff; inc dword ptr [rax - 0x7bf09a05]; or byte ptr fs:[rax], al; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x000000000047e6a0: popfq; sbb eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004906c5: psrlw mm0, qword ptr [rbx]; add byte ptr [rbp + 0x480375d2], al; mov dword ptr [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000456508: psubsw mm1, qword ptr [rsi + rdi*8 - 1]; jmp qword ptr [rsi - 0x70]; 
0x000000000045c780: push -0x1605feb4; ret 0xfffe; 
0x000000000040b634: push -0x17000007; ret; 
0x000000000048db9b: push -0x76b70007; ret; 
0x00000000004618f9: push -0x8ae17; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000464179: push -0x8be17; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000461891: push -0x95617; jmp qword ptr [rsi + 0xf]; 
0x0000000000464111: push -0x96617; jmp qword ptr [rsi + 0xf]; 
0x0000000000448b54: push -0x9ffffff; ret 0x7501; 
0x000000000044c4d0: push -5; jmp qword ptr [rsi + 0x66]; 
0x000000000048c511: push -9; jmp qword ptr [rsi + 0x66]; 
0x000000000048239f: push 0; lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000044ca4b: push 0; lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000045632a: push 0; mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x000000000045971d: push 0; mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x0000000000458af5: push 0; mov r9, qword ptr [rsp + 0x38]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000453508: push 0; mov r9, r14; mov rsi, qword ptr [rsp + 0x18]; xor r8d, r8d; call rbx; 
0x0000000000456eb9: push 0; mov rcx, qword ptr [rsp + 0x28]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045aa22: push 0; mov rcx, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000044cd65: push 0; mov rdx, r13; mov r9, qword ptr [rsp + 0x10]; mov rdi, r12; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000044cc11: push 0; mov rdx, r13; xor r8d, r8d; mov rdi, r12; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x00000000004568e3: push 0; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045588c: push 0; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x000000000044d67d: push 0; xor r8d, r8d; mov rcx, qword ptr [rsp + 0x20]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000044d4fb: push 0; xor r8d, r8d; mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000041d6ef: push 0x20438b48; add rsp, 8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000000455dbb: push 0x24748b48; pop rax; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004669e6: push 0x320d8d48; ret 4; 
0x0000000000482300: push 0x5c415d5b; pop r13; ret; 
0x0000000000424412: push 0x63; or al, byte ptr [rax]; ret; 
0x000000000040830e: push 0x66ffffff; nop dword ptr [rax + rax]; mov rax, qword ptr [rax + 0x18]; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000423632: push 0x71; or al, byte ptr [rax]; syscall; 
0x000000000044c9df: push 1; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x0000000000482399: push 1; mov rdi, qword ptr [r12]; push 0; lea rcx, qword ptr [rax + 1]; lea r9, qword ptr [rsp + 0x28]; call rbx; 
0x000000000044ca49: push 1; push 0; lea rcx, qword ptr [rax + 4]; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000044c9db: push 1; xor edx, edx; push 1; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x00000000004784fd: push qword ptr [rax + rcx + 0x5d]; ret; 
0x000000000044a4d8: push qword ptr [rbp + 0x1a]; xor eax, eax; ret; 
0x000000000044f44c: push qword ptr [rbp + 0x27]; mov rdi, qword ptr [rbp]; call rbx; 
0x000000000042f199: push qword ptr [rbp + 4]; vzeroupper; ret; 
0x0000000000418d14: push qword ptr [rbp + 7]; mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000041b45d: push qword ptr [rbp + 7]; mov rdx, qword ptr [rbp + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000049c817: push qword ptr [rbp + rax - 0x18]; adc dword ptr [rsi - 5], ebp; dec dword ptr [rax - 0x7d]; ret; 
0x000000000049a772: push qword ptr [rbp + rbp*8 - 0x18]; mov ch, byte ptr [rcx - 0xa]; jmp qword ptr [rsi + 0xf]; 
0x000000000041e0a6: push qword ptr [rbp + rcx - 0x18]; ret 0x69; 
0x000000000041e1e0: push qword ptr [rbp - 0x40]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044e250: push qword ptr [rbx + 1]; ret; 
0x000000000041e148: push qword ptr [rbx + rax - 0x7d]; and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000478ab9: push qword ptr [rbx + rax - 0x7d]; and ebp, edi; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040266e: push qword ptr [rcx]; idiv byte ptr [rdi + 0x3003]; mov eax, 0x9e; syscall; 
0x0000000000405e5c: push qword ptr [rcx]; imul cl; ret; 
0x000000000040979b: push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f025], 0x29; ret; 
0x00000000004097ee: push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x8b48; 
0x000000000040b118: push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x9589; 
0x000000000041cb53: push qword ptr [rcx]; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000048fc88: push qword ptr [rcx]; ror byte ptr [rcx + 0x438b4803], cl; sbb byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x000000000044dd4b: push qword ptr [rdi + 0x22]; hlt; mov edi, edx; mov eax, r8d; syscall; 
0x000000000044e57c: push qword ptr [rdi + 0x51]; ret; 
0x000000000044e4d7: push qword ptr [rdi + 0x56]; ret; 
0x000000000044f1fb: push qword ptr [rdi + 0x62]; pop rbx; pop rbp; ret; 
0x0000000000490383: push qword ptr [rdi + 0xa]; ret; 
0x000000000044f079: push qword ptr [rdi + 4]; ret; 
0x000000000044e610: push qword ptr [rdi + 5]; ret; 
0x000000000044e2ef: push qword ptr [rdi + 6]; ret; 
0x000000000044e34e: push qword ptr [rdi + 7]; ret; 
0x000000000044f00d: push qword ptr [rdi + 8]; ret; 
0x00000000004834e4: push qword ptr [rdi + 9]; ret; 
0x00000000004243b3: push qword ptr [rdi + rax + 0x48]; mov dword ptr [rip + 0xa88eb], edx; mov dword ptr [rip + 0xa88d9], 0; ret; 
0x000000000044f1e6: push qword ptr [rdi + rsi + 0x41]; mov edx, ebx; mov rdi, rbp; mov eax, 9; syscall; 
0x0000000000482ee4: push qword ptr [rdi - 0x37]; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000044ddd5: push qword ptr [rdx]; sti; dec dword ptr [rax - 0x77]; ret; 
0x0000000000470e6f: push qword ptr [rsi - 0x32]; mov qword ptr [rdi], rsi; ret; 
0x000000000041d8b1: push qword ptr [rsp + rax - 0x58]; add dword ptr [rax + rbp - 0x77], esi; ret 0xc883; 
0x000000000044e6a2: push qword ptr [rsp + rbx*8 + 0x48]; mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000040296e: push qword ptr [rsp + rcx + 0x48]; add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x00000000004570c9: push r12; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045ad93: push r12; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045828f: push r12; mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000457815: push r12; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045a381: push r12; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x0000000000456550: push r14; mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x000000000041e020: push r8; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041d5c6: push r8; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041ec79: push rax; adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x0000000000426def: push rax; add al, byte ptr [rax]; lea rax, qword ptr [rip + 0x25117]; cmove rax, rdx; ret; 
0x0000000000478648: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x48], 0; pop rbx; ret; 
0x000000000041e021: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx + 0xe0], r8; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000041d5c7: push rax; add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041fa14: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0xaad33; ret; 
0x000000000040918a: push rax; add dword ptr [rax - 0x77], ecx; adc eax, dword ptr [rax - 0x78]; sub byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000046f8e0: push rax; add dword ptr [rax - 0x77], ecx; push rbp; sub dh, al; add byte ptr [rip - 0x60d17], ch; jmp qword ptr [rsi - 0x70]; 
0x0000000000470170: push rax; add dword ptr [rax - 0x77], ecx; push rbp; sub dh, al; add byte ptr [rip - 0xaa517], ch; jmp qword ptr [rsi - 0x70]; 
0x0000000000411706: push rax; add dword ptr [rcx - 0x77], ecx; push rsi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000044cafc: push rax; add eax, 0x641ce800; sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000004021db: push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x0000000000453588: push rax; call rbx; 
0x000000000045dea2: push rax; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000475354: push rax; cmp byte ptr [rax + 0x39], cl; ret; 
0x000000000047046f: push rax; cmp dword ptr [rdi], ecx; test byte ptr [rbx], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x0000000000458036: push rax; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000491aee: push rax; inc dword ptr [rbp + 0x481a74c0]; lea ebx, dword ptr [rbp + rdx*8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000045781b: push rax; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000459728: push rax; mov rdi, qword ptr [rsp + 0x48]; mov rax, qword ptr [rsp + 0x20]; call rax; 
0x000000000045655b: push rax; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x00000000004568e9: push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x0000000000455892: push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000456335: push rax; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x30]; call rax; 
0x00000000004086f6: push rax; or al, 0; syscall; 
0x00000000004843ec: push rax; or byte ptr [rax - 0x75], cl; xor al, ch; ret 0xf7cc; 
0x0000000000477ff7: push rax; or byte ptr [rax - 0x77], cl; jo 0x7800d; mov qword ptr [rax + 0x40], rcx; mov qword ptr [rax], rdx; ret; 
0x00000000004516f9: push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x000000000041fef5: push rax; or dh, dh; ret 0x7502; 
0x00000000004570c8: push rax; push r12; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045ad92: push rax; push r12; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045828e: push rax; push r12; mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000457814: push rax; push r12; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045a380: push rax; push r12; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x000000000045654f: push rax; push r14; mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x0000000000456b7d: push rax; push rbp; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x0000000000456049: push rax; push rbp; mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x000000000041ec6a: push rax; sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x0000000000478585: push rax; sbb byte ptr [rsi + 0x1f], dh; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x0000000000472bcf: push rbp; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000408023: push rbp; add byte ptr [rcx - 0xc1767ab], cl; ret; 
0x0000000000499c36: push rbp; add byte ptr [rsi + 0xa], bh; mov edi, 1; call rax; 
0x000000000049a105: push rbp; add byte ptr [rsi + 1], bh; mov edi, 1; call rax; 
0x0000000000419858: push rbp; add dh, dh; ret 0x7402; 
0x000000000044c239: push rbp; add eax, 0x6cdfe800; sti; jmp qword ptr [rsi + 0x66]; 
0x0000000000422ff6: push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x0000000000418296: push rbp; cmp byte ptr [rax + 0x39], cl; ret; 
0x0000000000456b7e: push rbp; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x000000000045604a: push rbp; mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x000000000047f7e8: push rbp; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000048cba9: push rbp; push rbx; sub rsp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000046f8e4: push rbp; sub dh, al; add byte ptr [rip - 0x60d17], ch; jmp qword ptr [rsi - 0x70]; 
0x0000000000470174: push rbp; sub dh, al; add byte ptr [rip - 0xaa517], ch; jmp qword ptr [rsi - 0x70]; 
0x000000000041b462: push rbp; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000000492e64: push rbp; test al, 0x89; mov r8b, 0xe8; ret 0xf6e1; 
0x000000000041e1dc: push rbp; xor byte ptr [rbx - 0x3f8a0008], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004188d1: push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000402372: push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000406132: push rbx; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000485119: push rbx; and byte ptr [rcx - 0x75], cl; sub byte ptr [rax + 0x39], r9b; ret 0x870f; 
0x000000000049b71d: push rbx; and cl, ch; ret 0xfffb; 
0x0000000000470c19: push rbx; int 5; add byte ptr [rcx + 0x5ae4905], cl; add byte ptr [rcx + 0x63], cl; ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x0000000000418631: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041aaf2: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x00000000004083a0: push rbx; or al, 0; syscall; 
0x0000000000477122: push rbx; or al, 0xf6; ret 0xf04; 
0x000000000044f77a: push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000004664e1: push rbx; ret 4; 
0x000000000040917c: push rbx; sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x000000000048fd32: push rbx; stc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000424c0c: push rbx; sub dword ptr [rip + 0xa809c], 1; pop rbx; pop rbp; pop r12; ret; 
0x000000000048cbaa: push rbx; sub rsp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000000417052: push rbx; xor al, 0xbe; add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call rax; 
0x000000000046be0a: push rbx; xor byte ptr [rcx - 0x77], cl; ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000458345: push rcx; add al, byte ptr [rax]; add bh, dh; ret 0; 
0x0000000000426df6: push rcx; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x000000000048efdd: push rcx; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000046bb5b: push rcx; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000004618fb: push rcx; idiv edi; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x000000000048993c: push rcx; or byte ptr [rax - 0x7af0f506], al; cmp dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x00000000004231d2: push rcx; or dh, dh; ret 0x7404; 
0x00000000004231e6: push rcx; or dh, dh; ret 0xf04; 
0x000000000044e57e: push rcx; ret; 
0x000000000042104d: push rcx; sbb byte ptr [rcx + 1], cl; ret; 
0x000000000044f48a: push rdi; adc byte ptr [rcx - 0x77], cl; ret; 
0x00000000004483ca: push rdi; add al, 0x48; lea eax, dword ptr [rdi + 5]; ret; 
0x0000000000438679: push rdi; add al, 0x48; mov dword ptr [rdi], ecx; ret; 
0x00000000004176d5: push rdi; add dword ptr [rax], eax; add byte ptr [rcx], dh; test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x00000000004685ff: push rdi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000044c0b6: push rdi; add eax, 0x4634800; mov esi, 0x3ef00148; jmp rax; 
0x000000000044847c: push rdi; add eax, 0xc478d48; ret; 
0x0000000000426dc5: push rdi; add r8b, byte ptr [rax]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x00000000004443a8: push rdi; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea78: push rdi; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000004238bc: push rdi; and byte ptr [rax + 0x39], cl; ret 0x4273; 
0x0000000000411b9a: push rdi; and byte ptr [rcx + rcx*4 - 9], cl; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000450940: push rdi; and dh, al; sub byte ptr [r9], r8b; ret; 
0x0000000000432402: push rdi; call 0xfffffffff062ad54; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000432440: push rdi; call 0xfffffffff062ad92; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432478: push rdi; call 0xfffffffff062adca; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004324b6: push rdi; call 0xfffffffff062ae08; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004324ee: push rdi; call 0xfffffffff062ae40; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432516: push rdi; call 0xfffffffff062ae68; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043253e: push rdi; call 0xfffffffff062ae90; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434de2: push rdi; call 0xfffffffff062d734; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000434e20: push rdi; call 0xfffffffff062d772; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434e58: push rdi; call 0xfffffffff062d7aa; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000434e96: push rdi; call 0xfffffffff062d7e8; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434ece: push rdi; call 0xfffffffff062d820; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434ef6: push rdi; call 0xfffffffff062d848; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434f1e: push rdi; call 0xfffffffff062d870; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432448: push rdi; clc; ret; 
0x00000000004325c0: push rdi; cld; ret; 
0x00000000004330e7: push rdi; cli; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437f59: push rdi; cmc; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043048e: push rdi; fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041efd8: push rdi; fmul qword ptr [rdx]; add byte ptr [rcx], al; pop rbx; ret; 
0x000000000043028e: push rdi; fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044e25a: push rdi; fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000044e2fe: push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000044e536: push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x0000000000437ed9: push rdi; hlt; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432b55: push rdi; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432965: push rdi; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000437d2a: push rdi; int1; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000433126: push rdi; loope 0x33175; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043316e: push rdi; loope 0x331bd; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004331ac: push rdi; loope 0x331fb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004331e4: push rdi; loope 0x33233; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433222: push rdi; loope 0x33271; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043325a: push rdi; loope 0x332a9; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000433282: push rdi; loope 0x332d1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435b06: push rdi; loope 0x35b55; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435b4e: push rdi; loope 0x35b9d; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435b8c: push rdi; loope 0x35bdb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435bc4: push rdi; loope 0x35c13; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435c02: push rdi; loope 0x35c51; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435c3a: push rdi; loope 0x35c89; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000435c62: push rdi; loope 0x35cb1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000430558: push rdi; mov eax, 0xf66b8b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004303d8: push rdi; mov ebx, 0xf66bbb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004304d8: push rdi; mov ecx, 0xf66b9b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000430458: push rdi; mov edx, 0xf66bab2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041d4a4: push rdi; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000041d4d8: push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000437dba: push rdi; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000041bccd: push rdi; or byte ptr [rbx + 0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x0000000000468e3a: push rdi; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x000000000048f21a: push rdi; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x0000000000468e41: push rdi; or byte ptr [rcx - 0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000000448660: push rdi; or eax, 0x1c478d48; ret; 
0x0000000000432785: push rdi; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004325b5: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004326b1: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004325fd: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004086f5: push rdi; push rax; or al, 0; syscall; 
0x0000000000484115: push rdi; ret 0; 
0x00000000004308ce: push rdi; ret 0xff3; 
0x0000000000408a19: push rdi; ret 0xffef; 
0x000000000043082e: push rdi; ret; 
0x000000000045093a: push rdi; sbb byte ptr [rdi + 0x16], dh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000450960: push rdi; sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x00000000004261e5: push rdi; scasb al, byte ptr [rdi]; std; lcall ptr [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004332e7: push rdi; stc; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432b0a: push rdi; std; mov word ptr [rdi - 2], cx; ret; 
0x000000000044d762: push rdi; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000432ee7: push rdi; sti; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000418d19: push rdi; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x0000000000481d6b: push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000042e5c8: push rdi; xor eax, eax; ret; 
0x000000000041feae: push rdx; adc bh, dh; jmp qword ptr [rsi + 0x66]; 
0x0000000000426467: push rdx; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000044c4cb: push rdx; add eax, 0x6a4de800; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000045dc4e: push rdx; cli; jmp qword ptr [rsi + 0x66]; 
0x000000000046fb8a: push rdx; idiv edi; jmp qword ptr [rsi - 0x70]; 
0x000000000041f9ca: push rdx; lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; ret; 
0x0000000000405f32: push rdx; mov cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x00000000004995ac: push rdx; mov eax, dword ptr [rbx]; movsxd rax, dword ptr [r15 + rax*4]; add rax, r15; jmp rax; 
0x0000000000408484: push rdx; or al, 0; syscall; 
0x00000000004129ab: push rdx; or eax, 0x8b490000; mov ds, eax; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x0000000000431039: push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x00000000004486b7: push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, qword ptr [rdi + 0x1f]; ret; 
0x0000000000447ff7: push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000044fc23: push rsi; adc byte ptr [rax - 0x75], cl; push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x000000000042f514: push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000438672: push rsi; add al, 0x48; mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000438911: push rsi; add cl, byte ptr [rbx + 0x257890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000470459: push rsi; add dword ptr [rax + 0x63], ecx; ror byte ptr [rax + 0x39], cl; ret 0x9c0f; 
0x0000000000438981: push rsi; add dword ptr [rbx + 0x157890e], ecx; mov dword ptr [rdi], ecx; ret; 
0x0000000000468b8f: push rsi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x0000000000438602: push rsi; add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000448475: push rsi; add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000447e05: push rsi; add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; ret; 
0x000000000044ae13: push rsi; add eax, 0x487cf162; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004388a1: push rsi; add ecx, dword ptr [rbx + 0x357890e]; mov dword ptr [rdi], ecx; ret; 
0x00000000004483e3: push rsi; add ecx, dword ptr [rcx + 0x357890f]; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000447da3: push rsi; add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x0000000000492bc6: push rsi; add esi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000042f529: push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000432556: push rsi; clc; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432eaa: push rsi; clc; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330aa: push rsi; clc; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332aa: push rsi; clc; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043253a: push rsi; clc; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ec6: push rsi; clc; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004330c6: push rsi; clc; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004332c6: push rsi; clc; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432572: push rsi; clc; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000432ce1: push rsi; cld; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432719: push rsi; cld; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004328f9: push rsi; cld; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432ad9: push rsi; cld; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cb9: push rsi; cld; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432915: push rsi; cld; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432af5: push rsi; cld; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432cd5: push rsi; cld; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000432735: push rsi; cld; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044ac0e: push rsi; cld; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004330e1: push rsi; cli; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000437f52: push rsi; cmc; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044a016: push rsi; cmc; sub eax, edx; ret; 
0x00000000004300be: push rsi; fbstp dword ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004738f6: push rsi; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000043018e: push rsi; fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000437ed2: push rsi; hlt; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044a006: push rsi; hlt; sub eax, edx; ret; 
0x0000000000437d22: push rsi; int1; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000449fd6: push rsi; int1; sub eax, edx; ret; 
0x0000000000430088: push rsi; mov edi, 0xf66bfb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000430158: push rsi; mov esi, 0xf66beb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000456551: push rsi; mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x0000000000437e42: push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000437db2: push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000471abe: push rsi; or al, 0x84; ror byte ptr [rdi], cl; mov byte ptr [rax - 0x9ffffe9], al; ret 0xf40; 
0x0000000000471a93: push rsi; or al, 0xf6; ret 0xf08; 
0x000000000044fc27: push rsi; or byte ptr [rbx + 0x94801e2], al; ret 0x8948; 
0x000000000044fa83: push rsi; or dh, dh; ret 0x7401; 
0x000000000044f9f7: push rsi; or dh, dh; ret 0xf01; 
0x0000000000448657: push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, qword ptr [rdi + 0x1c]; ret; 
0x0000000000447f97: push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004568e2: push rsi; push 0; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x10]; call rax; 
0x000000000045588b: push rsi; push 0; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; mov rax, qword ptr [rsp + 0x28]; call rax; 
0x0000000000426466: push rsi; push rdx; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000473154: push rsi; ret 0xf10; 
0x000000000044e4d9: push rsi; ret; 
0x00000000004332e1: push rsi; stc; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432b02: push rsi; std; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x000000000044ac15: push rsi; std; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000432ee1: push rsi; sti; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000041170a: push rsi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000449fe6: push rsi; sub eax, edx; ret; 
0x0000000000438052: push rsi; test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x000000000042f53e: push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000422571: push rsp; and al, 0x10; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rax; call rsi; 
0x00000000004225d2: push rsp; and al, 0x18; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048e857: push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d5: push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000455db9: push rsp; and al, 0x68; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x000000000046bc1e: push rsp; and al, 0xf0; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x0000000000429c07: push rsp; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x00000000004570ca: push rsp; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045ad94: push rsp; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x0000000000458290: push rsp; mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000457816: push rsp; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045a382: push rsp; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x00000000004043ce: push rsp; ret 0x4820; 
0x000000000049b5bd: push rsp; ret 0x4910; 
0x0000000000422ee3: push rsp; ret; 
0x0000000000440730: pushfq; adc eax, 0x83480000; ret 0xe910; 
0x0000000000426e65: pushfq; add byte ptr [rax], al; lea rdx, qword ptr [rip + 0xf1e1]; cmovne rax, rdx; ret; 
0x000000000048222c: pushfq; cld; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x0000000000441430: pushfq; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000424c0f: pushfq; or byte ptr [rdx], 0; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x000000000042d054: pushfq; or eax, 0x83480000; ret 0xeb10; 
0x000000000041b000: pushfq; or eax, 0x8b8b000b; rol byte ptr [rax], 0; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x0000000000470462: pushfq; ret 0xb60f; 
0x00000000004570c7: rcl byte ptr [rax + 0x41], 0x54; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045ad91: rcl byte ptr [rax + 0x41], 0x54; mov r9, qword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045828d: rcl byte ptr [rax + 0x41], 0x54; mov r9, qword ptr [rsp + 0x30]; mov rsi, qword ptr [rsp + 0x48]; mov rdi, qword ptr [rsp + 0x40]; call rbx; 
0x0000000000457813: rcl byte ptr [rax + 0x41], 0x54; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045a37f: rcl byte ptr [rax + 0x41], 0x54; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x000000000045654e: rcl byte ptr [rax + 0x41], 0x56; mov r9, qword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x0000000000456b7c: rcl byte ptr [rax + 0x55], 0x4c; mov ecx, dword ptr [rsp + 0x18]; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x58]; call rbx; 
0x0000000000456048: rcl byte ptr [rax + 0x55], 0x4c; mov ecx, dword ptr [rsp + 0x20]; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x60]; call rbx; 
0x000000000040840b: rcl byte ptr [rax], 0xc2; add byte ptr [rax + 0x39], r9b; ret; 
0x0000000000422198: rcl dword ptr [rip + 0xa858a], -0x7d; ret 0x8b01; 
0x000000000048f8f3: rcl esi, 1; add eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000048fbaf: rcr byte ptr [rax + rax], 0x84; sal byte ptr [rbp + 0xa], 0x5b; ret; 
0x0000000000424852: rcr byte ptr [rbp + 0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x000000000047962b: rcr byte ptr [rbp + 0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000000417f5a: rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000041bcd2: rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x00000000004795bf: rcr byte ptr [rbp + 0x4d], 0x89; xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x0000000000468e47: rcr byte ptr [rbp + 0x5b], 1; ret; 
0x0000000000401c52: rcr byte ptr [rbp - 0x3a], 1; add eax, 0xca5c5; add ebx, esi; ret; 
0x0000000000486fe1: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000000406ed0: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000417fc2: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000424562: rcr byte ptr [rbx + 0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000000049cbff: rcr byte ptr [rbx + 0x5d], 1; pop r12; pop r13; pop r14; ret; 
0x0000000000423649: rcr byte ptr [rdx + 0x5d], 0x41; pop rsp; ret; 
0x000000000040ba22: rcr cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x00000000004263fc: rcr cl, 1; add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x0000000000452e7f: rcr dword ptr [rbx + 0x5d], -0x3f; loope 0x52e88; pop r12; shl eax, cl; ret; 
0x00000000004679d9: rcr dword ptr [rcx], -0x40; and eax, 2; sub eax, 1; ret; 
0x00000000004410ec: rcr dword ptr [rdx], 0xf; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442d49: rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000442569: rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000442959: rcr dword ptr [rdx], 0xf; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442179: rcr dword ptr [rdx], 0xf; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441c4c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044142c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x0000000000440c0c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x0000000000442318: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044176c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440f4c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044072c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044190c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x0000000000442809: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442029: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000443139: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440a6c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440ba2: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004418a2: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004413c2: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044270a: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044303a: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000441be2: rcr dword ptr [rdx], 0xf; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440ee2: rcr dword ptr [rdx], 0xf; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000440a02: rcr dword ptr [rdx], 0xf; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441702: rcr dword ptr [rdx], 0xf; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000044285a: rcr dword ptr [rdx], 0xf; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044207a: rcr dword ptr [rdx], 0xf; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f939: rep lodsd eax, dword ptr [rsi]; or al, byte ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000044aedd: rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000044aecf: rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044bc17: rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x00000000004236e2: rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000049328a: repne movsd dword ptr [rdi], dword ptr [rsi]; add eax, dword ptr [rax]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x000000000040180b: ret 0; 
0x000000000048beff: ret 0x1075; 
0x00000000004770ff: ret 0x107; 
0x000000000041901a: ret 0x10; 
0x000000000040ca9a: ret 0x10c; 
0x0000000000422f1a: ret 0x110; 
0x0000000000468e1c: ret 0x114d; 
0x000000000045d452: ret 0x11eb; 
0x000000000041c06c: ret 0x1389; 
0x000000000045fa6a: ret 0x13eb; 
0x000000000046cc7a: ret 0x144; 
0x0000000000417755: ret 0x1475; 
0x0000000000403496: ret 0x148; 
0x00000000004840e5: ret 0x149; 
0x0000000000409180: ret 0x14c; 
0x000000000043bd43: ret 0x14d; 
0x000000000047965b: ret 0x14eb; 
0x0000000000407240: ret 0x1574; 
0x000000000042eab6: ret 0x1776; 
0x000000000043bc80: ret 0x180f; 
0x000000000042e635: ret 0x1876; 
0x000000000049b291: ret 0x19e8; 
0x000000000048ad88: ret 0x1aeb; 
0x000000000046ca2c: ret 0x1b8; 
0x000000000040a836: ret 0x1ba; 
0x000000000042586a: ret 0x1c74; 
0x000000000049c84d: ret 0x1de8; 
0x0000000000416d9d: ret 0x1de9; 
0x0000000000474889: ret 0x1e74; 
0x00000000004146cc: ret 0x1f0f; 
0x000000000045e7cb: ret 0x200; 
0x0000000000461ca9: ret 0x2040; 
0x000000000044e875: ret 0x2044; 
0x0000000000415fca: ret 0x20; 
0x000000000048a818: ret 0x2148; 
0x000000000041ae1c: ret 0x214c; 
0x000000000048ba30: ret 0x2275; 
0x0000000000444918: ret 0x2288; 
0x0000000000430a32: ret 0x2373; 
0x0000000000492e31: ret 0x2476; 
0x0000000000459aa7: ret 0x25e9; 
0x0000000000443f16: ret 0x2774; 
0x0000000000475469: ret 0x27e9; 
0x0000000000432217: ret 0x280f; 
0x000000000042e625: ret 0x2876; 
0x000000000048ba9f: ret 0x28f5; 
0x000000000046c2a1: ret 0x290f; 
0x000000000049024b: ret 0x2912; 
0x0000000000444747: ret 0x2920; 
0x0000000000471688: ret 0x2941; 
0x0000000000492517: ret 0x2945; 
0x0000000000418e7b: ret 0x2948; 
0x000000000041861e: ret 0x294c; 
0x000000000048eee3: ret 0x29a; 
0x00000000004188d5: ret 0x2b48; 
0x0000000000492834: ret 0x2b49; 
0x0000000000459be9: ret 0x2be9; 
0x000000000046d46e: ret 0x2be; 
0x000000000048c7f4: ret 0x2bf; 
0x000000000048b49a: ret 0x2d0; 
0x000000000046d545: ret 0x2e66; 
0x000000000040f4d9: ret 0x2fe9; 
0x000000000041bf79: ret 0x3075; 
0x0000000000456dae: ret 0x3145; 
0x00000000004873b3: ret 0x3148; 
0x0000000000425804: ret 0x3174; 
0x0000000000456a05: ret 0x3176; 
0x00000000004660e2: ret 0x3489; 
0x0000000000466d96: ret 0x34e9; 
0x000000000042ea96: ret 0x3776; 
0x00000000004256e3: ret 0x37e9; 
0x000000000042e615: ret 0x3876; 
0x000000000041d8cc: ret 0x389; 
0x0000000000405702: ret 0x38e8; 
0x00000000004929f2: ret 0x3901; 
0x0000000000479595: ret 0x3945; 
0x000000000041774d: ret 0x3948; 
0x000000000041f5c9: ret 0x3949; 
0x0000000000421913: ret 0x394c; 
0x000000000045c2f4: ret 0x3973; 
0x000000000044a5f2: ret 0x3a01; 
0x0000000000430a1b: ret 0x3a73; 
0x0000000000491f07: ret 0x3b01; 
0x000000000044b055: ret 0x3b48; 
0x00000000004080c1: ret 0x3be9; 
0x000000000041c445: ret 0x3c01; 
0x0000000000482ede: ret 0x3d48; 
0x00000000004509db: ret 0x3fe9; 
0x00000000004970b3: ret 0x4000; 
0x0000000000406ba6: ret 0x4001; 
0x00000000004823af: ret 0x408d; 
0x000000000041cee1: ret 0x4101; 
0x00000000004090ef: ret 0x4102; 
0x000000000040e115: ret 0x4108; 
0x00000000004286ea: ret 0x4266; 
0x00000000004238c0: ret 0x4273; 
0x0000000000478054: ret 0x4389; 
0x0000000000456a2d: ret 0x4401; 
0x000000000046210d: ret 0x4418; 
0x0000000000464995: ret 0x4435; 
0x0000000000404b3a: ret 0x448b; 
0x000000000046065e: ret 0x44f6; 
0x0000000000405862: ret 0x4501; 
0x000000000041ca7f: ret 0x458b; 
0x0000000000409f9b: ret 0x4801; 
0x000000000040cfa8: ret 0x4802; 
0x0000000000471094: ret 0x4803; 
0x000000000045800e: ret 0x4804; 
0x00000000004839d4: ret 0x4807; 
0x0000000000409ec1: ret 0x4808; 
0x0000000000420b7f: ret 0x4810; 
0x000000000045e98b: ret 0x4811; 
0x0000000000403803: ret 0x481a; 
0x00000000004043cf: ret 0x4820; 
0x000000000040f61d: ret 0x4830; 
0x00000000004285f6: ret 0x4840; 
0x000000000041ec33: ret 0x4860; 
0x000000000046eb73: ret 0x4864; 
0x0000000000443c6c: ret 0x48c3; 
0x0000000000406b4c: ret 0x4901; 
0x00000000004913f8: ret 0x4902; 
0x00000000004974cb: ret 0x4904; 
0x000000000041fc91: ret 0x4907; 
0x000000000048d17d: ret 0x4908; 
0x000000000041571f: ret 0x4910; 
0x000000000045cb70: ret 0x4911; 
0x000000000041c53e: ret 0x4a8d; 
0x00000000004674aa: ret 0x4ae; 
0x000000000040ab00: ret 0x4c01; 
0x000000000046fe94: ret 0x4c02; 
0x000000000042e2fe: ret 0x4c04; 
0x000000000048c1f5: ret 0x4c08; 
0x000000000042de86: ret 0x4c20; 
0x000000000042dea6: ret 0x4c40; 
0x00000000004663ea: ret 0x4c4; 
0x000000000042dec6: ret 0x4c60; 
0x0000000000401c70: ret 0x4c; 
0x000000000048ad42: ret 0x4f10; 
0x00000000004625c2: ret 0x4fe; 
0x0000000000430a04: ret 0x5173; 
0x0000000000496938: ret 0x51e9; 
0x000000000047422a: ret 0x51ff; 
0x000000000041f15a: ret 0x52; 
0x0000000000477305: ret 0x5389; 
0x000000000044d736: ret 0x545; 
0x000000000049667e: ret 0x575; 
0x0000000000496674: ret 0x576; 
0x000000000042ea76: ret 0x5776; 
0x0000000000452426: ret 0x589; 
0x0000000000457825: ret 0x5a58; 
0x000000000044d591: ret 0x5c73; 
0x000000000041f663: ret 0x61e9; 
0x00000000004896b0: ret 0x6349; 
0x000000000048ddd7: ret 0x63e8; 
0x000000000045cb44: ret 0x6411; 
0x0000000000470c29: ret 0x64c0; 
0x0000000000495225: ret 0x65e8; 
0x000000000042e5a1: ret 0x6620; 
0x00000000004260c3: ret 0x66c3; 
0x000000000042ea66: ret 0x6776; 
0x000000000046141a: ret 0x689; 
0x000000000041e0aa: ret 0x69; 
0x00000000004570e0: ret 0x70e9; 
0x000000000044fa86: ret 0x7401; 
0x00000000004020dd: ret 0x7402; 
0x0000000000489b2e: ret 0x7403; 
0x0000000000402689: ret 0x7404; 
0x0000000000497310: ret 0x7407; 
0x0000000000402099: ret 0x7408; 
0x0000000000417b21: ret 0x7420; 
0x00000000004020ec: ret 0x7440; 
0x0000000000448b59: ret 0x7501; 
0x000000000041fef8: ret 0x7502; 
0x0000000000448b73: ret 0x7504; 
0x0000000000449f94: ret 0x7508; 
0x0000000000448b2b: ret 0x7510; 
0x0000000000426cfa: ret 0x7520; 
0x0000000000448b45: ret 0x7540; 
0x00000000004790c2: ret 0x773; 
0x000000000042f8f2: ret 0x7777; 
0x000000000049cc51: ret 0x78e0; 
0x000000000042e541: ret 0x7e20; 
0x000000000042e9cc: ret 0x7e40; 
0x000000000041fe77: ret 0x7e4; 
0x000000000042729c: ret 0x7f10; 
0x00000000004971e7: ret 0x7fff; 
0x0000000000428479: ret 0x8000; 
0x00000000004037e2: ret 0x8001; 
0x0000000000429b68: ret 0x80; 
0x0000000000429d45: ret 0x8101; 
0x000000000041398a: ret 0x8148; 
0x000000000049756d: ret 0x8166; 
0x0000000000411b44: ret 0x820f; 
0x0000000000407531: ret 0x8301; 
0x0000000000470e47: ret 0x8304; 
0x0000000000429e15: ret 0x8308; 
0x0000000000411321: ret 0x830f; 
0x0000000000429de0: ret 0x8310; 
0x0000000000429db2: ret 0x8320; 
0x000000000040189d: ret 0x8341; 
0x0000000000408570: ret 0x8348; 
0x00000000004158a6: ret 0x8349; 
0x0000000000406166: ret 0x8401; 
0x0000000000470a97: ret 0x8404; 
0x0000000000408bc6: ret 0x840f; 
0x0000000000498e7e: ret 0x8440; 
0x0000000000456e25: ret 0x8445; 
0x00000000004093d3: ret 0x8501; 
0x000000000040cfaf: ret 0x850f; 
0x00000000004142a3: ret 0x8548; 
0x00000000004140fc: ret 0x854d; 
0x0000000000409d82: ret 0x8589; 
0x000000000046cca5: ret 0x85c7; 
0x0000000000422ffa: ret 0x860f; 
0x00000000004722cf: ret 0x870f; 
0x000000000049ccf2: ret 0x8720; 
0x000000000042e645: ret 0x876; 
0x000000000049cc77: ret 0x87a0; 
0x000000000046c393: ret 0x87e; 
0x000000000049166e: ret 0x87f6; 
0x0000000000403824: ret 0x8801; 
0x000000000041d223: ret 0x8901; 
0x0000000000409112: ret 0x8941; 
0x00000000004896b3: ret 0x8944; 
0x0000000000402b4d: ret 0x8948; 
0x000000000041b889: ret 0x8949; 
0x000000000040722b: ret 0x894c; 
0x000000000044f54f: ret 0x894d; 
0x000000000046811b: ret 0x894e; 
0x000000000049cca0: ret 0x8960; 
0x000000000049ccc9: ret 0x89e0; 
0x000000000040ef3c: ret 0x8b01; 
0x00000000004505d7: ret 0x8b05; 
0x0000000000405772: ret 0x8b08; 
0x000000000045e70f: ret 0x8b41; 
0x00000000004097f7: ret 0x8b48; 
0x00000000004680a2: ret 0x8b4a; 
0x0000000000432ef9: ret 0x8b4c; 
0x000000000045abcf: ret 0x8d08; 
0x000000000045757c: ret 0x8d0f; 
0x000000000040372a: ret 0x8d48; 
0x000000000041fcb7: ret 0x8d49; 
0x000000000048a901: ret 0x8d4a; 
0x000000000046e06f: ret 0x8d4b; 
0x000000000040c57f: ret 0x8d4c; 
0x0000000000419d5d: ret 0x8d4d; 
0x00000000004678eb: ret 0x8d74; 
0x0000000000471869: ret 0x8d88; 
0x000000000045f0ec: ret 0x8e0f; 
0x000000000046c751: ret 0x8f0f; 
0x000000000049cd1b: ret 0x8f20; 
0x0000000000467821: ret 0x8f74; 
0x000000000049cd44: ret 0x8f80; 
0x0000000000416f2b: ret 0x8fe9; 
0x000000000049cd6d: ret 0x9000; 
0x000000000049cd96: ret 0x90c0; 
0x000000000042646d: ret 0x90c3; 
0x000000000049cdbf: ret 0x9140; 
0x000000000049cde8: ret 0x91a0; 
0x000000000049cc28: ret 0x9260; 
0x000000000040f947: ret 0x940f; 
0x0000000000469378: ret 0x941; 
0x0000000000420124: ret 0x948; 
0x0000000000481e08: ret 0x94c; 
0x000000000048fc96: ret 0x950f; 
0x000000000046bba3: ret 0x9574; 
0x000000000040b121: ret 0x9589; 
0x0000000000496927: ret 0x975; 
0x0000000000496919: ret 0x976; 
0x000000000046a2af: ret 0x9848; 
0x000000000040141a: ret 0x98e; 
0x000000000048ef11: ret 0x99e8; 
0x0000000000470460: ret 0x9c0f; 
0x0000000000405cd3: ret 0x9c6; 
0x0000000000476027: ret 0x9ce9; 
0x000000000041dc0f: ret 0xa3e8; 
0x0000000000425b43: ret 0xa7e8; 
0x00000000004221a8: ret 0xa7e; 
0x0000000000498851: ret 0xa8; 
0x000000000040c5e2: ret 0xa8eb; 
0x000000000041de62: ret 0xa; 
0x000000000044fef1: ret 0xabe; 
0x000000000041de56: ret 0xaed; 
0x000000000047188d: ret 0xb589; 
0x00000000004230fe: ret 0xb60f; 
0x00000000004021df: ret 0xb70f; 
0x0000000000490ad3: ret 0xb7e8; 
0x000000000045a9a1: ret 0xb7eb; 
0x00000000004237c9: ret 0xb817; 
0x00000000004722c2: ret 0xb848; 
0x00000000004727ab: ret 0xb8; 
0x0000000000496895: ret 0xb941; 
0x00000000004714ca: ret 0xb; 
0x000000000045a9bb: ret 0xbb41; 
0x0000000000410eee: ret 0xbb60; 
0x0000000000499706: ret 0xbc80; 
0x00000000004142ea: ret 0xbd83; 
0x00000000004718c1: ret 0xbd89; 
0x0000000000476f45: ret 0xbe04; 
0x000000000040ea76: ret 0xbf08; 
0x0000000000428339: ret 0xc000; 
0x00000000004041de: ret 0xc031; 
0x0000000000408d38: ret 0xc083; 
0x000000000042e400: ret 0xc085; 
0x000000000046c855: ret 0xc13f; 
0x0000000000401c05: ret 0xc148; 
0x0000000000455ca7: ret 0xc149; 
0x0000000000471856: ret 0xc189; 
0x0000000000410dea: ret 0xc200; 
0x0000000000476ba9: ret 0xc208; 
0x000000000046c853: ret 0xc283; 
0x00000000004308d4: ret 0xc2b2; 
0x000000000040adc9: ret 0xc389; 
0x000000000042ea31: ret 0xc540; 
0x000000000046c230: ret 0xc689; 
0x0000000000488b62: ret 0xc6; 
0x000000000041ad90: ret 0xc748; 
0x0000000000408c2e: ret 0xc776; 
0x000000000041143c: ret 0xc789; 
0x000000000041d8b9: ret 0xc883; 
0x000000000040178a: ret 0xc98; 
0x0000000000444865: ret 0xc9ff; 
0x000000000046c84f: ret 0xca31; 
0x0000000000425e78: ret 0xcb8; 
0x000000000040ec4d: ret 0xcde8; 
0x0000000000405fd3: ret 0xce80; 
0x0000000000496fcf: ret 0xd009; 
0x000000000040acd5: ret 0xd129; 
0x00000000004025d8: ret 0xd284; 
0x0000000000458a3a: ret 0xd341; 
0x0000000000487131: ret 0xd348; 
0x0000000000495c17: ret 0xd349; 
0x000000000040de64: ret 0xd629; 
0x000000000040263d: ret 0xd689; 
0x0000000000488127: ret 0xd74; 
0x000000000045323a: ret 0xd889; 
0x000000000041fc44: ret 0xd977; 
0x000000000044c42f: ret 0xda89; 
0x0000000000409d42: ret 0xdb0; 
0x00000000004733e1: ret 0xdce9; 
0x000000000048be1d: ret 0xdde8; 
0x0000000000456a36: ret 0xdf75; 
0x00000000004281f9: ret 0xe000; 
0x0000000000448aed: ret 0xe074; 
0x000000000045249d: ret 0xe083; 
0x0000000000450aac: ret 0xe174; 
0x0000000000472763: ret 0xe273; 
0x00000000004078cd: ret 0xe281; 
0x0000000000401e05: ret 0xe283; 
0x000000000040a51d: ret 0xe383; 
0x0000000000452419: ret 0xe480; 
0x000000000046cb30: ret 0xe57f; 
0x000000000044c102: ret 0xe680; 
0x0000000000425886: ret 0xe775; 
0x00000000004690bd: ret 0xe783; 
0x0000000000490253: ret 0xe7f; 
0x000000000042f0a9: ret 0xe883; 
0x000000000048648e: ret 0xe8c0; 
0x000000000047912b: ret 0xe901; 
0x00000000004704e3: ret 0xe902; 
0x0000000000444906: ret 0xe908; 
0x0000000000440596: ret 0xe910; 
0x0000000000497175: ret 0xe940; 
0x00000000004265d4: ret 0xe975; 
0x000000000046e864: ret 0xe9f8; 
0x0000000000407a2b: ret 0xeab8; 
0x0000000000471883: ret 0xeac0; 
0x0000000000401dd1: ret 0xeac1; 
0x000000000040576a: ret 0xeb04; 
0x000000000042d05a: ret 0xeb10; 
0x0000000000467ee1: ret 0xebe9; 
0x0000000000488450: ret 0xec75; 
0x000000000049278c: ret 0xeeb; 
0x000000000046e1b6: ret 0xeec1; 
0x000000000041fe2e: ret 0xef75; 
0x00000000004280b9: ret 0xf000; 
0x0000000000404290: ret 0xf01; 
0x000000000045e116: ret 0xf02; 
0x00000000004931ae: ret 0xf03; 
0x00000000004231e9: ret 0xf04; 
0x0000000000460ecd: ret 0xf075; 
0x0000000000483973: ret 0xf07; 
0x00000000004197b0: ret 0xf08; 
0x0000000000427252: ret 0xf10; 
0x0000000000418012: ret 0xf20; 
0x0000000000461dd8: ret 0xf2e9; 
0x0000000000498312: ret 0xf304; 
0x000000000041c89e: ret 0xf390; 
0x000000000044aaf9: ret 0xf40; 
0x0000000000412433: ret 0xf41; 
0x00000000004262fd: ret 0xf48; 
0x000000000046f892: ret 0xf4c; 
0x00000000004615a1: ret 0xf4d; 
0x000000000046f239: ret 0xf50; 
0x0000000000429c7e: ret 0xf5c5; 
0x00000000004936f2: ret 0xf604; 
0x000000000040ea6e: ret 0xf631; 
0x000000000046a6f7: ret 0xf641; 
0x0000000000428676: ret 0xf66; 
0x0000000000492e6a: ret 0xf6e1; 
0x0000000000489f44: ret 0xf6e8; 
0x00000000004900fa: ret 0xf70f; 
0x000000000040670a: ret 0xf748; 
0x00000000004834c9: ret 0xf789; 
0x00000000004843f2: ret 0xf7cc; 
0x0000000000405846: ret 0xf7f7; 
0x0000000000427f79: ret 0xf800; 
0x0000000000450257: ret 0xf883; 
0x000000000041f097: ret 0xf8b; 
0x0000000000443896: ret 0xf8c5; 
0x00000000004615a5: ret 0xf929; 
0x0000000000464f5a: ret 0xf9df; 
0x000000000044d164: ret 0xf9e9; 
0x000000000042be4e: ret 0xf; 
0x000000000045bb5a: ret 0xfa73; 
0x000000000044c3a0: ret 0xfa83; 
0x000000000045cf6a: ret 0xfab1; 
0x000000000044c26c: ret 0xfac1; 
0x0000000000455b5a: ret 0xfad3; 
0x0000000000493198: ret 0xfb83; 
0x0000000000427e39: ret 0xfc00; 
0x0000000000425827: ret 0xfc3; 
0x000000000045f45a: ret 0xfc4f; 
0x0000000000427cf9: ret 0xfe00; 
0x000000000046c17a: ret 0xfe46; 
0x000000000041876a: ret 0xfe88; 
0x000000000044c440: ret 0xfee9; 
0x0000000000427bb9: ret 0xff00; 
0x0000000000437d81: ret 0xff2; 
0x000000000042f269: ret 0xff2d; 
0x000000000040e10c: ret 0xff31; 
0x000000000042861a: ret 0xff3; 
0x0000000000413f93: ret 0xff41; 
0x0000000000427a79: ret 0xff80; 
0x0000000000471010: ret 0xffa0; 
0x0000000000423f5a: ret 0xffbb; 
0x00000000004650ac: ret 0xffbf; 
0x0000000000407a7a: ret 0xffc0; 
0x000000000040fb0c: ret 0xffc6; 
0x0000000000410650: ret 0xffc8; 
0x000000000040b815: ret 0xffde; 
0x00000000004277f9: ret 0xffe0; 
0x000000000040b215: ret 0xffe4; 
0x0000000000461f17: ret 0xffe7; 
0x0000000000408a1b: ret 0xffef; 
0x00000000004077f0: ret 0xfff0; 
0x0000000000452c6a: ret 0xfff4; 
0x000000000046187a: ret 0xfff6; 
0x0000000000486c79: ret 0xfff7; 
0x0000000000427579: ret 0xfff8; 
0x0000000000489b8f: ret 0xfff9; 
0x0000000000425861: ret 0xfff; 
0x0000000000456c58: ret 0xfffa; 
0x0000000000451ebb: ret 0xfffb; 
0x000000000042231c: ret 0xfffc; 
0x00000000004529a2: ret 0xfffd; 
0x0000000000409c3d: ret 0xfffe; 
0x000000000040d861: ret 0xffff; 
0x0000000000421762: ret 1; 
0x000000000042ecdf: ret 2; 
0x0000000000430692: ret 3; 
0x000000000040460f: ret 4; 
0x00000000004054e6: ret 5; 
0x0000000000434706: ret 6; 
0x0000000000423edb: ret 7; 
0x000000000042ed19: ret 8; 
0x0000000000405aec: ret 9; 
0x000000000040101a: ret; 
0x000000000042e59e: rol bl, 0x83; ret 0x6620; 
0x000000000044b0a1: rol byte ptr [r9 + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x0000000000492e2b: rol byte ptr [r9 + rbp - 0x10], 0x39; ret 0x2476; 
0x00000000004285f2: rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x000000000044dc1b: rol byte ptr [rax + 0x48], 1; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444136: rol byte ptr [rax + 0x48], 1; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea9b: rol byte ptr [rax + 0x48], 1; clc; vzeroupper; ret; 
0x0000000000443f12: rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x0000000000419888: rol byte ptr [rax + rax*8 - 0x7cb7e28c], 0xc4; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x00000000004574dd: rol byte ptr [rax + rcx*2], 0x39; ret; 
0x000000000045bdd0: rol byte ptr [rax + rcx*2], 0x83; ret; 
0x0000000000409919: rol byte ptr [rax + rcx*4 + 0x17], 0x29; ret; 
0x00000000004513ac: rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8348; 
0x0000000000451b81: rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8d48; 
0x0000000000451b60: rol byte ptr [rax - 0x6bf0ffc8], cl; ret 0x8d48; 
0x0000000000499ee3: rol byte ptr [rax], 0; add byte ptr [rax - 0x3f], cl; call 0x4810282d; mov eax, dword ptr [rdi + 0x98]; ret; 
0x000000000041b006: rol byte ptr [rax], 0; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000042f7ff: rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000451709: rol byte ptr [rax], 0; add dh, dh; ret 0x7404; 
0x000000000042361c: rol byte ptr [rbp + 0x31], 0xd2; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x000000000045f814: rol byte ptr [rbp + 0x31], cl; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000042e7f2: rol byte ptr [rbp + 0x664975c0], 0xf; xlatb; ret 0xc085; 
0x000000000040979d: rol byte ptr [rbp - 0x3f60f025], 0x29; ret; 
0x00000000004097f0: rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x8b48; 
0x000000000040b11a: rol byte ptr [rbp - 0x3f60f02e], 0x29; ret 0x9589; 
0x0000000000426e3c: rol byte ptr [rbx + 2], 0; lea rax, qword ptr [rip + 0x24409]; cmove rax, rdx; ret; 
0x00000000004679db: rol byte ptr [rbx - 0x177cfd20], 1; ret; 
0x0000000000461622: rol byte ptr [rbx - 0x57ccf16], 1; or dword ptr [rdi], ecx; xchg eax, edi; ret 0xd284; 
0x0000000000486f08: rol byte ptr [rbx - 0x7a99fe20], 1; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x0000000000482c72: rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x0000000000498189: rol byte ptr [rbx], 0xeb; ret; 
0x00000000004670c4: rol byte ptr [rcx + 0x29], 1; ret; 
0x00000000004247f4: rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x0000000000424858: rol byte ptr [rcx + 0x5d], 0xc3; nop dword ptr [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000041151f: rol byte ptr [rcx + 0xf], 0x4d; ret; 
0x000000000044b0a2: rol byte ptr [rcx + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x0000000000492e2c: rol byte ptr [rcx + rbp - 0x10], 0x39; ret 0x2476; 
0x0000000000475466: rol byte ptr [rcx - 0x77], 1; ret 0x27e9; 
0x0000000000405843: rol byte ptr [rcx - 0x77], cl; ret 0xf7f7; 
0x0000000000409859: rol byte ptr [rcx - 0x7d], 0xfe; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000482c52: rol byte ptr [rcx], 0; add byte ptr [rax], al; ret; 
0x0000000000453586: rol byte ptr [rcx], 0x50; call rbx; 
0x0000000000406b7e: rol byte ptr [rcx], 0x88; dec qword ptr [rax - 0x7d]; ret 0x4901; 
0x000000000041800d: rol byte ptr [rcx], 0x8b; adc esi, esi; ret 0xf20; 
0x000000000044c42b: rol byte ptr [rcx], 0xf; scasd eax, dword ptr [rdi]; ret 0xda89; 
0x0000000000452e62: rol byte ptr [rcx], 1; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000482cb2: rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x0000000000482c62: rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x0000000000490a23: rol byte ptr [rdx], 0; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x0000000000482ca2: rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000042eb1f: rol ch, 1; std; xlatb; ret; 
0x000000000044415f: rol ch, cl; std; xlatb; ret 0xc085; 
0x0000000000481fb6: rol ch, cl; std; xlatb; ret; 
0x000000000049830d: rol cl, 0xe9; add esi, esi; ret 0xf304; 
0x0000000000482bfc: rol dword ptr [rax + 0x1e740fe1], 1; ret; 
0x000000000044bc0f: rol dword ptr [rax + 0xf], 1; mov dh, 0xc6; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000417769: rol dword ptr [rax], cl; add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000042ea50: rol dword ptr [rbp + 0x311b75c0], -0x40; vzeroupper; ret; 
0x000000000042e5c4: rol dword ptr [rbp + 0x315775c0], -0x40; ret; 
0x0000000000470c7c: rol dword ptr [rbp + 0x31], -0x2e; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x0000000000424304: rol dword ptr [rbp + 0x31], -0x2e; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x000000000042eb13: rol dword ptr [rbp - 0x3a378a40], -3; xlatb; ret 0xc085; 
0x0000000000443a03: rol dword ptr [rbp - 0x3a678a40], -3; xlatb; ret 0xc085; 
0x000000000042e594: rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000444337: rol dword ptr [rbp - 0x5f7af040], 0; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000042ea13: rol dword ptr [rbp - 0x6b7af040], 0; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x00000000004906c6: rol dword ptr [rbx], 1; add byte ptr [rbp + 0x480375d2], al; mov dword ptr [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000470f42: rol dword ptr [rcx + 0x5c], 0x41; pop rbp; mov rax, r9; pop r14; ret; 
0x000000000046c1ab: rol dword ptr [rcx + rdi - 0x39], 0x77; fild word ptr [rcx + rcx*4 - 0x38]; ret; 
0x0000000000457822: rol dword ptr [rcx - 0x77], cl; ret 0x5a58; 
0x000000000040189a: rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x00000000004260b6: rol dword ptr [rcx], cl; add byte ptr [rax - 0x73], cl; adc eax, 0x229c0; cmovne rax, rdx; ret; 
0x0000000000450457: rol dword ptr [rdi], cl; add byte ptr [rdx + 0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x0000000000458e48: rol dword ptr [rdx + rdx*8 - 0x157e2c87], 1; ret 0; 
0x000000000042f265: rol ebp, 1; stc; xlatb; ret 0xff2d; 
0x0000000000455c9b: ror byte ptr [r8 - 0x7b], cl; ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x0000000000443dc7: ror byte ptr [rax + 0x29], 1; clc; ret; 
0x000000000044d92c: ror byte ptr [rax + 0x29], 1; clc; shr rax, 2; ret; 
0x000000000041f8d0: ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000040cfac: ror byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000047045d: ror byte ptr [rax + 0x39], cl; ret 0x9c0f; 
0x0000000000456d92: ror byte ptr [rax + 0xf], 0x44; ret; 
0x0000000000443ab6: ror byte ptr [rax + 1], 0xc8; add rax, rdi; vzeroupper; ret; 
0x000000000042e6cc: ror byte ptr [rax + 1], 0xf8; add rax, rcx; ret; 
0x0000000000482d18: ror byte ptr [rax + 1], 0xf8; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444048: ror byte ptr [rax + 1], 0xf8; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb98: ror byte ptr [rax + 1], 0xf8; add rax, rcx; vzeroupper; ret; 
0x000000000042e5e2: ror byte ptr [rax + 1], 0xf8; ret; 
0x000000000044dc73: ror byte ptr [rax + 1], 0xf8; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444103: ror byte ptr [rax + 1], 0xf8; sub rax, rdx; vzeroupper; ret; 
0x000000000042eae3: ror byte ptr [rax + 1], 0xf8; vzeroupper; ret; 
0x000000000040684b: ror byte ptr [rax + 1], 1; ret; 
0x0000000000443dc4: ror byte ptr [rax + 1], cl; ror byte ptr [rax + 0x29], 1; clc; ret; 
0x000000000044d929: ror byte ptr [rax + 1], cl; ror byte ptr [rax + 0x29], 1; clc; shr rax, 2; ret; 
0x0000000000443755: ror byte ptr [rax + 9], 0xc8; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x000000000042ed86: ror byte ptr [rax - 0x2d], 0xfa; movzx edx, dl; sub eax, edx; ret; 
0x000000000044da5a: ror byte ptr [rax - 0x3f], 1; call 0x77fd9f64; ret; 
0x000000000044dbde: ror byte ptr [rax - 0x3f], 1; call 0x77fda0e8; ret; 
0x000000000044dc02: ror byte ptr [rax - 0x3f], 1; call 0x77fda10c; ret; 
0x000000000044dc22: ror byte ptr [rax - 0x3f], 1; call 0x77fda12c; ret; 
0x000000000044dc42: ror byte ptr [rax - 0x3f], 1; call 0x77fda14c; ret; 
0x000000000044dc79: ror byte ptr [rax - 0x3f], 1; call 0x77fda183; ret; 
0x000000000044dc9d: ror byte ptr [rax - 0x3f], 1; call 0x77fda1a7; ret; 
0x000000000044dcbd: ror byte ptr [rax - 0x3f], 1; call 0x77fda1c7; ret; 
0x000000000044dd09: ror byte ptr [rax - 0x3f], 1; call 0x77fda213; ret; 
0x0000000000482d21: ror byte ptr [rax - 0x3f], 1; call 0x7800f22b; ret; 
0x0000000000482dd9: ror byte ptr [rax - 0x3f], 1; call 0x7800f2e3; ret; 
0x0000000000482dfd: ror byte ptr [rax - 0x3f], 1; call 0x7800f307; ret; 
0x0000000000482e1d: ror byte ptr [rax - 0x3f], 1; call 0x7800f327; ret; 
0x0000000000482e69: ror byte ptr [rax - 0x3f], 1; call 0x7800f373; ret; 
0x0000000000426dc1: ror byte ptr [rax - 0x73], 0x15; push rdi; add r8b, byte ptr [rax]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426da2: ror byte ptr [rax - 0x73], 0x15; xchg byte ptr [rdi + 2], cl; add byte ptr [rax - 0x73], cl; add eax, 0x24fcf; cmove rax, rdx; ret; 
0x00000000004112f9: ror byte ptr [rax - 0x73], 0x34; ret; 
0x00000000004729df: ror byte ptr [rax - 0x73], 0x34; shr eax, 7; ret; 
0x0000000000422952: ror byte ptr [rax - 0x73], 0x3c; ret; 
0x000000000042e5d2: ror byte ptr [rax - 0x73], 0x44; cmp al, dh; ret; 
0x000000000042e602: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], ah; ret; 
0x000000000042e5f2: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], dl; ret; 
0x000000000042585d: ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x0000000000427091: ror byte ptr [rax - 0x73], 1; adc eax, 0x1c9a7; lea rax, qword ptr [rip + 0x1c560]; cmove rax, rdx; ret; 
0x00000000004263b1: ror byte ptr [rax - 0x73], 1; adc eax, 0x1dc37; lea rax, qword ptr [rip + 0x1d870]; cmove rax, rdx; ret; 
0x00000000004263f1: ror byte ptr [rax - 0x73], 1; adc eax, 0x1dd97; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x00000000004821b1: ror byte ptr [rax - 0x73], 1; adc eax, 0x597; lea rax, qword ptr [rip + 0x260]; cmove rax, rdx; ret; 
0x0000000000427051: ror byte ptr [rax - 0x73], 1; adc eax, 0x7ae7; lea rax, qword ptr [rip + 0x7600]; cmove rax, rdx; ret; 
0x0000000000426c11: ror byte ptr [rax - 0x73], 1; adc eax, 0x7c57; lea rax, qword ptr [rip + 0x7710]; cmove rax, rdx; ret; 
0x0000000000478e21: ror byte ptr [rax - 0x73], 1; adc eax, 0x9107; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x0000000000482171: ror byte ptr [rax - 0x73], 1; adc eax, 0xb47; lea rax, qword ptr [rip + 0x8a0]; cmove rax, rdx; ret; 
0x000000000044388b: ror byte ptr [rax - 0x73], cl; add al, 7; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000451bdd: ror byte ptr [rax - 0x73], cl; or qword ptr [rax + 0xf], rcx; ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000046be0e: ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000421520: ror byte ptr [rax - 0x75], 0x46; or byte ptr [rax - 0x77], cl; ret; 
0x000000000044d681: ror byte ptr [rax - 0x75], 0x4c; and al, 0x20; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000044d4ff: ror byte ptr [rax - 0x75], 0x74; and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000048b96a: ror byte ptr [rax - 0x77], 0x3e; pop rbx; ret; 
0x0000000000470c25: ror byte ptr [rax - 0x77], 0x5c; ret 0x64c0; 
0x000000000048358f: ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x0000000000406106: ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000048eafa: ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x00000000004078ca: ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x00000000004193a9: ror byte ptr [rax - 0x77], 1; ret; 
0x0000000000401f6c: ror byte ptr [rax - 0x77], 5; sub al, 0xae; or al, 0; add rsp, 0x88; pop rbx; ret; 
0x0000000000455c9c: ror byte ptr [rax - 0x7b], cl; ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x000000000044dcb3: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444133: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb03: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; vzeroupper; ret; 
0x0000000000444113: ror byte ptr [rax - 0x7d], 0xc0; and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042eaf3: ror byte ptr [rax - 0x7d], 0xc0; and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x000000000044c343: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x000000000041d559: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000493aab: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000483557: ror byte ptr [rax - 0x7d], 0xc4; pop rax; ret; 
0x000000000041cb55: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000047487e: ror byte ptr [rax - 0x7d], 1; mov ebp, 0xfffffb10; add byte ptr [rcx - 0x77], al; ret 0x1e74; 
0x0000000000489127: ror byte ptr [rax - 0x7d], 1; ret; 
0x00000000004574da: ror byte ptr [rax - 0x7d], 1; rol byte ptr [rax + rcx*2], 0x39; ret; 
0x0000000000497172: ror byte ptr [rax - 0x7d], cl; ret 0xe940; 
0x000000000044aa4b: ror byte ptr [rax - 0x7f], 0xc4; add byte ptr [rcx], al; add byte ptr [rax], al; sub rax, rdx; ret; 
0x0000000000407a6a: ror byte ptr [rax - 0x7f], 0xc4; sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000044aa48: ror byte ptr [rax - 1], 0xc0; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000044aa45: ror byte ptr [rax - 1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000048b94a: ror byte ptr [rax - 9], 0xd8; test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x000000000049c30d: ror byte ptr [rax], 0x4c; mov dword ptr [rbx], eax; pop rbx; ret; 
0x0000000000455c9f: ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x000000000048a80e: ror byte ptr [rbp - 0x7b], cl; dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000044e503: ror byte ptr [rbx + 0x3108247c], 0xc0; syscall; 
0x0000000000451bd8: ror byte ptr [rbx], 5; add byte ptr [rbp + 0x488d48d2], al; or dword ptr [rax + 0xf], ecx; ror dword ptr [r8 - 0x77], 5; ret; 
0x000000000044f068: ror byte ptr [rcx + 0x12eb8fe], cl; add byte ptr [rax], al; xor edi, edi; syscall; 
0x000000000042b693: ror byte ptr [rcx + 0x29], cl; sal dword ptr [rsi + 0xb], cl; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000456a02: ror byte ptr [rcx + 0x39], cl; ret 0x3176; 
0x000000000045571f: ror byte ptr [rcx + 0x39], cl; ret; 
0x000000000048fc8a: ror byte ptr [rcx + 0x438b4803], cl; sbb byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x0000000000455c98: ror byte ptr [rcx + 0xf], cl; ror byte ptr [r8 - 0x7b], cl; ror byte ptr [rbp + rcx*4 + 0x42], cl; add ecx, dword ptr [rdi + rcx + 0x49]; ret 0xc149; 
0x0000000000470ad4: ror byte ptr [rcx + rcx*4 + 0x2b], 0x5b; pop rbp; pop r12; pop r13; ret; 
0x0000000000497842: ror byte ptr [rcx + rcx*4 + 6], 1; ret; 
0x000000000044cc18: ror byte ptr [rcx + rcx*4 - 0x19], 0x4c; lea ecx, dword ptr [rsp + 0x30]; call rbx; 
0x0000000000407a45: ror byte ptr [rcx + rcx*4 - 0x32], cl; mov edi, 2; mov eax, 0xe; syscall; 
0x00000000004085fa: ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x000000000048b953: ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; ret; 
0x000000000047218b: ror byte ptr [rcx + rcx*4 - 0xa], cl; mov byte ptr [rbp - 0x958], r9b; call rax; 
0x0000000000411aeb: ror byte ptr [rcx + rcx*4 - 2], cl; mov rdi, r14; mov dword ptr [rbp - 0x930], r11d; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x000000000045c77a: ror byte ptr [rcx - 0x2d94b73b], 1; push -0x1605feb4; ret 0xfffe; 
0x0000000000481e1c: ror byte ptr [rcx - 0x3e], 0x48; cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, qword ptr [rcx + rsi]; ret; 
0x00000000004755bc: ror byte ptr [rcx - 0x4e773], 1; inc dword ptr [rcx - 0x77]; ret 0x2941; 
0x000000000045ea12: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x000000000044ee2b: ror byte ptr [rdi], 0x1f; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000450460: ror byte ptr [rdi], 0x44; ret 0x66c3; 
0x000000000046d26d: ror byte ptr [rdi], 0x84; call qword ptr [rdx]; 
0x000000000046318e: ror byte ptr [rdi], 0x84; fist word ptr [rax + rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x000000000040a7bb: ror byte ptr [rdi], 0x84; jmp qword ptr [rax]; 
0x0000000000417c31: ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x0000000000402361: ror byte ptr [rdi], 0x84; nop; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000469ba1: ror byte ptr [rdi], 0x84; or byte ptr [rax], al; add byte ptr [rcx - 0x142dce3a], cl; adc eax, 0x83489066; ret 0x4101; 
0x00000000004659ee: ror byte ptr [rdi], 0x84; out dx, eax; adc eax, dword ptr [rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x0000000000424497: ror byte ptr [rdi], 0x84; ret 0; 
0x000000000046850b: ror byte ptr [rdi], 0x84; ret 0xfffd; 
0x0000000000416836: ror byte ptr [rdi], 0x84; ret; 
0x000000000046c2b8: ror byte ptr [rdi], 0x85; fstp dword ptr [rax + rax]; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000049c002: ror byte ptr [rdi], 0x85; ret 0; 
0x00000000004662d4: ror byte ptr [rdi], 0x85; ret 0xfff4; 
0x000000000046c397: ror byte ptr [rdi], 0x85; ret 1; 
0x00000000004247a6: ror byte ptr [rdi], 0x85; ret; 
0x000000000040f4d6: ror byte ptr [rdi], 0x94; ret 0x2fe9; 
0x000000000048fc93: ror byte ptr [rdi], 0x94; ret 0x950f; 
0x0000000000491f8c: ror byte ptr [rdi], 0x94; ret 0xb60f; 
0x00000000004097d3: ror byte ptr [rdi], 0x95; ret; 
0x0000000000409856: ror byte ptr [rdi], 0x95; rol byte ptr [rcx - 0x7d], 0xfe; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000493aa8: ror byte ptr [rdi], 0x95; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000041c1df: ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x000000000044afe9: ror byte ptr [rdi], 1; adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x000000000042ecd6: ror byte ptr [rdi], 1; test dword ptr [rax + rax - 0x8b70000], ecx; ret 2; 
0x0000000000471ac1: ror byte ptr [rdi], cl; mov byte ptr [rax - 0x9ffffe9], al; ret 0xf40; 
0x0000000000453581: ror byte ptr [rdi], cl; mov dh, 0xc0; add eax, 1; push rax; call rbx; 
0x000000000045832a: ror byte ptr [rdi], cl; mov dh, bh; add dword ptr [rax], eax; add bh, dh; ret 0xf800; 
0x0000000000404b31: ror byte ptr [rdi], cl; test al, al; add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x000000000044d80f: ror byte ptr [rdi], cl; test byte ptr [rdx + 0x48000000], bl; bsf eax, edx; shr rax, 2; ret; 
0x0000000000443e6b: ror byte ptr [rdi], cl; test byte ptr [rsi + 0x48000000], bl; bsf eax, edx; ret; 
0x000000000041c534: ror byte ptr [rdi], cl; test ch, ah; add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x0000000000450aa4: ror byte ptr [rdi], cl; test cl, dl; add byte ptr [rax], al; add byte ptr [rax], bh; ret 0xe174; 
0x0000000000486f0e: ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x0000000000451be4: ror dword ptr [r8 - 0x77], 5; ret; 
0x0000000000421046: ror dword ptr [rax + 0xf], 1; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000048712e: ror dword ptr [rax - 0x77], 1; ret 0xd348; 
0x0000000000451be5: ror dword ptr [rax - 0x77], 5; ret; 
0x0000000000416d9a: ror dword ptr [rax - 0x77], cl; ret 0x1de9; 
0x0000000000416f28: ror dword ptr [rax - 0x77], cl; ret 0x8fe9; 
0x0000000000495abc: ror dword ptr [rax - 0x77], cl; ret; 
0x000000000040736a: ror dword ptr [rax - 0x7d], 1; ret 0x4001; 
0x000000000042de83: ror dword ptr [rax - 0x7d], 1; ret 0x4c20; 
0x000000000042dea3: ror dword ptr [rax - 0x7d], 1; ret 0x4c40; 
0x000000000042dec3: ror dword ptr [rax - 0x7d], 1; ret 0x4c60; 
0x0000000000469f84: ror dword ptr [rax], -0x18; mov ch, 0x70; stc; inc dword ptr [rbp + 1]; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000491d68: ror dword ptr [rax], -0x7d; ret 0x4801; 
0x000000000044c263: ror dword ptr [rbp - 0xb869], cl; dec dword ptr [rax + 0x63]; ret 0xfac1; 
0x000000000041c499: ror dword ptr [rbx - 2], cl; dec dword ptr [rax - 0x77]; ret; 
0x000000000044c135: ror dword ptr [rcx + 0xe181d0], -4; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000429d1e: ror dword ptr [rcx + rax - 0x3f], 1; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000044f59e: ror dword ptr [rcx + rcx*4 + 0x48], 1; or bl, ch; ret 0x1f0f; 
0x0000000000418179: ror dword ptr [rcx + rcx*4 - 0x12], cl; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x000000000046bcfe: ror dword ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x0000000000468118: ror dword ptr [rcx + rdx - 0x3e], 0x4e; mov dword ptr [rdi + rbx*8 + 8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000004975fa: ror dword ptr [rcx - 0x77], cl; ret 0x2148; 
0x0000000000448aeb: ror dword ptr [rcx], cl; ret 0xe074; 
0x00000000004988cd: ror dword ptr [rdi], -0x4a; add dword ptr [r8 - 0x7d], ecx; ret; 
0x000000000044c43d: ror dword ptr [rdi], -0x51; ret 0xfee9; 
0x0000000000497447: ror dword ptr [rdi], -0x6b; ret 0x3145; 
0x0000000000430068: ror dword ptr [rdi], -0x7b; adc byte ptr [rdx], cl; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000430774: ror dword ptr [rdi], -0x7b; add al, 3; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000430546: ror dword ptr [rdi], -0x7b; add eax, 0xc0310000; ret; 
0x00000000004304c6: ror dword ptr [rdi], -0x7b; cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0xc0310000; ret; 
0x00000000004302fb: ror dword ptr [rdi], -0x7b; jno 0x30307; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004303c3: ror dword ptr [rdi], -0x7b; mov ch, 6; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000430040: ror dword ptr [rdi], -0x7b; sub al, 0xa; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004130bb: ror dword ptr [rdi], 1; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004230fb: ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x0000000000420ac7: ror dword ptr [rdx], 0; syscall; 
0x000000000048c43b: ror dword ptr [rsi], 1; add al, 0; ret; 
0x000000000040831d: ror eax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x00000000004082ff: ror edx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000040831c: ror rax, 0x11; xor rax, qword ptr fs:[0x30]; call rax; 
0x00000000004082fe: ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000049348a: sahf; add byte ptr [rax], al; add byte ptr [rax + 0xf], al; xchg eax, esp; mov byte ptr [rcx], 0xf6; syscall; 
0x0000000000402b96: sahf; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; mov qword ptr ss:[rsi + 0x10], rsi; syscall; 
0x000000000046567e: sahf; fdivr st(1); jmp qword ptr [rsi + 0x66]; 
0x000000000049954e: sahf; idiv bh; dec dword ptr [rcx - 0x77]; ret; 
0x00000000004429ae: sahf; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000484695: sahf; sub byte ptr [rax - 0x7d], cl; ret; 
0x000000000048df36: sahf; xor edi, esi; dec dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000041c1e2: sal bh, 0xd8; ret; 
0x0000000000428477: sal bh, 1; ret 0x8000; 
0x0000000000428337: sal bh, 1; ret 0xc000; 
0x00000000004281f7: sal bh, 1; ret 0xe000; 
0x00000000004280b7: sal bh, 1; ret 0xf000; 
0x0000000000427f77: sal bh, 1; ret 0xf800; 
0x0000000000427e37: sal bh, 1; ret 0xfc00; 
0x0000000000427cf7: sal bh, 1; ret 0xfe00; 
0x0000000000427bb7: sal bh, 1; ret 0xff00; 
0x0000000000427a77: sal bh, 1; ret 0xff80; 
0x0000000000427937: sal bh, 1; ret 0xffc0; 
0x00000000004277f7: sal bh, 1; ret 0xffe0; 
0x00000000004276b7: sal bh, 1; ret 0xfff0; 
0x0000000000427577: sal bh, 1; ret 0xfff8; 
0x0000000000427437: sal bh, 1; ret 0xfffc; 
0x00000000004272f7: sal bh, 1; ret 0xfffe; 
0x0000000000485d0f: sal bh, cl; jmp qword ptr [rsi + 0x66]; 
0x00000000004971e2: sal bh, cl; shl byte ptr [rsi - 0x7f], cl; ret 0x7fff; 
0x000000000042ec2f: sal bl, 1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000000473b4a: sal bl, cl; clc; jmp qword ptr [rsi - 0x70]; 
0x000000000049a0fa: sal byte ptr [rax + 0x49], 0x89; fmul dword ptr [rcx + rcx*4 - 0x17]; mov rdx, qword ptr [r13]; mov esi, 1; mov edi, 1; call rax; 
0x0000000000406101: sal byte ptr [rax + rbx + 0xf], 0xb6; ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000490045: sal byte ptr [rax + rcx + 0x5b], 0x5d; pop r12; ret; 
0x0000000000450f1d: sal byte ptr [rax + rdx + 0x48], cl; lea edi, dword ptr [rcx + rsi + 0x20]; jmp rdx; 
0x00000000004719e7: sal byte ptr [rax + rdx + 0x4d], 0x63; ret; 
0x000000000048887d: sal byte ptr [rax + rsi*2 + 0x48], 0x89; ret 0x8b48; 
0x000000000044e56d: sal byte ptr [rbp + 0x10], 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000041cdbd: sal byte ptr [rbp + 0x10], cl; sub dword ptr [rip + 0xafe69], 1; ret; 
0x0000000000422f09: sal byte ptr [rbp + 0x18], 0xe9; ret 0; 
0x000000000048cde4: sal byte ptr [rbp + 0x19], 0x48; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x3e312], 1; ret; 
0x000000000044dbc2: sal byte ptr [rbp + 0x2b], 0x4c; mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x0000000000444372: sal byte ptr [rbp + 0x2b], 0x4c; mov eax, eax; vzeroupper; ret; 
0x00000000004831b9: sal byte ptr [rbp + 0x34], 0x83; imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x00000000004546f8: sal byte ptr [rbp + 0x35], 0x83; sub eax, 0x791ae; add dword ptr [rbx + 0x31], ebx; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000470c34: sal byte ptr [rbp + 0x39], 0x83; sub eax, 0x5c2f2; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000042e812: sal byte ptr [rbp + 0x4b], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea rax, qword ptr [rdi + rax + 0x30]; ret; 
0x0000000000424c0a: sal byte ptr [rbp + 0x53], 0x83; sub eax, 0xa809c; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x000000000048f801: sal byte ptr [rbp + 0x5c], 0xc7; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000044e3d6: sal byte ptr [rbp + 0x67], 0x44; mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000048ef99: sal byte ptr [rbp + 0x7c], 0x48; mov ecx, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; call rcx; 
0x000000000048fbb3: sal byte ptr [rbp + 0xa], 0x5b; ret; 
0x000000000049bf33: sal byte ptr [rbp + 0xa], 0xf3; ret; 
0x00000000004505f2: sal byte ptr [rbp + 0xb], cl; ret; 
0x000000000041f029: sal byte ptr [rbp + 0xc], cl; sub dword ptr [rip + 0xadbfd], 1; ret; 
0x000000000041ff2a: sal byte ptr [rbp + 1], 1; ret; 
0x0000000000488d18: sal byte ptr [rbp + 2], 0x5b; ret; 
0x0000000000489dbf: sal byte ptr [rbp + 2], cl; call rax; 
0x00000000004906ca: sal byte ptr [rbp + 3], cl; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000044bc06: sal byte ptr [rbp + 4], cl; mov rax, rdi; ret; 
0x000000000049bd27: sal byte ptr [rbp + 6], 0x5b; ret; 
0x0000000000470dd7: sal byte ptr [rbp + 6], cl; sub dword ptr [rdi], 1; ret; 
0x000000000041c1c6: sal byte ptr [rbp + 7], cl; xor eax, eax; ret; 
0x0000000000425e80: sal byte ptr [rbp + rax + 0x48], cl; mov dword ptr [rbx], edx; xor eax, eax; pop rbx; ret; 
0x0000000000443ab0: sal byte ptr [rbp + rbx - 0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000000044d890: sal byte ptr [rbp + rcx + 0x48], cl; bsf eax, edx; shr rax, 2; ret; 
0x0000000000482bf8: sal byte ptr [rbp + rdx - 0x78], cl; rol dword ptr [rax + 0x1e740fe1], 1; ret; 
0x000000000044a820: sal byte ptr [rbp - 0x13], cl; lea rax, qword ptr [rcx - 1]; ret; 
0x000000000041d478: sal byte ptr [rbp - 0x13], cl; ret; 
0x000000000042879b: sal byte ptr [rbp - 0x1e], 0x31; shr byte ptr [rcx], 0xc8; ret; 
0x000000000041fc16: sal byte ptr [rbp - 0x21], cl; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000004078e4: sal byte ptr [rbp - 0x27], cl; ret; 
0x000000000042eb1d: sal byte ptr [rbp - 0x30], 0xc5; std; xlatb; ret; 
0x000000000042eb15: sal byte ptr [rbp - 0x38], 0xc5; std; xlatb; ret 0xc085; 
0x0000000000443a0d: sal byte ptr [rbp - 0x50], 0xc5; std; xlatb; ret; 
0x0000000000443a05: sal byte ptr [rbp - 0x68], 0xc5; std; xlatb; ret 0xc085; 
0x000000000048241c: sal byte ptr [rbp - 0xf], cl; ret; 
0x000000000041f0b0: sal byte ptr [rbx + 0x25], 1; movzx eax, byte ptr [rax]; ret; 
0x0000000000419182: sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x000000000042eb92: sal byte ptr [rbx + rbx - 0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x0000000000499f42: sal byte ptr [rbx + rcx + 0x48], 0x8b; and al, 0x10; add rsp, 0x28; ret; 
0x0000000000479652: sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x0000000000481bb9: sal byte ptr [rcx + rax - 0x6e], 0x48; lea ecx, dword ptr [rip + 0x2305c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004801f9: sal byte ptr [rcx + rax - 0x6e], 0x48; lea ecx, dword ptr [rip + 0x24a1c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000443364: sal byte ptr [rcx + rax - 0x6e], 0x48; lea ecx, dword ptr [rip + 0x618b1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000441ce4: sal byte ptr [rcx + rax - 0x6e], 0x48; lea ecx, dword ptr [rip + 0x62f31]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000443d0c: sal byte ptr [rcx + rdx + 0x48], cl; bsf eax, edx; ret; 
0x0000000000494d9f: sal byte ptr [rcx - 0x73], cl; dec dword ptr [rbp + r9*4 + 0x74]; ret; 
0x000000000045357d: sal byte ptr [rcx], 0xc9; xor edx, edx; movzx eax, al; add eax, 1; push rax; call rbx; 
0x00000000004439c3: sal byte ptr [rcx], 0xd2; lea rax, qword ptr [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004439e3: sal byte ptr [rcx], 0xd2; lea rax, qword ptr [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000443a21: sal byte ptr [rcx], 0xd2; lea rax, qword ptr [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004439a3: sal byte ptr [rcx], 0xd2; lea rax, qword ptr [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000041f8ce: sal byte ptr [rcx], 1; ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000044c215: sal byte ptr [rcx], 1; shl byte ptr [rip + 0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000000483b06: sal byte ptr [rdi + 0x48], 0x89; ret; 
0x000000000048c4ca: sal byte ptr [rdi + 0xb], 0x48; add esp, 8; ret; 
0x000000000044fc46: sal byte ptr [rdi + rdx*2 + 0x4d], 0x89; ret; 
0x0000000000443edb: sal byte ptr [rdx + 0x48], cl; bsf eax, edx; ret; 
0x000000000044d87b: sal byte ptr [rdx + 0x48], cl; bsf eax, edx; shr rax, 2; ret; 
0x0000000000499c2b: sal byte ptr [rdx + 0x49], 0x89; call 0x49f32581; mov edx, dword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000041f8f3: sal byte ptr [rdx + rbx + 0x45], 0x31; sar byte ptr [rdx + 2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000048fda6: sal byte ptr [rdx + rcx + 0x48], 0x8d; adc eax, 0x3bcf0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x000000000048ed14: sal byte ptr [rdx + rcx + 0x48], 0x8d; or eax, 0x3cd62; mov qword ptr [rax], rcx; pop rbp; ret; 
0x0000000000444913: sal byte ptr [rdx + rdx + 0x48], 0xff; ret 0x2288; 
0x0000000000409173: sal byte ptr [rdx + rsi + 0x48], 0x8b; adc byte ptr [r8 - 0x75], cl; push rbx; sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x00000000004077eb: sal byte ptr [rdx + rsi*2 + 0x48], 0xc7; ret 0xfff0; 
0x00000000004308ef: sal byte ptr [rdx - 0x10f0992e], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000430a10: sal byte ptr [rdx - 0x10f09930], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000041dd9b: sal byte ptr [rsi + 0x12], 0x48; mov eax, dword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000041db69: sal byte ptr [rsi + 0x14], 0x48; mov eax, dword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000004516f4: sal byte ptr [rsi + rbp + 0x48], 0x8b; push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x000000000048f8e6: sal byte ptr [rsi + rcx + 0x48], 0x8d; add eax, 0x3d6f0; mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x0000000000443caf: sal byte ptr [rsi + rdi*2 + 0x48], cl; bsf eax, edx; ret; 
0x000000000042e6c7: sal byte ptr [rsi + rdx + 0xf], 0xbc; ror byte ptr [rax + 1], 0xf8; add rax, rcx; ret; 
0x000000000044aaff: sal byte ptr [rsi + rdx*8 + 0x48], cl; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000455581: sal byte ptr [rsp + rbp + 0x48], 0x83; ret; 
0x000000000048cac1: sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x0000000000401c1b: sal byte ptr [rsp + rsi*8 + 0x5d], cl; mov rsi, rax; mov edi, 0x4cbb10; jmp rdx; 
0x000000000048533f: sal dh, 1; ret 0xf08; 
0x000000000048b83f: sal dword ptr [rbp - 0x2a], 1; mov eax, dword ptr [rcx]; ret; 
0x0000000000413d34: sal dword ptr [rcx], -0x37; jmp rax; 
0x000000000049830b: sal dword ptr [rcx], 1; rol cl, 0xe9; add esi, esi; ret 0xf304; 
0x0000000000464f66: sal dword ptr [rcx], 1; shr cl, cl; ret 0xffde; 
0x0000000000497011: sal dword ptr [rdi + rbx + 0x4c], -0x77; ret 0x8348; 
0x000000000043084f: sal dword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043098f: sal dword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000499d6b: sal dword ptr [rdx - 0xa], 1; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000492c1f: sal dword ptr [rsi + 0x1f0f66ff], cl; add byte ptr [rax], r8b; pop rbp; ret; 
0x000000000042b696: sal dword ptr [rsi + 0xb], cl; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000044af47: sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043084e: sal qword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043098e: sal qword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000448b26: salc; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x000000000048f8f4: salc; add eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000048f904: salc; add eax, dword ptr [rax]; mov qword ptr [rip + 0x3d6ba], rax; ret; 
0x000000000048f8ed: salc; add eax, dword ptr [rax]; mov qword ptr [rip + 0x3d6d1], rax; add rsp, 8; ret; 
0x000000000048f90b: salc; add eax, dword ptr [rax]; ret; 
0x000000000044ac7e: salc; clc; ret; 
0x00000000004536ce: salc; fsqrt; jmp qword ptr [rsi + 0xf]; 
0x0000000000437fab: salc; lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000048b841: salc; mov eax, dword ptr [rcx]; ret; 
0x000000000040263f: salc; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000000468ed5: salc; mov qword ptr [rsp - 0x18], rax; mov word ptr [rsp - 0x10], si; fld xword ptr [rsp - 0x18]; ret; 
0x0000000000414199: salc; mov rdi, r12; call qword ptr [rcx + 0x38]; 
0x0000000000415033: salc; mov rdi, r12; mov dword ptr [rbp - 0x4f8], r9d; call qword ptr [rax + 0x38]; 
0x00000000004144a5: salc; mov rdi, r12; mov dword ptr [rbp - 0x500], r9d; call qword ptr [rbx + 0x38]; 
0x0000000000415278: salc; mov rdi, r12; mov qword ptr [rbp - 0x510], r10; call qword ptr [rax + 0x38]; 
0x0000000000468e6c: salc; movd xmm0, esi; ret; 
0x000000000044ab01: salc; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000468eaa: salc; shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x0000000000406a7a: sar ah, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000048355f: sar ah, cl; jmp qword ptr [rsi + 0x2e]; 
0x000000000048322d: sar bh, 0xff; call qword ptr [rbp + 0x53]; 
0x0000000000403e94: sar bh, 0xff; dec dword ptr [rax - 0x39]; ret; 
0x00000000004851ae: sar bh, 0xff; dec dword ptr [rbp + rcx*4 + 0xd]; jmp qword ptr [rbx]; 
0x0000000000422cfb: sar bh, 0xff; inc dword ptr [rbp + 0x31]; shl byte ptr [rdi + rax*8], 0xc; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000048ce07: sar bh, 0xff; lcall ptr [rbx + 0x64]; mov eax, dword ptr [rax]; ret; 
0x000000000044e257: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000044e2fb: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000044e533: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x000000000048f795: sar bh, 0xff; ret; 
0x000000000048f772: sar bh, 0xff; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000048f88f: sar bh, 0xff; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000490332: sar byte ptr [r8 + 0xd9], 1; syscall; 
0x000000000041fa6a: sar byte ptr [rax + 0x10], 0x48; cmovne eax, edx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x000000000041a70b: sar byte ptr [rax + 0x29], 0x48; mov dword ptr [rbx + 0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000049cc70: sar byte ptr [rax + 0x48ffffff], 0xc7; ret 0x87a0; 
0x0000000000490333: sar byte ptr [rax + 0xd9], 1; syscall; 
0x000000000044f132: sar byte ptr [rax - 0x4f], 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000004589d8: sar byte ptr [rcx - 0x2b], 0x2d; ret 0; 
0x0000000000493483: sar byte ptr [rdi + 0x3002], cl; mov eax, 0x9e; sete sil; add esi, esi; syscall; 
0x000000000044e457: sar byte ptr [rdi - 0x64], 0xb8; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000048af4a: sar byte ptr [rdi - 9], cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000470c7f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f3: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec5f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f817: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f752: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5b5: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4e6: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x000000000045473f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x000000000045462b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x000000000045450b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d353: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e13: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x000000000042414b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424113: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c3b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c03: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac3: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x000000000042361f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c6f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424307: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d6b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf5: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab3: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x000000000042058f: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f045: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041eb45: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e1: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e497: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d1: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d131: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cddd: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x0000000000417883: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e2: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084ab: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x0000000000408470: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040838c: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065d0: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404ddd: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df4: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dcb: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403ca0: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040120c: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x000000000040137b: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470de9: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004242dc: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004246eb: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249dd: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000000425760: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a1: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fbc: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000041f8f8: sar byte ptr [rdx + 2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000443419: sar byte ptr [rdx], 0x48; lea eax, dword ptr [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000045ca29: sar byte ptr [rsi + 0x24], 0x83; call 0x8485333; pop rbx; ret; 
0x000000000043103a: sar byte ptr [rsi], 0x41; jmp rcx; 
0x0000000000401af7: sar byte ptr [rsi], 1; jmp rax; 
0x000000000043bd7b: sar ch, 0xff; jmp qword ptr [rdx - 0xf]; 
0x000000000040f476: sar cl, 0xff; dec dword ptr [rax - 0x7d]; ret; 
0x000000000046ccdf: sar dh, 0xff; inc dword ptr [rax - 0x7bf09a05]; or byte ptr fs:[rax], al; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x000000000046e6a5: sar dh, 0xff; jmp qword ptr [rdi + 0x75]; 
0x000000000046e453: sar dh, 0xff; jmp qword ptr [rdi - 0x75]; 
0x000000000046ccee: sar dh, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000043b739: sar dword ptr [rax + rcx*2 + 0x11], 1; imul edi, ebp, 0x487cd162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b740: sar dword ptr [rax + rcx*2 + 0x11], 1; jno 0x3b744; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b747: sar dword ptr [rax + rcx*2 + 0x11], 1; jns 0x3b74c; ret; 
0x000000000044c192: sar dword ptr [rax], 1; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000045fed2: sar dword ptr [rax], 1; test dil, dil; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000044bb30: sar dword ptr [rbp + 0x48], 1; out 0x49, eax; jmp qword ptr [rdx - 0x2f]; 
0x000000000044b46d: sar dword ptr [rsi + 0x7f], 0x23; vzeroupper; ret; 
0x0000000000474225: sar eax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000493cdc: sar eax, 3; pop rbx; pop rbp; pop r12; ret; 
0x000000000042ed82: sar eax, cl; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000000473cf6: sar ebp, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x0000000000478b3c: sar ecx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x00000000004939ca: sar edi, cl; dec dword ptr [rax - 0x77]; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x0000000000478be6: sar edx, 2; sub eax, edx; ret; 
0x000000000042ed88: sar edx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000041d41d: sar esi, -1; inc dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000465366: sar esi, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000041914a: sar esi, -1; jmp qword ptr [rsi - 0x70]; 
0x0000000000473cf5: sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x0000000000474224: sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000493cdb: sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x000000000042ed81: sar rax, cl; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000000478b3b: sar rcx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x0000000000478be5: sar rdx, 2; sub eax, edx; ret; 
0x000000000042ed87: sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000048f031: sbb ah, bh; jmp qword ptr [rsi + 0x66]; 
0x000000000046ec05: sbb ah, bl; add eax, 0x445b0100; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000044f2e5: sbb al, 0; add byte ptr [rax], al; syscall; 
0x000000000046c2bc: sbb al, 0; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000480200: sbb al, 0x4a; add al, byte ptr [rax]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044cb00: sbb al, 0x64; sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000004883db: sbb al, 0xba; add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000471fbb: sbb al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; test dword ptr [rax], edi; idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x0000000000409956: sbb al, byte ptr [rax]; add byte ptr [rbx - 0x60f43], al; call qword ptr [rax]; 
0x000000000041f8f5: sbb al, byte ptr [rbp + 0x31]; sar byte ptr [rdx + 2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000498e4f: sbb al, byte ptr [rdx]; add byte ptr [rax + 0x63], cl; or al, 0x8a; add rdx, rcx; jmp rdx; 
0x000000000048eda3: sbb bh, ah; jmp qword ptr [rsi + 0x2e]; 
0x000000000044edff: sbb bl, al; nop dword ptr [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000000424af3: sbb bl, al; nop dword ptr [rax]; mov rsi, qword ptr [rsp + 0x18]; add rsp, 0x18; jmp rax; 
0x000000000044863a: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000447f7a: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004485fb: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f3b: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000448639: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, qword ptr [rdi + 0x1b]; ret; 
0x0000000000447f79: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004485fa: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, qword ptr [rdi + 0x19]; ret; 
0x0000000000447f3a: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x000000000041d62f: sbb byte ptr [r11 + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000046be11: sbb byte ptr [r8 + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x000000000041fddb: sbb byte ptr [r8 + 0x39], cl; ret; 
0x000000000048e8a8: sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x0000000000418d4f: sbb byte ptr [r8 + 1], r9b; ret 0x148; 
0x000000000041d4d4: sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x000000000048fc8f: sbb byte ptr [r8 - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x000000000047837d: sbb byte ptr [r9 + r9*4 - 0x1a], al; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000046be12: sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x000000000041fddc: sbb byte ptr [rax + 0x39], cl; ret; 
0x000000000048e8a9: sbb byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x0000000000418d50: sbb byte ptr [rax + 1], cl; ret 0x148; 
0x000000000040917d: sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x00000000004893ab: sbb byte ptr [rax + rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000408333: sbb byte ptr [rax - 0x75], cl; jo 0x8358; mov edi, ebp; ror rdx, 0x11; xor rdx, qword ptr fs:[0x30]; call rdx; 
0x000000000041d4cd: sbb byte ptr [rax - 0x77], cl; adc byte ptr [r8 - 0x77], r9b; sbb byte ptr [r8 - 0x77], r9b; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004225d4: sbb byte ptr [rax - 0x77], cl; and al, 0x10; call rax; 
0x000000000041d4d5: sbb byte ptr [rax - 0x77], cl; push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x000000000048fc90: sbb byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x00000000004229e6: sbb byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x0000000000419b70: sbb byte ptr [rax - 1], bh; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000044e245: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000404baa: sbb byte ptr [rbp + 9], al; ret; 
0x000000000041d630: sbb byte ptr [rbx + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000495795: sbb byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x0000000000424594: sbb byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x00000000004711aa: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000419509: sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000048f11f: sbb byte ptr [rbx + rcx*4 + 0x77], cl; and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000041ec6b: sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x0000000000407228: sbb byte ptr [rcx + 1], cl; ret 0x894c; 
0x0000000000468306: sbb byte ptr [rcx + 1], cl; ret 0x8d48; 
0x000000000042104e: sbb byte ptr [rcx + 1], cl; ret; 
0x000000000044f673: sbb byte ptr [rcx + rcx*4 + 0x44], al; and al, 0xc; mov rdi, r15; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 0x10], rbx; call rax; 
0x00000000004908e9: sbb byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000047837e: sbb byte ptr [rcx + rcx*4 - 0x1a], al; pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000044d504: sbb byte ptr [rcx + rcx*4 - 0x1f], cl; mov rdx, r13; call rbx; 
0x000000000045038b: sbb byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000420992: sbb byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000410f5b: sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000411b97: sbb byte ptr [rcx - 0x75], cl; push rdi; and byte ptr [rcx + rcx*4 - 9], cl; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000040723d: sbb byte ptr [rcx - 0x77], cl; ret 0x1574; 
0x0000000000407a6e: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000419b43: sbb byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000045093b: sbb byte ptr [rdi + 0x16], dh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000450961: sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000478586: sbb byte ptr [rsi + 0x1f], dh; mov rax, qword ptr [rax + 0xe0]; mov esi, 0xffffffff; call qword ptr [rax + 0x18]; 
0x0000000000499d69: sbb ch, al; sal dword ptr [rdx - 0xa], 1; dec dword ptr [rax - 0x7d]; ret; 
0x000000000045e252: sbb ch, byte ptr [rax - 4]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000415760: sbb ch, cl; pop rdx; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000048f695: sbb cl, byte ptr [rax - 0x7b]; div byte ptr [rbp + 0x25]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x0000000000490022: sbb cl, byte ptr [rax]; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000004410ed: sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000442d4a: sbb cl, byte ptr [rdi]; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044256a: sbb cl, byte ptr [rdi]; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044295a: sbb cl, byte ptr [rdi]; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044217a: sbb cl, byte ptr [rdi]; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441c4d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044142d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x0000000000440c0d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x0000000000442319: sbb cl, byte ptr [rdi]; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044176d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440f4d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044072d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044190d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000044280a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044202a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044313a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440a6d: sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000440ba3: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004418a3: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004413c3: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044270b: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044303b: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000441be3: sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440ee3: sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000440a03: sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441703: sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000044285b: sbb cl, byte ptr [rdi]; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044207b: sbb cl, byte ptr [rdi]; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000424ae9: sbb cl, ch; add dword ptr [rsi + 0x4890ffff], esi; add esp, 0x18; ret; 
0x0000000000422f0b: sbb cl, ch; ret 0; 
0x000000000047e8f8: sbb dword ptr [r8], r8d; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000402b90: sbb dword ptr [rax - 0x77], ecx; or byte ptr [rax + 0x9e], r15b; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000048f726: sbb dword ptr [rax - 0x7b], ecx; div byte ptr [rbp + 0x2c]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000047e881: sbb dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000047e8f9: sbb dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004504d8: sbb dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000411d85: sbb dword ptr [rax], eax; add byte ptr [rcx - 0x75], cl; mov ds, eax; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x000000000049ca83: sbb dword ptr [rbx], esi; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000044a4f7: sbb eax, -1; ret; 
0x000000000044f771: sbb eax, 0x1f0f3ceb; add byte ptr [rax - 0x73], cl; push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000488ce2: sbb eax, 0x4000003; xor eax, eax; ret; 
0x0000000000408172: sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000004385e5: sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004385e0: sbb eax, 0x477f0ff3; sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000047262f: sbb eax, 0x83fffff1; ret; 
0x0000000000486489: sbb eax, 0x89000003; ret 0xe8c0; 
0x000000000041988c: sbb eax, 0x8c48348; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000041efd1: sbb eax, 0xadc62; add dword ptr [rip + 0xadc57], 1; pop rbx; ret; 
0x0000000000443ab2: sbb eax, 0xc0bc0ff3; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000000429bd2: sbb eax, 0xcfbc0ff3; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000041c1a7: sbb eax, 0xe6ebe074; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000485d0a: sbb eax, 0xee80003; sal bh, cl; jmp qword ptr [rsi + 0x66]; 
0x000000000047e6a1: sbb eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000047e719: sbb eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f042: sbb eax, dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041cdda: sbb eax, dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x0000000000401209: sbb eax, dword ptr [rbp + 0x31]; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x000000000049765f: sbb eax, eax; add rsp, 0x10; and eax, 2; sub rax, 1; pop rbx; ret; 
0x0000000000497703: sbb eax, eax; add rsp, 0x10; or rax, 1; pop rbx; ret; 
0x00000000004679da: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000000000042f1e7: sbb eax, eax; or eax, 1; ret; 
0x000000000044a4f5: sbb eax, eax; sbb eax, -1; ret; 
0x000000000049a5b1: sbb ecx, ecx; cmp qword ptr [rsi + 8], rdi; cmovbe eax, ecx; ret; 
0x000000000048c157: sbb edi, esp; jmp qword ptr [rsi + 0xf]; 
0x0000000000468d05: sbb edx, ebx; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000042eb94: sbb esi, ebx; bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000004260aa: sbb esi, esi; add eax, 0xa6cd2; lea rax, qword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x0000000000452c64: sbb esp, dword ptr [rcx - 0x1601fff9]; ret 0xfff4; 
0x000000000048c40e: sbb esp, edi; jmp qword ptr [rsi + 0x66]; 
0x0000000000468d04: sbb r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000049765e: sbb rax, rax; add rsp, 0x10; and eax, 2; sub rax, 1; pop rbx; ret; 
0x0000000000497702: sbb rax, rax; add rsp, 0x10; or rax, 1; pop rbx; ret; 
0x000000000042dd42: scasb al, byte ptr [rdi]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000442d9e: scasb al, byte ptr [rdi]; add eax, 0x83480000; ret 0xe910; 
0x0000000000426e8e: scasb al, byte ptr [rdi]; add r8b, byte ptr [r8]; lea rax, qword ptr [rip + 0x247f7]; cmove rax, rdx; ret; 
0x0000000000401f71: scasb al, byte ptr [rdi]; or al, 0; add rsp, 0x88; pop rbx; ret; 
0x00000000004261e6: scasb al, byte ptr [rdi]; std; lcall ptr [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000046986e: scasb al, byte ptr [rdi]; xchg eax, esi; stc; jmp qword ptr [rsi + 0x66]; 
0x0000000000442e9d: scasd eax, dword ptr [rdi]; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000452e5e: scasd eax, dword ptr [rdi]; add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000497970: scasd eax, dword ptr [rdi]; mov ah, 0x24; pop rax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; call qword ptr [rcx]; 
0x0000000000473b45: scasd eax, dword ptr [rdi]; mov dl, 2; add al, ch; sal bl, cl; clc; jmp qword ptr [rsi - 0x70]; 
0x000000000045eda6: scasd eax, dword ptr [rdi]; ret 0x148; 
0x0000000000418e7a: scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000421049: scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000044c42e: scasd eax, dword ptr [rdi]; ret 0xda89; 
0x000000000044c43f: scasd eax, dword ptr [rdi]; ret 0xfee9; 
0x000000000046b73d: scasd eax, dword ptr [rdi]; ret 0xffff; 
0x0000000000419048: scasd eax, dword ptr [rdi]; ret; 
0x000000000044c43c: scasd eax, dword ptr [rdi]; ror dword ptr [rdi], -0x51; ret 0xfee9; 
0x000000000049591f: scasd eax, dword ptr [rdi]; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000041f8d4: setae al; ret; 
0x0000000000402fc7: sete ah; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000049348f: sete dh; add esi, esi; syscall; 
0x000000000045e9ea: sete dh; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000402fc6: sete r12b; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000049348e: sete sil; add esi, esi; syscall; 
0x000000000045e9e9: sete sil; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000493aa9: setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000041c1dd: setne al; movzx eax, al; neg eax; ret; 
0x000000000049758d: setne al; ret; 
0x000000000044dc3b: shl byte ptr [rax + 0x48], 1; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444182: shl byte ptr [rax + 0x48], 1; clc; sub rax, rdx; vzeroupper; ret; 
0x000000000042eabb: shl byte ptr [rax + 0x48], 1; clc; vzeroupper; ret; 
0x000000000049cc4a: shl byte ptr [rax + 0x48ffffff], 0xc7; ret 0x78e0; 
0x000000000044dbfb: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444116: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x000000000042ea7b: shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x0000000000422d01: shl byte ptr [rdi + rax*8], 0xc; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000044c217: shl byte ptr [rip + 0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000000493cf5: shl byte ptr [rsi + 0x2e], cl; nop dword ptr [rax + rax]; ret; 
0x000000000044a73f: shl byte ptr [rsi + 0x44], 0xf; out dx, eax; ret 0xf66; 
0x0000000000448ae7: shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x00000000004435d5: shl byte ptr [rsi + 0xf], 0xeb; ret 0xf66; 
0x00000000004309fb: shl byte ptr [rsi + 0xf], 0xef; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000430a12: shl byte ptr [rsi + 0xf], 1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x0000000000481db7: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000481da6: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x00000000004308f1: shl byte ptr [rsi + 0xf], cl; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004971e4: shl byte ptr [rsi - 0x7f], cl; ret 0x7fff; 
0x0000000000476ba2: shl dword ptr [rax - 0x45], 0x4c; add byte ptr [rax - 0x39], cl; ret 0xc208; 
0x0000000000450601: shl dword ptr [rbx], 0x4e; adc byte ptr [rax - 0x73], cl; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x00000000004065e3: shl dword ptr [rcx + 0xc], 1; add byte ptr [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi - 0x70]; 
0x0000000000430976: shl dword ptr [rsi + 0xf], -0x11; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044a59f: shl dword ptr [rsi + 0xf], -0x26; ret; 
0x0000000000481da2: shl dword ptr [rsi + 0xf], -0x29; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x0000000000448adf: shl dword ptr [rsi + 0xf], 0x74; fisub dword ptr [rsi + 0xf]; xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000430a2d: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x2373; 
0x0000000000430a16: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x00000000004309ff: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x000000000042f4bb: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000430991: shl dword ptr [rsi + 0xf], 1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042e3fc: shl dword ptr [rsi + 0xf], 1; xlatb; ret 0xc085; 
0x0000000000430851: shl dword ptr [rsi + 0xf], cl; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000048ca36: shl eax, 4; mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000452e87: shl eax, cl; ret; 
0x0000000000443dbb: shl ecx, 0x20; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000452e82: shl ecx, 3; pop r12; shl eax, cl; ret; 
0x0000000000467afc: shl ecx, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000467a7b: shl ecx, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000467a4a: shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x000000000044375a: shl edx, 0x30; or rax, rdx; bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x00000000004508e6: shl edx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, qword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000049783e: shl edx, cl; or r8, rdx; mov qword ptr [rsi], r8; ret; 
0x0000000000468e61: shl esi, 0x17; and eax, 0x7fffff; or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x0000000000468eac: shl esi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x000000000048f6d3: shl esi, cl; mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000467afb: shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000467a7a: shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000467a49: shl r9, cl; mov qword ptr [rdi], r9; ret; 
0x000000000048ca35: shl rax, 4; mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000443dba: shl rcx, 0x20; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000443759: shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, qword ptr [rdi + rax]; ret; 
0x00000000004508e5: shl rdx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, qword ptr [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000049783d: shl rdx, cl; or r8, rdx; mov qword ptr [rsi], r8; ret; 
0x0000000000468eab: shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x000000000048f6d2: shl rsi, cl; mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000467af4: shld eax, ecx, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000467a74: shld eax, ecx, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000467af3: shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000467a73: shld r8, r9, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x00000000004906e1: shr bl, 0xcf; nop dword ptr [rax]; call rax; 
0x0000000000499f51: shr bl, 0xf6; nop word ptr cs:[rax + rax]; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x0000000000469bab: shr bl, cl; adc eax, 0x83489066; ret 0x4101; 
0x000000000044c2f8: shr bl, cl; or eax, 0x441f0f; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000049cc99: shr byte ptr [rax + 0x48ffffff], 0xc7; ret 0x8960; 
0x0000000000406704: shr byte ptr [rcx - 0x76b70001], 1; ret 0xf748; 
0x000000000042879f: shr byte ptr [rcx], 0xc8; ret; 
0x000000000045bf18: shr byte ptr [rcx], cl; ret; 
0x000000000044ff4c: shr byte ptr [rdi], 1; sti; call qword ptr [rbp + 0x48]; 
0x000000000044c9de: shr byte ptr [rdx + 1], cl; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x00000000004260ad: shr byte ptr [rdx + rcx], cl; lea rax, qword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x00000000004778f4: shr cl, 0x39; popfq; clc; jmp qword ptr [rsi + 0xf]; 
0x0000000000464f68: shr cl, cl; ret 0xffde; 
0x0000000000448b2e: shr dword ptr [rax - 0x267af0e0], 1; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x000000000041f959: shr dword ptr [rbp + 0x1000a], cl; add byte ptr [rax], al; mov dword ptr [rip + 0xaadc5], eax; ret; 
0x000000000046bc16: shr eax, 0x20; or rdx, rcx; mov qword ptr [rsp - 0x10], rdx; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x0000000000499ee8: shr eax, 0x3f; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000044c11b: shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000045ee0d: shr eax, 1; imul rax, rdi; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000044d81b: shr eax, 2; ret; 
0x000000000044da5c: shr eax, 2; vzeroupper; ret; 
0x000000000040841d: shr eax, 3; lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000041fa0f: shr eax, 4; lea rdx, qword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x000000000044c166: shr eax, 6; and eax, 0x3fffc00; ret; 
0x00000000004729e3: shr eax, 7; ret; 
0x000000000041c1d3: shr eax, cl; out 0xff, al; dec dword ptr [rax + 0x39]; ret; 
0x00000000004236df: shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000467c0c: shr ecx, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000467b95: shr ecx, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000467b64: shr ecx, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000467c0b: shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000467b94: shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000467b63: shr r9, cl; mov qword ptr [rdi], r9; ret; 
0x000000000046bc15: shr rax, 0x20; or rdx, rcx; mov qword ptr [rsp - 0x10], rdx; movdqa xmm0, xmmword ptr [rsp - 0x18]; pinsrw xmm0, eax, 6; ret; 
0x0000000000499ee7: shr rax, 0x3f; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000045ee0c: shr rax, 1; imul rax, rdi; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000044d81a: shr rax, 2; ret; 
0x000000000044da5b: shr rax, 2; vzeroupper; ret; 
0x000000000040841c: shr rax, 3; lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000041fa0e: shr rax, 4; lea rdx, qword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x0000000000467c04: shrd eax, ecx, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000467b8e: shrd eax, ecx, cl; mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000467c03: shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000467b8d: shrd r8, r9, cl; mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x00000000004489d5: shufps xmm0, xmmword ptr [rdi + 2], 0; lea rax, qword ptr [rdi + 2]; vzeroupper; ret; 
0x00000000004447b5: shufps xmm0, xmmword ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000426116: sldt word ptr [rax]; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x000000000046079d: stc; adc byte ptr [rbx - 0x6af06ec4], cl; ret 0x8941; 
0x000000000044a11f: stc; adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000456e1b: stc; add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x4a], al; add byte ptr [rax - 0x77], cl; ret 0x8445; 
0x0000000000493194: stc; add cl, byte ptr [rdi]; xchg eax, esp; ret 0xfb83; 
0x0000000000494fce: stc; add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x00000000004834d4: stc; add dword ptr [rdi + 0x30], esi; mov eax, 0x106; syscall; 
0x000000000048cb0d: stc; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000485ca1: stc; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x000000000048db9c: stc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000490041: stc; dec dword ptr [rax - 0x7b]; sal byte ptr [rax + rcx + 0x5b], 0x5d; pop r12; ret; 
0x0000000000487961: stc; dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x00000000004733db: stc; fdiv st(0), st(0); dec dword ptr [rax - 0x77]; ret 0xdce9; 
0x0000000000469f89: stc; inc dword ptr [rbp + 1]; dec dword ptr [rax - 0x7d]; ret; 
0x000000000047086f: stc; jmp qword ptr [rsi + 0x2e]; 
0x0000000000465680: stc; jmp qword ptr [rsi + 0x66]; 
0x0000000000467695: stc; jmp qword ptr [rsi + 0xf]; 
0x0000000000464f5c: stc; jmp qword ptr [rsi - 0x70]; 
0x00000000004978e9: stc; jmp rcx; 
0x0000000000448a2f: stc; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004332e8: stc; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042471b: stc; mov ecx, 0x3ce80007; mov bh, 0xff; jmp qword ptr [rsi + 0x66]; 
0x00000000004332e2: stc; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000448a27: stc; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447e7: stc; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000429bff: stc; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c1f: stc; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000044ac7d: stc; salc; clc; ret; 
0x000000000043bc48: stc; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x00000000004447ef: stc; vzeroupper; ret; 
0x000000000042f267: stc; xlatb; ret 0xff2d; 
0x000000000048c526: std; adc dword ptr [rax + rax], eax; add byte ptr [rbp + 0x13], dh; mov r8, qword ptr [rip + 0x40ddc]; mov rax, r8; ret; 
0x0000000000473cf7: std; add cl, byte ptr [rcx + rcx*4 - 0x16]; call qword ptr [rax + 0x38]; 
0x000000000042645f: std; cmp dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x5256; cmovne rax, rdx; ret; 
0x000000000041f02e: std; fisttp dword ptr [rdx]; add byte ptr [rcx], al; ret; 
0x0000000000425334: std; jmp qword ptr [rsi + 0x2e]; 
0x00000000004710d0: std; jmp qword ptr [rsi + 0x66]; 
0x0000000000470da5: std; jmp qword ptr [rsi + 0xf]; 
0x00000000004261e7: std; lcall ptr [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000448a0b: std; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x0000000000432b03: std; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000448a07: std; mov dword ptr [rdi + rdx - 3], ecx; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x00000000004447d7: std; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000044e6a7: std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000000432b0b: std; mov word ptr [rdi - 2], cx; ret; 
0x000000000044aedc: std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000044b925: std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000044b80e: std; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000043b978: std; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b73e: std; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000044ac16: std; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004447db: std; vzeroupper; ret; 
0x000000000042eb19: std; xlatb; ret 0xc085; 
0x000000000042f0a7: std; xlatb; ret 0xe883; 
0x000000000042eb21: std; xlatb; ret; 
0x0000000000481fb4: std; xlatb; rol ch, cl; std; xlatb; ret; 
0x000000000042ea4e: std; xlatb; rol dword ptr [rbp + 0x311b75c0], -0x40; vzeroupper; ret; 
0x000000000042eb11: std; xlatb; rol dword ptr [rbp - 0x3a378a40], -3; xlatb; ret 0xc085; 
0x0000000000443a01: std; xlatb; rol dword ptr [rbp - 0x3a678a40], -3; xlatb; ret 0xc085; 
0x000000000049b0b1: sti; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000044ff4e: sti; call qword ptr [rbp + 0x48]; 
0x000000000044d9a8: sti; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000044ddd7: sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000049c81d: sti; dec dword ptr [rax - 0x7d]; ret; 
0x000000000044cb02: sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000044c23f: sti; jmp qword ptr [rsi + 0x66]; 
0x000000000044cc60: sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000473f5c: sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000432ee8: sti; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000432ee2: sti; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004650ab: sti; ret 0xffbf; 
0x0000000000453619: sti; test dword ptr [rax + rax], 0xfaf8fee8; jmp qword ptr [rsi + 0x2e]; 
0x000000000043b96a: sti; vmovups zmmword ptr [r9 - 0x100], zmm12; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043bc3a: sti; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044ad11: sti; vmovups zmmword ptr [rsi - 0x100], zmm2; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000401c4e: stosb byte ptr [rdi], al; add r15b, dil; rcr byte ptr [rbp - 0x3a], 1; add eax, 0xca5c5; add ebx, esi; ret; 
0x000000000044bc18: stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000426d51: stosd dword ptr [rdi], eax; add al, byte ptr [r8]; cmove rax, rdx; ret; 
0x0000000000443f84: stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000044d924: stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x00000000004214f1: stosd dword ptr [rdi], eax; nop word ptr [rax + rax]; call rax; 
0x00000000004236e4: stosd dword ptr [rdi], eax; pop rbp; ret; 
0x000000000048ca89: stosd dword ptr [rdi], eax; xor eax, eax; ret; 
0x00000000004236e3: stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000046781e: str word ptr [rcx]; ret 0x8f74; 
0x000000000048d954: sub al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000044be56: sub al, 0x72; add cl, byte ptr [rax + 0x77f8c50f]; ret; 
0x0000000000477d10: sub al, 0x8b; std; jmp qword ptr [rsi + 0x2e]; 
0x0000000000496ca1: sub al, 0xa8; add rax, r13; jmp rax; 
0x0000000000430043: sub al, 0xa; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000401f70: sub al, 0xae; or al, 0; add rsp, 0x88; pop rbx; ret; 
0x0000000000414675: sub al, 0xb; add byte ptr [rax - 0x75], cl; add al, 0xc1; mov ecx, 1; jmp rax; 
0x000000000041471e: sub al, 0xb; add byte ptr [rax - 0x75], cl; add al, 0xc7; jmp rax; 
0x000000000048f72b: sub al, 0xc7; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x0000000000481d20: sub al, 1; add byte ptr [rax], al; bsr rsi, rsi; lea rax, qword ptr [rdi + rsi]; ret; 
0x0000000000441f57: sub al, 6; add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x0000000000420ed2: sub al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; add eax, 0xa98a4; ret; 
0x000000000048dadb: sub al, byte ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000497a32: sub al, byte ptr [rdx]; add byte ptr [rdi], cl; mov dh, 0xc9; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x000000000042f405: sub al, ch; std; xlatb; ret; 
0x0000000000455042: sub bh, dl; cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000041917e: sub byte ptr [r13 - 0x7b], r8b; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000410f42: sub byte ptr [r15 + rcx - 0x4a], r8b; ret; 
0x000000000046be15: sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x0000000000450943: sub byte ptr [r9], r8b; ret; 
0x000000000048511e: sub byte ptr [rax + 0x39], cl; ret 0x870f; 
0x000000000045649b: sub byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000048511d: sub byte ptr [rax + 0x39], r9b; ret 0x870f; 
0x000000000045ed9f: sub byte ptr [rax - 0x73], cl; dec dword ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x148; 
0x00000000004774bc: sub byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000484696: sub byte ptr [rax - 0x7d], cl; ret; 
0x00000000004652a4: sub byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045cf64: sub byte ptr [rax], al; add byte ptr [rax], al; add al, ch; ret 0xfab1; 
0x00000000004862cb: sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000481bf4: sub byte ptr [rax], dh; add al, byte ptr [rax]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000041917f: sub byte ptr [rbp - 0x7b], al; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000495d6e: sub byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000409191: sub byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000046bb5f: sub byte ptr [rbx + 0x5d], bl; ret; 
0x000000000045f7df: sub byte ptr [rbx + 0x6d7392d], al; add byte ptr [rcx], al; xor eax, eax; add rsp, 8; ret; 
0x000000000048e84f: sub byte ptr [rbx + rcx*4 + 0x5c], cl; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7cd: sub byte ptr [rbx + rcx*4 + 0x5c], cl; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000493968: sub byte ptr [rbx - 0x1b], dh; mov eax, 1; ret; 
0x0000000000493967: sub byte ptr [rbx - 0x1b], sil; mov eax, 1; ret; 
0x0000000000492bc1: sub byte ptr [rcx + 2], dh; add al, ch; push rsi; add esi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000046be16: sub byte ptr [rcx + rcx*4 + 4], cl; ret 0x8b48; 
0x0000000000425314: sub byte ptr [rcx + rcx*4 - 0x19], cl; call rax; 
0x000000000041739c: sub byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000048f127: sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x0000000000450944: sub byte ptr [rcx], al; ret; 
0x000000000048358d: sub byte ptr [rcx], dh; ror byte ptr [rax - 0x77], 0xe2; mov eax, 0x10; syscall; 
0x000000000047bcf4: sub byte ptr [rdi + 0xc8b0002], cl; mov cl, byte ptr [rbx - 0x37d67dfc]; ret; 
0x0000000000410f43: sub byte ptr [rdi + rcx - 0x4a], al; ret; 
0x0000000000488460: sub byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x0000000000403227: sub cl, byte ptr [rax - 0x77]; ret; 
0x000000000041c7ef: sub cl, byte ptr [rax]; add al, ch; sub dword ptr [rdi - 2], esp; jmp qword ptr [rsi + 0xf]; 
0x000000000041170b: sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000046f8e5: sub dh, al; add byte ptr [rip - 0x60d17], ch; jmp qword ptr [rsi - 0x70]; 
0x0000000000470175: sub dh, al; add byte ptr [rip - 0xaa517], ch; jmp qword ptr [rsi - 0x70]; 
0x00000000004888d2: sub dh, byte ptr [rdi - 0x49]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000413e90: sub dword ptr [rax], eax; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000420ec3: sub dword ptr [rax], esi; add byte ptr [rax], al; mov qword ptr [rip + 0xa98ba], rax; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x000000000041f9a9: sub dword ptr [rbp + 0x1000a], 0; add byte ptr [rax - 0x77], cl; add eax, 0xaad48; ret; 
0x00000000004831bc: sub dword ptr [rbx + 4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049854b: sub dword ptr [rcx], eax; add byte ptr [rax], al; movzx eax, al; movsxd rax, dword ptr [r11 + rax*4]; add rax, r11; jmp rax; 
0x000000000041c7f3: sub dword ptr [rdi - 2], esp; jmp qword ptr [rsi + 0xf]; 
0x0000000000417396: sub dword ptr [rdi], 1; add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000004179c0: sub dword ptr [rdi], 1; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000417fbd: sub dword ptr [rdi], 1; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000000470dda: sub dword ptr [rdi], 1; ret; 
0x000000000044b095: sub dword ptr [rdi], ecx; adc dword ptr [rcx - 0x10], esi; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000470c37: sub dword ptr [rip + 0x5c2f2], 1; mov eax, r8d; pop rbx; ret; 
0x000000000047098c: sub dword ptr [rip + 0x5c599], 1; pop r12; ret; 
0x000000000046ec03: sub dword ptr [rip + 0x5e31a], 1; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000045f7e0: sub dword ptr [rip + 0x6d739], 1; xor eax, eax; add rsp, 8; ret; 
0x00000000004546fb: sub dword ptr [rip + 0x791ae], 1; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000425cf0: sub dword ptr [rip + 0xa4aa9], 1; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000423bac: sub dword ptr [rip + 0xa6bed], 1; pop rbp; ret; 
0x0000000000424c0d: sub dword ptr [rip + 0xa809c], 1; pop rbx; pop rbp; pop r12; ret; 
0x00000000004242bf: sub dword ptr [rip + 0xa89da], 1; pop rbx; ret; 
0x000000000041f02c: sub dword ptr [rip + 0xadbfd], 1; ret; 
0x000000000041cdc0: sub dword ptr [rip + 0xafe69], 1; ret; 
0x0000000000430826: sub dword ptr [rip - 0xcfffffe], 0xf; outsd dx, dword ptr [rsi]; push rdi; ret; 
0x00000000004137fb: sub dword ptr [rsi + 0x1ce80008], esi; idiv esi; jmp qword ptr [rsi + 0x66]; 
0x000000000040b3ce: sub dword ptr [rsi + 0xf], -0x7b; ret; 
0x000000000042588a: sub eax, 0x10; ret; 
0x000000000041fa0b: sub eax, 0x11; shr rax, 4; lea rdx, qword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x0000000000414711: sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c1f]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414aec: sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2c44]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x0000000000414a53: sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0xb2cdd]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000048e4cc: sub eax, 0x3349646c; add byte ptr [rax + 9], cl; ret 0x840f; 
0x000000000044e5b6: sub eax, 0x48c78944; mov dword ptr [rsp + 8], eax; call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000470c38: sub eax, 0x5c2f2; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000047098d: sub eax, 0x5c599; add dword ptr [rcx + 0x5c], eax; ret; 
0x000000000046ec04: sub eax, 0x5e31a; add dword ptr [rbx + 0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000419d22: sub eax, 0x66ffffff; nop dword ptr cs:[rax + rax]; xor eax, eax; ret; 
0x00000000004546fc: sub eax, 0x791ae; add dword ptr [rbx + 0x31], ebx; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004155cd: sub eax, 0x89000009; ret 0xc083; 
0x0000000000417748: sub eax, 0x940f000b; ret 0x3948; 
0x0000000000424c0e: sub eax, 0xa809c; add dword ptr [rbx + 0x5d], ebx; pop r12; ret; 
0x0000000000470178: sub eax, 0xfff55ae9; jmp qword ptr [rsi - 0x70]; 
0x000000000046f8e8: sub eax, 0xfff9f2e9; jmp qword ptr [rsi - 0x70]; 
0x000000000045ca2c: sub eax, 1; mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x0000000000497669: sub eax, 1; pop rbx; ret; 
0x000000000041e22b: sub eax, 1; ret; 
0x0000000000408416: sub eax, 1; sub rax, rbx; shr rax, 3; lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000048e75a: sub eax, dword ptr [0]; ret; 
0x000000000048da1b: sub eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x00000000004031d3: sub eax, dword ptr [rbx + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004116bb: sub eax, dword ptr [rcx + 0xf]; mov dh, 0x47; or al, 0x83; ret; 
0x000000000041f882: sub eax, dword ptr [rdi + 0x18]; ret; 
0x000000000041ec47: sub eax, dword ptr [rsi + 0x10]; ret; 
0x000000000048f84c: sub eax, eax; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000047421c: sub eax, ebx; mov rsi, rbx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x000000000040841a: sub eax, ebx; shr rax, 3; lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000048f775: sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x00000000004284dc: sub eax, ecx; ret; 
0x000000000048f6d0: sub eax, ecx; shl rsi, cl; mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000041e229: sub eax, ecx; sub eax, 1; ret; 
0x0000000000429d5f: sub eax, ecx; vzeroupper; ret; 
0x00000000004236d6: sub eax, edi; lea ecx, dword ptr [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000443dc9: sub eax, edi; ret; 
0x000000000044d92e: sub eax, edi; shr rax, 2; ret; 
0x000000000041bcd1: sub eax, edx; pop rbp; pop r12; ret; 
0x000000000041ec6f: sub eax, edx; ret; 
0x000000000044da59: sub eax, edx; shr rax, 2; vzeroupper; ret; 
0x0000000000429a62: sub eax, edx; vzeroupper; ret; 
0x000000000048f84b: sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000470ad7: sub ebx, dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x0000000000473cf0: sub ebx, esi; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x000000000046818d: sub ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000044dbc4: sub ecx, dword ptr [rcx + rcx*4 - 0x40]; shr rax, 2; vzeroupper; ret; 
0x0000000000444374: sub ecx, dword ptr [rcx + rcx*4 - 0x40]; vzeroupper; ret; 
0x0000000000478b39: sub ecx, eax; sar rcx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x000000000044eddc: sub edi, dword ptr [rax + 0x48]; syscall; 
0x0000000000424919: sub edi, dword ptr [rcx + 0x3ee80007]; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000004139b0: sub edi, ebp; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x000000000042581e: sub edx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000041ec78: sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000041ec69: sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000478be2: sub edx, dword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000478bf4: sub edx, dword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x000000000041bccc: sub edx, dword ptr [rdi + 8]; pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x0000000000418637: sub edx, esi; call qword ptr [rax + 0x70]; 
0x000000000041aaf8: sub edx, esi; call qword ptr [rbp + 0x70]; 
0x0000000000411ba0: sub edx, esi; call qword ptr [rbx + 0x38]; 
0x0000000000418d1c: sub edx, esi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000041b465: sub edx, esi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000000458211: sub esi, dword ptr [rbx + 0x6e80004]; lodsd eax, dword ptr [rsi]; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000479511: sub esi, dword ptr [rbx - 3]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000495793: sub esp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000048cbac: sub esp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000049d15d: sub esp, 8; add rsp, 8; ret; 
0x0000000000455529: sub esp, 8; call 0x55060; or dword ptr [rip + 0x778a4], 2; add rsp, 8; ret; 
0x0000000000488ccf: sub esp, 8; call qword ptr [rip + 0x42468]; xor eax, eax; add rsp, 8; ret; 
0x0000000000417395: sub qword ptr [rdi], 1; add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000046ec02: sub qword ptr [rip + 0x5e31a], 1; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004139af: sub r15, r13; mov rdx, r15; call qword ptr [rax + 0x38]; 
0x00000000004236d5: sub r8, rdi; lea ecx, dword ptr [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000497a31: sub r8b, byte ptr [r10]; add byte ptr [rdi], cl; mov dh, 0xc9; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000000425889: sub rax, 0x10; ret; 
0x000000000041fa0a: sub rax, 0x11; shr rax, 4; lea rdx, qword ptr [rax + 1]; mov qword ptr [rip + 0xaad33], rdx; ret; 
0x0000000000497668: sub rax, 1; pop rbx; ret; 
0x000000000044a973: sub rax, 1; ret; 
0x0000000000408415: sub rax, 1; sub rax, rbx; shr rax, 3; lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000048e759: sub rax, qword ptr [0]; ret; 
0x000000000041f881: sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000048e758: sub rax, qword ptr fs:[0]; ret; 
0x000000000047421b: sub rax, rbx; mov rsi, rbx; mov rdi, r12; sar rax, 2; mov rdx, rax; call qword ptr [rcx + 0x38]; 
0x0000000000408419: sub rax, rbx; shr rax, 3; lea r12, qword ptr [rbx + rax*8 + 8]; nop dword ptr [rax]; call qword ptr [rbx]; 
0x000000000041e228: sub rax, rcx; sub eax, 1; ret; 
0x0000000000443dc8: sub rax, rdi; ret; 
0x000000000044d92d: sub rax, rdi; shr rax, 2; ret; 
0x000000000041bcd0: sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000044aa53: sub rax, rdx; ret; 
0x000000000044da58: sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044404f: sub rax, rdx; vzeroupper; ret; 
0x0000000000473cef: sub rbx, r14; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x0000000000478b38: sub rcx, rax; sar rcx, 2; lea eax, dword ptr [rcx - 1]; ret; 
0x000000000042581d: sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000478be1: sub rdx, qword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000478bf3: sub rdx, qword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x000000000041bccb: sub rdx, qword ptr [rdi + 8]; pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x0000000000418636: sub rdx, rsi; call qword ptr [rax + 0x70]; 
0x000000000041aaf7: sub rdx, rsi; call qword ptr [rbp + 0x70]; 
0x0000000000411b9f: sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000418d1b: sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x000000000041b464: sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000000495792: sub rsp, -0x80; pop rbx; pop rbp; pop r12; ret; 
0x000000000048cbab: sub rsp, 0x1008; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000000049d15c: sub rsp, 8; add rsp, 8; ret; 
0x0000000000455528: sub rsp, 8; call 0x55060; or dword ptr [rip + 0x778a4], 2; add rsp, 8; ret; 
0x0000000000488cce: sub rsp, 8; call qword ptr [rip + 0x42468]; xor eax, eax; add rsp, 8; ret; 
0x0000000000401223: syscall; 
0x0000000000423c52: syscall; pop rbp; ret; 
0x000000000042431e: syscall; pop rbx; ret; 
0x000000000041cdf4: syscall; ret; 
0x0000000000419c57: test ah, bl; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000041df71: test al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000483070: test al, 0; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000041b03f: test al, 0; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000499f73: test al, 0; add byte ptr [rax], al; ret; 
0x0000000000496ca2: test al, 0x4c; add eax, ebp; jmp rax; 
0x000000000044f849: test al, 0x4c; mov dword ptr [rbp - 0x50], ecx; mov r15d, r14d; mov rax, qword ptr [rbp - 0x60]; call rax; 
0x0000000000492e65: test al, 0x89; mov r8b, 0xe8; ret 0xf6e1; 
0x0000000000477bdd: test al, 0x9a; clc; jmp qword ptr [rsi + 0x2e]; 
0x000000000041ff25: test al, 0xa; add byte ptr [rax + 0x39], cl; sal byte ptr [rbp + 1], 1; ret; 
0x000000000044e51e: test al, 2; add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x28; ret; 
0x000000000046ee4f: test al, 4; add byte ptr [rbx - 0x76b3be06], al; ret; 
0x0000000000403fb0: test al, 5; add byte ptr [rax - 0x76b7bcc8], al; ret; 
0x0000000000404b33: test al, al; add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000417c33: test bh, al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000045fed9: test bh, bh; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000049c224: test bh, bh; jns 0x9c22b; mov r8, qword ptr [r8]; mov qword ptr [rbx], r8; pop rbx; ret; 
0x0000000000463190: test bh, bl; adc al, 0; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x00000000004659f0: test bh, ch; adc eax, dword ptr [rax]; add byte ptr [rax - 0x80], al; jmp qword ptr [rbp + 0xf]; 
0x0000000000472803: test bh, ch; add eax, dword ptr [rax]; add byte ptr [rcx - 0x7d], al; out dx, eax; add dword ptr [rax - 0x93743], eax; jmp qword ptr [rax]; 
0x000000000048b94e: test bl, bl; cmove r8, rax; mov rax, r8; pop rbx; ret; 
0x00000000004120c0: test bl, cl; or dword ptr [rax], eax; add bh, al; test esp, edx; idiv bh; call qword ptr [rax]; 
0x000000000045a980: test bl, dl; add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x000000000045095d: test byte ptr [rax + 0x3b], 0x57; sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fa66: test byte ptr [rax + 0xf], 0x44; ret 0x13eb; 
0x00000000004950ff: test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x23840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000046c16e: test byte ptr [rax + rax*2], ah; add al, 0; add cl, ch; mov ebp, 0xe8fffffd; ret 0xfe46; 
0x0000000000485305: test byte ptr [rax + rax*8], ah; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000473cb4: test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000413e95: test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000046cce7: test byte ptr [rax + rcx], ah; add byte ptr [rax - 0x13f43], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000484a0c: test byte ptr [rax + rdi*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x000000000049862f: test byte ptr [rax + rsi*4], ah; add byte ptr [rax], al; add byte ptr [rcx - 0x80], al; call qword ptr [rax + 0xf]; 
0x000000000041ba85: test byte ptr [rax - 0x77], 0xdf; call qword ptr [rbp + 0x70]; 
0x00000000004176da: test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x10]; 
0x000000000041b99b: test byte ptr [rax - 0x77], 0xef; call qword ptr [rbx + 0x40]; 
0x0000000000411789: test byte ptr [rax - 0x7c000005], ch; ret; 
0x000000000044d9a0: test byte ptr [rax - 0x7d], 0xec; or al, ch; out 0x36, al; sti; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000046fcb6: test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000482c2a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add rax, 3; ret; 
0x000000000049ca8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000042e5ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, qword ptr [rax + rdi + 0x10]; ret; 
0x0000000000448d4a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xa]; ret; 
0x0000000000448d5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xb]; ret; 
0x0000000000448d6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xc]; ret; 
0x0000000000448d7a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xd]; ret; 
0x0000000000448d8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 0xe]; ret; 
0x0000000000448cda: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 2]; ret; 
0x0000000000448cea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 3]; ret; 
0x0000000000448cfa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 4]; ret; 
0x0000000000448d0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 5]; ret; 
0x0000000000448d1a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 6]; ret; 
0x0000000000448d2a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 8]; ret; 
0x0000000000448d3a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, qword ptr [rdi + 9]; ret; 
0x000000000044836a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, qword ptr [rdi]; ret; 
0x0000000000447d3a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x000000000041a0fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000045094a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x0000000000499efa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x98], rsi; ret; 
0x0000000000482c5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 2; ret; 
0x0000000000482c6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 3; ret; 
0x0000000000482c7a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 4; ret; 
0x0000000000482c8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 5; ret; 
0x0000000000482c9a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 6; ret; 
0x0000000000482caa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 7; ret; 
0x0000000000499e6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x90]; ret; 
0x0000000000499f0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x0000000000499f6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x0000000000499f1a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000049aa4a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsi]; add rsp, 8; ret; 
0x00000000004443fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000042530a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x28]; mov rdi, r12; call rax; 
0x000000000045ea06: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rax, 0xf; syscall; 
0x000000000044a997: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000448cc9: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, qword ptr [rdi + 1]; ret; 
0x0000000000448cb9: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, qword ptr [rdi]; ret; 
0x0000000000482c49: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x0000000000499f59: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000040919a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000049aa3a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; add rsp, 8; ret; 
0x00000000004078ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004025ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor edi, edi; mov eax, edx; syscall; 
0x0000000000448afa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor rax, rax; ret; 
0x000000000044aafd: test byte ptr [rbp + 0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000000417047: test byte ptr [rbp + 0x48fffffc], dl; lea ecx, dword ptr [rbx + 0x40]; lea rdx, qword ptr [rbx + 0x34]; mov esi, 1; mov rdi, rbx; call rax; 
0x000000000045e9e6: test byte ptr [rbp - 0x6bf0bf40], 0xc6; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000463bd6: test byte ptr [rbx + rsi*8 - 1], dh; jmp qword ptr [rsi + 0xf]; 
0x00000000004328f7: test byte ptr [rbx - 0x76b303aa], 0x5f; out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000412b8e: test byte ptr [rbx - 0x7c000019], ah; ret; 
0x000000000049510a: test byte ptr [rbx], ah; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000044a122: test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000408889: test byte ptr [rbx], cl; add al, byte ptr [rax]; add byte ptr [rbx + rcx*4 + 0x15], cl; ret; 
0x0000000000470472: test byte ptr [rbx], dh; add eax, dword ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x000000000044a119: test byte ptr [rcx + rax - 0x67d0000], al; adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000481d1f: test byte ptr [rcx + rax], ch; add byte ptr [rax], al; bsr rsi, rsi; lea rax, qword ptr [rdi + rsi]; ret; 
0x0000000000473ceb: test byte ptr [rcx + rcx*4 - 0x19], 0x4c; sub ebx, esi; mov r13, rbx; sar r13, 2; mov rdx, r13; call qword ptr [rax + 0x38]; 
0x0000000000419c83: test byte ptr [rcx - 0x76b778ec], cl; ret 0x8348; 
0x0000000000409954: test byte ptr [rcx], cl; sbb al, byte ptr [rax]; add byte ptr [rbx - 0x60f43], al; call qword ptr [rax]; 
0x000000000045ed83: test byte ptr [rdi], 0x84; ret; 
0x0000000000451cad: test byte ptr [rdi], 0x84; xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000460f49: test byte ptr [rdi], 0x85; ret; 
0x000000000042585a: test byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x000000000040de61: test byte ptr [rdi], 0x9f; ret 0xd629; 
0x0000000000495f6c: test byte ptr [rdi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x894d; 
0x000000000044d811: test byte ptr [rdx + 0x48000000], bl; bsf eax, edx; shr rax, 2; ret; 
0x0000000000493481: test byte ptr [rdx + rdx*8 + 0x3002bf], 0; mov eax, 0x9e; sete sil; add esi, esi; syscall; 
0x00000000004567f6: test byte ptr [rdx], ch; add eax, dword ptr [rax]; add byte ptr [rbp - 0x7a7bf00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x00000000004900c4: test byte ptr [rip + 0x3cc5f], 0x10; lea rdx, qword ptr [rip + 0x11e]; lea rax, qword ptr [rip + 0x67]; cmovne rax, rdx; ret; 
0x000000000044ce6b: test byte ptr [rip + 0x7feb8], 8; lea rax, qword ptr [rip + 0xb17]; lea rdx, qword ptr [rip + 0x8f0]; cmovne rax, rdx; ret; 
0x0000000000426d24: test byte ptr [rip + 0xa600a], 2; lea rdx, qword ptr [rip + 0x2491e]; lea rax, qword ptr [rip + 0x24967]; cmove rax, rdx; ret; 
0x0000000000426cd2: test byte ptr [rip + 0xa605c], 2; lea rdx, qword ptr [rip + 0x24530]; lea rax, qword ptr [rip + 0x24579]; cmove rax, rdx; ret; 
0x0000000000426bd4: test byte ptr [rip + 0xa61a9], 0x10; lea rdx, qword ptr [rip - 0x2f2]; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x0000000000426194: test byte ptr [rip + 0xa6b8f], 0x10; lea rdx, qword ptr [rip + 0x248be]; lea rax, qword ptr [rip + 0x24807]; cmovne rax, rdx; ret; 
0x00000000004260ab: test byte ptr [rip + 0xa6cd2], 0x40; lea rax, qword ptr [rip + 0x1d317]; lea rdx, qword ptr [rip + 0x229c0]; cmovne rax, rdx; ret; 
0x000000000047262e: test byte ptr [rip - 0x7c00000f], bl; ret; 
0x0000000000443e6d: test byte ptr [rsi + 0x48000000], bl; bsf eax, edx; ret; 
0x000000000042876a: test byte ptr [rsi + 0x48fffffe], dl; bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000458338: test byte ptr [rsi], bl; add al, byte ptr [rax]; add bh, dh; ret 0; 
0x000000000041c536: test ch, ah; add byte ptr [rax], al; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x0000000000494fcd: test cl, bh; add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; or byte ptr [rax + 3], cl; add byte ptr [r13 + 0x31], r8b; jmp qword ptr [rsi - 0x7d]; 
0x0000000000450aa6: test cl, dl; add byte ptr [rax], al; add byte ptr [rax], bh; ret 0xe174; 
0x000000000048b372: test dh, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x0000000000481c85: test dh, al; add dword ptr [rax], eax; add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000000412247: test dh, bl; add eax, 0xeb830000; add dword ptr [rax - 0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000000455639: test dh, dh; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000045fed8: test dil, dil; cmovne eax, ecx; add rsp, 8; ret; 
0x000000000049c223: test dil, dil; jns 0x9c22b; mov r8, qword ptr [r8]; mov qword ptr [rbx], r8; pop rbx; ret; 
0x000000000045febb: test dl, dl; cmovne eax, ecx; add rsp, 8; ret; 
0x0000000000493482: test dl, dl; mov edi, 0x3002; mov eax, 0x9e; sete sil; add esi, esi; syscall; 
0x000000000045eca9: test dword ptr [rax + 0x48000000], ebx; add esp, 0x98; ret; 
0x000000000044433b: test dword ptr [rax + 0x4c000000], esp; mov eax, eax; vzeroupper; ret; 
0x000000000042dddf: test dword ptr [rax + 0xf], 0x2949d2bc; sal dword ptr [rsi + 0xb], cl; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000040ba18: test dword ptr [rax + 0xfffff9], eax; add byte ptr [rax], al; add cl, ch; rcr cl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000042ea17: test dword ptr [rax + rax - 0x3fcf0000], edx; vzeroupper; ret; 
0x000000000042ecd8: test dword ptr [rax + rax - 0x8b70000], ecx; ret 2; 
0x000000000045361a: test dword ptr [rax + rax], 0xfaf8fee8; jmp qword ptr [rsi + 0x2e]; 
0x0000000000453613: test dword ptr [rax + rax], 0xfb3d8d48; test dword ptr [rax + rax], 0xfaf8fee8; jmp qword ptr [rsi + 0x2e]; 
0x0000000000423ba7: test dword ptr [rax + rax], edi; add byte ptr [rbx + 0xa6bed2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000455146: test dword ptr [rax - 0x75], 0xdb70f12; ret; 
0x000000000045ee08: test dword ptr [rax - 0x77], 0xe8d148ea; imul rax, rdi; lea r12, qword ptr [rcx + rax]; mov rdi, r12; call rbx; 
0x000000000044e2d9: test dword ptr [rax - 0x77], 0xf88341d6; add dword ptr [rdi + 0x2d], esi; mov eax, 4; syscall; 
0x0000000000483469: test dword ptr [rax - 0x77], 0xf88341d6; add dword ptr [rdi + 0x2d], esi; mov eax, 6; syscall; 
0x000000000044e338: test dword ptr [rax - 0x77], 0xf88341d6; add dword ptr [rdi + 0x2e], esi; mov eax, 5; syscall; 
0x0000000000424ae5: test dword ptr [rax - 0x7d], 0x1e918c4; mov dh, 0xff; call qword ptr [rax + 0x18c48348]; ret; 
0x000000000047116a: test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x00000000004120e7: test dword ptr [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000000411fa8: test dword ptr [rax], ecx; idiv edi; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000047169f: test dword ptr [rax], edi; idiv edi; dec dword ptr [rax - 0x39]; ret 0xbb60; 
0x0000000000412385: test dword ptr [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x000000000042058c: test dword ptr [rbp + 0x31], eax; sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000044db8e: test dword ptr [rbp + 0x4c000000], ebx; mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x000000000042e598: test dword ptr [rbx + 0x31000000], esp; rol bl, 0x83; ret 0x6620; 
0x0000000000430327: test dword ptr [rbx + 7], edx; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000430776: test dword ptr [rbx + rax], eax; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042f3f8: test dword ptr [rbx - 0x3a000003], esp; std; xlatb; ret 0xe883; 
0x0000000000432733: test dword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000000438053: test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000000406291: test dword ptr [rbx], edx; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 + 0xd], cl; ret; 
0x0000000000477484: test dword ptr [rcx + 0x48000000], edx; add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x00000000004302fd: test dword ptr [rcx + 7], esi; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043020d: test dword ptr [rcx + 8], esp; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000430139: test dword ptr [rcx + 9], eax; add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043011d: test dword ptr [rcx + 9], edx; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000411af1: test dword ptr [rcx + rcx*4 - 0x63], 0xfffff6d0; mov dword ptr [rbp - 0x940], r9d; call rax; 
0x000000000040d793: test dword ptr [rcx + rdi*8 + 0x79e9ffff], esi; ret; 
0x000000000044d2cd: test dword ptr [rdi + 0x48000000], ebx; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000426e95: test dword ptr [rdi + 2], 0x440f4800; ret 0x66c3; 
0x000000000046d669: test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x00000000004653b0: test dword ptr [rdi], 0xfffdbf85; dec dword ptr [rbx + rcx*4 + 0x7d]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000048bcac: test dword ptr [rdi], esi; add al, byte ptr [rax]; add byte ptr [rbx - 0x28f7b], cl; jmp qword ptr [rsi + 0xf]; 
0x000000000048ea98: test dword ptr [rdx + 0x48000000], ecx; add esp, 0x48; ret; 
0x00000000004988c5: test dword ptr [rdx + 1], esi; add byte ptr [rax], al; add dword ptr [rbp + 1], ecx; ror dword ptr [rdi], -0x4a; add dword ptr [r8 - 0x7d], ecx; ret; 
0x000000000043033b: test dword ptr [rdx + 7], ecx; add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x0000000000430239: test dword ptr [rdx + 8], esp; add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000430042: test dword ptr [rdx + rcx], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000406ce8: test dword ptr [rdx], eax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004221a4: test dword ptr [rdx], ecx; add byte ptr [rcx], bh; ret 0xa7e; 
0x0000000000481f83: test dword ptr [rip - 0x76ffffff], edi; ret 0x8948; 
0x000000000044e406: test dword ptr [rsi + 0x48000000], esp; add esp, 0x68; pop rbp; pop r12; ret; 
0x000000000044a382: test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000416f3b: test dword ptr [rsi + rdi*8 - 1], edx; dec dword ptr [rcx - 0x7d]; ret; 
0x0000000000430548: test dword ptr [rsi], esp; add eax, 0xc0310000; ret; 
0x0000000000426bd6: test eax, 0x10000a61; lea rdx, qword ptr [rip - 0x2f2]; lea rax, qword ptr [rip + 0x23927]; cmove rax, rdx; ret; 
0x0000000000425cf2: test eax, 0x1000a4a; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041fdd3: test eax, 0x141000a; adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x0000000000426fb3: test eax, 0x48000242; cmove eax, edx; ret; 
0x00000000004361f6: test eax, 0x7f0f41f3; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x00000000004524d7: test eax, 0x890007a8; ret 0xe083; 
0x000000000041fdf7: test eax, 0x8941000a; imul esp, dword ptr [rbx*2 + 0x10438941], 0x41; mov dword ptr [rbx + 0x14], 0; ret; 
0x0000000000406705: test eax, 0x8948ffff; ret 0xf748; 
0x0000000000442562: test eax, 0xe3c4c9eb; jns 0x425cc; rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x0000000000442d42: test eax, 0xe3c4c9eb; jns 0x42dac; rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044a988: test eax, 0xfffd3be9; jmp qword ptr [rsi - 0x70]; 
0x0000000000451708: test eax, eax; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x000000000045045f: test eax, eax; cmove eax, edx; ret; 
0x0000000000426dc0: test eax, eax; lea rdx, qword ptr [rip + 0x24e57]; lea rax, qword ptr [rip + 0x24de0]; cmovne rax, rdx; ret; 
0x0000000000426da1: test eax, eax; lea rdx, qword ptr [rip + 0x24f86]; lea rax, qword ptr [rip + 0x24fcf]; cmove rax, rdx; ret; 
0x000000000041fa69: test eax, eax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x000000000045e9e7: test eax, eax; sete sil; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000493aa7: test eax, eax; setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000042eb2c: test eax, eax; tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000041b406: test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000424783: test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; call qword ptr [rax]; 
0x0000000000471584: test eax, ecx; idiv bh; jmp qword ptr [rax]; 
0x000000000049813e: test eax, edx; add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x000000000040bf1b: test eax, esi; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x7d]; ret; 
0x000000000047157e: test eax, esi; idiv bh; inc esi; test eax, ecx; idiv bh; jmp qword ptr [rax]; 
0x00000000004301ce: test ebp, ecx; or byte ptr [rax], al; add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000042e500: test ebx, ebx; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x0000000000448b32: test ecx, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x000000000046c2ba: test ecx, ebx; sbb al, 0; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000408b9a: test edi, edi; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000448b25: test esi, edx; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000448b3f: test esp, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7540; 
0x00000000004120c6: test esp, edx; idiv bh; call qword ptr [rax]; 
0x000000000041306b: test esp, edx; idiv bh; call qword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000432732: test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x000000000041fa68: test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xad23d], rax; ret; 
0x0000000000455638: test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000444110: tzcnt eax, eax; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eaf0: tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000444130: tzcnt eax, eax; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb00: tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000044417c: tzcnt eax, eax; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb2e: tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000443ab3: tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000000444045: tzcnt eax, eax; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000042eb95: tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000044dc70: tzcnt eax, eax; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x0000000000444100: tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000042eae0: tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000042f430: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000042f450: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000042f416: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000042f1a0: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429bd3: tzcnt ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c38: tzcnt ecx, esi; movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000429bfc: tzcnt edi, ecx; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429c1c: tzcnt edi, ecx; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a70: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a90: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000429ab0: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000429a56: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000429ca2: tzcnt rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000042f49b: ud2; nop dword ptr [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000490912: vminsd xmm9, xmm4, qword ptr [rcx + rcx*4 - 0x18]; pop r12; pop r13; ret; 
0x000000000043b7d1: vmovdqu xmm0, xmmword ptr [rsi]; vmovdqu xmm1, xmmword ptr [rcx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044b2d2: vmovdqu xmm0, xmmword ptr [rsi]; vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000043b7d5: vmovdqu xmm1, xmmword ptr [rcx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044b2d6: vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000444800: vmovdqu xmm2, xmmword ptr [rsi]; vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000448a44: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x0000000000444804: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000043b7de: vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044be5f: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0; vmovdqu xmmword ptr [rdi], xmm0; vzeroupper; ret; 
0x000000000044b2e0: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000448a4e: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x000000000044480e: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000043b7da: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044b2dc: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044ac69: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000044be65: vmovdqu xmmword ptr [rdi], xmm0; vzeroupper; ret; 
0x0000000000448a4a: vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x000000000044480a: vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000044ac6d: vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000043b7bd: vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000044b22b: vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000043b7c1: vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000044b22f: vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x0000000000444820: vmovdqu ymm2, ymmword ptr [rsi]; vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000043b79d: vmovdqu ymm3, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x0000000000448a64: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x0000000000444824: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000044bd4f: vmovdqu ymmword ptr [edi + edx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000044b46c: vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000044b513: vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000043b7ca: vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000043b7b1: vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000043b7ab: vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000044b45d: vmovdqu ymmword ptr [rcx - 0x20], ymm6; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000044b462: vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000044b467: vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000044bdc4: vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000043b7a6: vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000044b3ac: vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000044b504: vmovdqu ymmword ptr [rdi + 0x20], ymm5; vmovdqu ymmword ptr [rdi + 0x40], ymm6; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000044b509: vmovdqu ymmword ptr [rdi + 0x40], ymm6; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000044b50e: vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000448a6e: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x000000000044482e: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000044bdc9: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000044bd50: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000044b239: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000044b3b1: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000044b377: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm4; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm5; vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000044bdcf: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000044b3b7: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000044b37d: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm5; vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000044b383: vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000044b389: vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000043b7c6: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000044bdc0: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000043b7a2: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000044b3a8: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000044b235: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000044bd56: vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x0000000000448a6a: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, qword ptr [rdi + rdx]; vzeroupper; ret; 
0x000000000044482a: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000044ac5f: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000044ac63: vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000044b66e: vmovdqu64 zmm0, zmmword ptr [rsi]; vmovdqu64 zmm1, zmmword ptr [rsi + rdx - 0x40]; vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000044b674: vmovdqu64 zmm1, zmmword ptr [rsi + rdx - 0x40]; vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000044b926: vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000044b9ec: vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000044b91f: vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000044bf63: vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000044b83e: vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000044b9d7: vmovdqu64 zmmword ptr [rdi + 0x40], zmm5; vmovdqu64 zmmword ptr [rdi + 0x80], zmm6; vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000044b9de: vmovdqu64 zmmword ptr [rdi + 0x80], zmm6; vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000044b9e5: vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000044b80f: vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000044bf6a: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000044bed9: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000044b682: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000044b845: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000044b7f7: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm4; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm5; vmovdqu64 zmmword ptr [rdi + rdx - 0xc0], zmm6; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000044bf72: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000044b84d: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000044b7ff: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm5; vmovdqu64 zmmword ptr [rdi + rdx - 0xc0], zmm6; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000044b807: vmovdqu64 zmmword ptr [rdi + rdx - 0xc0], zmm6; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000044bf5d: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000044b838: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000044b67c: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000044bee1: vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000044ac78: vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000044ac7c: vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000043b767: vmovups zmm3, zmmword ptr [rcx - 0x40]; vmovups zmmword ptr [rdi], zmm0; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043bad2: vmovups zmmword ptr [r9 + 0x100], zmm12; vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bad9: vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bae0: vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bae7: vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043bacb: vmovups zmmword ptr [r9 + 0xc0], zmm11; vmovups zmmword ptr [r9 + 0x100], zmm12; vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x000000000043b96b: vmovups zmmword ptr [r9 - 0x100], zmm12; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b731: vmovups zmmword ptr [r9 - 0x100], zmm4; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b980: vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b782: vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043b746: vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b979: vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b77b: vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043b73f: vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b972: vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000043b738: vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043b774: vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044ac31: vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac02: vmovups zmmword ptr [rdi + 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x100], zmm2; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043b72a: vmovups zmmword ptr [rdi + 0xc0], zmm3; vmovups zmmword ptr [r9 - 0x100], zmm4; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000043bc34: vmovups zmmword ptr [rdi - 0x140], zmm12; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc3b: vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc42: vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043bc49: vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043b76e: vmovups zmmword ptr [rdi], zmm0; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044ac2b: vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac4c: vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ae07: vmovups zmmword ptr [rsi + 0x100], zmm2; vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae0e: vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae15: vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ae1c: vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ad71: vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044ad78: vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044ad7f: vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044ae00: vmovups zmmword ptr [rsi + 0xc0], zmm2; vmovups zmmword ptr [rsi + 0x100], zmm2; vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000044ac09: vmovups zmmword ptr [rsi - 0x100], zmm2; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac1e: vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac17: vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ac10: vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044ad6b: vmovups zmmword ptr [rsi], zmm2; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000429a64: vzeroupper; ret; 
0x000000000042ead0: vzeroupper; xor eax, eax; ret; 
0x000000000042e3b1: wait; add al, byte ptr [rax]; add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x0000000000426fd5: wait; add byte ptr [rax], al; lea rdx, qword ptr [rip + 0xf091]; cmovne rax, rdx; ret; 
0x000000000045939f: wait; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000497a2d: wait; lea rdi, qword ptr [rip + 0x22a47]; movzx ecx, cl; movsxd rcx, dword ptr [rdi + rcx*4]; add rcx, rdi; jmp rcx; 
0x000000000042d413: xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004410ef: xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d503: xchg ah, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042d323: xchg ah, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041ba7b: xchg al, dh; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x0000000000442d4c: xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044256c: xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044295c: xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044217c: xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481b2d: xchg bh, cl; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000480631: xchg bl, cl; adc eax, 0x83480000; ret 0xe910; 
0x0000000000481831: xchg bl, cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000480f31: xchg bl, cl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000481231: xchg bl, cl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000480929: xchg bl, dl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042dd6b: xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x0000000000441c4f: xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044142f: xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x0000000000440c0f: xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000042d8c3: xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x00000000004976e6: xchg byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x10; mov eax, 2; pop rbx; ret; 
0x000000000044231b: xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000411daa: xchg byte ptr [rbp + 0x4c000013], bh; mov edx, ebp; mov rsi, r12; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044176f: xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d053: xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x0000000000440f4f: xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000045ba10: xchg byte ptr [rbp + rdi*8 - 0x7cb70001], ch; ret; 
0x000000000044072f: xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000042e3b0: xchg byte ptr [rbx + 0x48000002], bl; add eax, edi; add rax, rcx; ret; 
0x000000000044190f: xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000042daa3: xchg byte ptr [rbx + rax], cl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042d233: xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x000000000042dc83: xchg byte ptr [rcx + rax], ch; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004129d1: xchg byte ptr [rcx + rcx], ah; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000041201b: xchg byte ptr [rcx + rdx], ah; add byte ptr [rax - 0x77], cl; fimul dword ptr [rcx + rcx*4 - 0x1a]; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x00000000004176d4: xchg byte ptr [rdi + 1], dl; add byte ptr [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x0000000000426da6: xchg byte ptr [rdi + 2], cl; add byte ptr [rax - 0x73], cl; add eax, 0x24fcf; cmove rax, rdx; ret; 
0x000000000044280c: xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044202c: xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000412664: xchg byte ptr [rdi], ch; or dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r9; mov rdi, r14; call qword ptr [rcx + 0x38]; 
0x000000000044313c: xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042db93: xchg byte ptr [rdx + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000440a6f: xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d4d5: xchg byte ptr [rdx], bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d5c5: xchg byte ptr [rdx], ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d3e5: xchg byte ptr [rdx], cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000480bd6: xchg byte ptr [rsi], ah; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440ba5: xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004418a5: xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000481ad6: xchg byte ptr [rsi], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004811d6: xchg byte ptr [rsi], ah; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000480ed6: xchg byte ptr [rsi], ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000458324: xchg byte ptr [rsi], al; add al, byte ptr [rax]; add byte ptr [rbp - 0x177f02e], al; add dword ptr [rax], eax; add bh, dh; ret 0xf800; 
0x00000000004413c5: xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044270d: xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004808ce: xchg byte ptr [rsi], ch; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044303d: xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042d143: xchg byte ptr [rsp + rcx - 0x7cb80000], ch; ret 0xeb10; 
0x000000000047f94f: xchg ch, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000047f76f: xchg ch, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000480147: xchg ch, dh; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000047f067: xchg ch, dl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000047ff67: xchg ch, dl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000441be5: xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000440ee5: xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x0000000000440a05: xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000441705: xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x0000000000412352: xchg dh, al; or al, 0; add byte ptr [rcx + rcx*4 - 0x1e], cl; mov rsi, r9; mov rdi, r14; call qword ptr [rbx + 0x38]; 
0x000000000044285d: xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044207d: xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000045a83b: xchg dl, bh; jmp qword ptr [rsi - 0x70]; 
0x000000000042d2f5: xchg dl, bh; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d115: xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d205: xchg dl, ch; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042d025: xchg dl, cl; or eax, 0x83480000; ret 0x4910; 
0x0000000000498e43: xchg dword ptr [rax + 0xffffffe], edi; mov dh, 0xca; lea rdx, qword ptr [rip + 0x21a82]; movsxd rcx, dword ptr [rdx + rcx*4]; add rdx, rcx; jmp rdx; 
0x000000000047414b: xchg dword ptr [rax - 0x76ffffe7], eax; ret 0xc083; 
0x000000000047427b: xchg dword ptr [rax - 0x76ffffe7], esp; ret 0xc083; 
0x0000000000414e2b: xchg dword ptr [rax - 0x76fffff7], ecx; ret 0xc083; 
0x0000000000419c86: xchg dword ptr [rax - 0x77], ecx; ret 0x8348; 
0x000000000044bbd7: xchg dword ptr [rax - 0xd000000], eax; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004893aa: xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000414eac: xchg dword ptr [rbp - 0x76fffff3], edi; ret 0xc083; 
0x00000000004995b2: xchg dword ptr [rcx + rax - 8], ecx; jmp rax; 
0x000000000040e14f: xchg dword ptr [rcx - 0x76ffffdd], esi; ret 0xc083; 
0x00000000004157dc: xchg dword ptr [rdi - 0x76fffff7], esi; ret 0xc083; 
0x0000000000475cbd: xchg dword ptr [rdx - 0x76fffff9], ebx; ret 0xc083; 
0x0000000000414016: xchg dword ptr [rip - 0x76ffffe5], eax; ret 0xc083; 
0x0000000000414e73: xchg dword ptr [rip - 0x76fffff2], esi; ret 0xc083; 
0x00000000004155cc: xchg dword ptr [rip - 0x76fffff7], ebp; ret 0xc083; 
0x0000000000486488: xchg dword ptr [rip - 0x76fffffd], ebx; ret 0xe8c0; 
0x000000000047547d: xchg dword ptr [rsi - 0x76fffff8], edi; ret 0xc083; 
0x0000000000499ee2: xchg eax, eax; add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; call 0x4810282d; mov eax, dword ptr [rdi + 0x98]; ret; 
0x000000000047eca8: xchg eax, ebp; adc eax, 0x83480000; ret 0xe910; 
0x0000000000422bd7: xchg eax, ebp; add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret 0x820f; 
0x00000000004516fc: xchg eax, ebp; call 0xfffffffff6051705; ret 0x7402; 
0x0000000000412fdb: xchg eax, ebp; clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x000000000048a817: xchg eax, ebp; ret 0x2148; 
0x0000000000497449: xchg eax, ebp; ret 0x3145; 
0x0000000000477304: xchg eax, ebp; ret 0x5389; 
0x000000000042338b: xchg eax, ebp; ret 0x8348; 
0x00000000004607a3: xchg eax, ebp; ret 0x8941; 
0x000000000044e77d: xchg eax, ebp; ret 0x8948; 
0x0000000000451b86: xchg eax, ebp; ret 0x8d48; 
0x0000000000469377: xchg eax, ebp; ret 0x941; 
0x00000000004230fd: xchg eax, ebp; ret 0xb60f; 
0x00000000004529f7: xchg eax, ebp; ret 0xfffd; 
0x00000000004029a5: xchg eax, ebp; ret; 
0x0000000000409858: xchg eax, ebp; rol byte ptr [rcx - 0x7d], 0xfe; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000490a22: xchg eax, ebp; rol byte ptr [rdx], 0; add byte ptr [rcx + 0x148b48d8], cl; ret 0xb60f; 
0x0000000000493aaa: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000041c1de: xchg eax, ebp; ror byte ptr [rdi], 0xb6; sal bh, 0xd8; ret; 
0x0000000000418cf0: xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000459be4: xchg eax, ebx; cli; inc dword ptr [rcx - 0x77]; ret 0x2be9; 
0x000000000047e289: xchg eax, ebx; imul eax, dword ptr [rdx], 0x8a0c8b00; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000041864b: xchg eax, ebx; nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x0000000000478e26: xchg eax, ecx; add byte ptr [rax], al; lea rax, qword ptr [rip + 0x8e00]; cmove rax, rdx; ret; 
0x00000000004263eb: xchg eax, ecx; imul ecx, dword ptr [rdx], 0xd0394800; lea rdx, qword ptr [rip + 0x1dd97]; lea rax, qword ptr [rip + 0x1d9d0]; cmove rax, rdx; ret; 
0x0000000000426fdb: xchg eax, ecx; lock add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000441cf1: xchg eax, ecx; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000043bd7a: xchg eax, ecx; sar ch, 0xff; jmp qword ptr [rdx - 0xf]; 
0x000000000044041f: xchg eax, ecx; sub eax, edx; ret; 
0x0000000000451cb0: xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045b105: xchg eax, edi; add dword ptr [rax], eax; add byte ptr [rsi - 0x3f], ah; ret 0x4808; 
0x00000000004821b5: xchg eax, edi; add eax, 0x8d480000; add eax, 0x260; cmove rax, rdx; ret; 
0x0000000000427005: xchg eax, edi; add r8b, byte ptr [rax]; cmove rax, rdx; ret; 
0x0000000000417bee: xchg eax, edi; fadd dword ptr [rax]; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004263f5: xchg eax, edi; fld qword ptr [rcx]; add byte ptr [rax - 0x73], cl; add eax, 0x1d9d0; cmove rax, rdx; ret; 
0x0000000000417bf5: xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x000000000046eb50: xchg eax, edi; out 0xff, al; jmp qword ptr [rsi + 0x66]; 
0x000000000048fbae: xchg eax, edi; rcr byte ptr [rax + rax], 0x84; sal byte ptr [rbp + 0xa], 0x5b; ret; 
0x0000000000496fce: xchg eax, edi; ret 0xd009; 
0x000000000046162a: xchg eax, edi; ret 0xd284; 
0x0000000000426115: xchg eax, edi; sldt word ptr [rax]; lea rdx, qword ptr [rip + 0x2690]; cmovne rax, rdx; ret; 
0x0000000000420e18: xchg eax, edi; xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000481bbc: xchg eax, edx; lea rcx, qword ptr [rip + 0x2305c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004801fc: xchg eax, edx; lea rcx, qword ptr [rip + 0x24a1c]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000443367: xchg eax, edx; lea rcx, qword ptr [rip + 0x618b1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000441ce7: xchg eax, edx; lea rcx, qword ptr [rip + 0x62f31]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000490be7: xchg eax, edx; ret 0xc148; 
0x000000000044aaf8: xchg eax, edx; ret 0xf40; 
0x000000000048da1a: xchg eax, edx; sub eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000042ddcc: xchg eax, edx; sub eax, edx; ret; 
0x000000000048d3da: xchg eax, edx; xor eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000042f792: xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004379f3: xchg eax, esi; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000042f84f: xchg eax, esi; lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000417b4c: xchg eax, esi; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000042f7ad: xchg eax, esi; nop; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044d577: xchg eax, esi; ret 0xc085; 
0x000000000044d5c7: xchg eax, esi; ret 0xd284; 
0x000000000042f7fe: xchg eax, esi; rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000046986f: xchg eax, esi; stc; jmp qword ptr [rsi + 0x66]; 
0x000000000044c357: xchg eax, esi; xor eax, eax; ret; 
0x00000000004852f8: xchg eax, esp; and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x0000000000493490: xchg eax, esp; mov byte ptr [rcx], 0xf6; syscall; 
0x0000000000461ca8: xchg eax, esp; ret 0x2040; 
0x000000000044e874: xchg eax, esp; ret 0x2044; 
0x000000000040f4d8: xchg eax, esp; ret 0x2fe9; 
0x000000000041774c: xchg eax, esp; ret 0x3948; 
0x0000000000451b65: xchg eax, esp; ret 0x8d48; 
0x000000000048fc95: xchg eax, esp; ret 0x950f; 
0x0000000000486f10: xchg eax, esp; ret 0xb60f; 
0x00000000004025d7: xchg eax, esp; ret 0xd284; 
0x000000000044c39f: xchg eax, esp; ret 0xfa83; 
0x0000000000493197: xchg eax, esp; ret 0xfb83; 
0x0000000000404b91: xchg eax, esp; ret; 
0x0000000000419887: xchg eax, esp; rol byte ptr [rax + rax*8 - 0x7cb7e28c], 0xc4; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x000000000042585c: xchg eax, esp; ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x0000000000491f8b: xchg eax, esp; ror byte ptr [rdi], 0x94; ret 0xb60f; 
0x0000000000422f03: xchg ebx, ecx; add byte ptr [rax], al; add byte ptr [rbp - 0x16e78a40], al; ret 0; 
0x00000000004188c8: xchg esi, edi; dec dword ptr [rax - 0x75]; cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x00000000004978de: xchg esi, esp; add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; or al, 0x8f; add rcx, r15; jmp rcx; 
0x0000000000474306: xchg esp, esi; and eax, 0x83480000; ret; 
0x000000000043802b: xlatb; lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044dd41: xlatb; mov eax, esi; syscall; 
0x000000000044dd50: xlatb; mov eax, r8d; syscall; 
0x000000000046041b: xlatb; or byte ptr [rax - 0x73], cl; add qword ptr [r9 - 0x77], r9; xlatb; or byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000460424: xlatb; or byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000481e07: xlatb; ret 0x94c; 
0x000000000042e3ff: xlatb; ret 0xc085; 
0x0000000000428590: xlatb; ret 0xc148; 
0x000000000042f0a8: xlatb; ret 0xe883; 
0x0000000000443c88: xlatb; ret 0xf66; 
0x000000000042f268: xlatb; ret 0xff2d; 
0x000000000042e414: xlatb; ret; 
0x000000000042e7f1: xlatb; rol byte ptr [rbp + 0x664975c0], 0xf; xlatb; ret 0xc085; 
0x0000000000481fb5: xlatb; rol ch, cl; std; xlatb; ret; 
0x000000000042ea4f: xlatb; rol dword ptr [rbp + 0x311b75c0], -0x40; vzeroupper; ret; 
0x000000000042e5c3: xlatb; rol dword ptr [rbp + 0x315775c0], -0x40; ret; 
0x000000000042eb12: xlatb; rol dword ptr [rbp - 0x3a378a40], -3; xlatb; ret 0xc085; 
0x0000000000443a02: xlatb; rol dword ptr [rbp - 0x3a678a40], -3; xlatb; ret 0xc085; 
0x000000000042e593: xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000444336: xlatb; rol dword ptr [rbp - 0x5f7af040], 0; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000042ea12: xlatb; rol dword ptr [rbp - 0x6b7af040], 0; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x0000000000448aea: xlatb; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000428476: xlatb; sal bh, 1; ret 0x8000; 
0x0000000000428336: xlatb; sal bh, 1; ret 0xc000; 
0x00000000004281f6: xlatb; sal bh, 1; ret 0xe000; 
0x00000000004280b6: xlatb; sal bh, 1; ret 0xf000; 
0x0000000000427f76: xlatb; sal bh, 1; ret 0xf800; 
0x0000000000427e36: xlatb; sal bh, 1; ret 0xfc00; 
0x0000000000427cf6: xlatb; sal bh, 1; ret 0xfe00; 
0x0000000000427bb6: xlatb; sal bh, 1; ret 0xff00; 
0x0000000000427a76: xlatb; sal bh, 1; ret 0xff80; 
0x0000000000427936: xlatb; sal bh, 1; ret 0xffc0; 
0x00000000004277f6: xlatb; sal bh, 1; ret 0xffe0; 
0x00000000004276b6: xlatb; sal bh, 1; ret 0xfff0; 
0x0000000000427576: xlatb; sal bh, 1; ret 0xfff8; 
0x0000000000427436: xlatb; sal bh, 1; ret 0xfffc; 
0x00000000004272f6: xlatb; sal bh, 1; ret 0xfffe; 
0x0000000000448ae6: xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000481db6: xlatb; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000481da5: xlatb; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x0000000000487960: xlatb; stc; dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x000000000049bdb8: xor al, 0x15; add eax, dword ptr [rax]; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x0000000000402b8f: xor al, 0x19; mov qword ptr [rsi + 8], rax; mov eax, 0x9e; mov qword ptr [rsi], rsi; mov qword ptr [rsi + 0x10], rsi; syscall; 
0x000000000041da87: xor al, 0x24; lea r15, qword ptr [r12 + 1]; mov rdi, r14; call qword ptr [rbx + 0x18]; 
0x00000000004795c3: xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x00000000004831bb: xor al, 0x83; imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000410879: xor al, 0x89; ret 0xc083; 
0x000000000048f6b4: xor al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x0000000000417053: xor al, 0xbe; add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rbx; call rax; 
0x00000000004843f0: xor al, ch; ret 0xf7cc; 
0x000000000045cc87: xor bh, bh; jmp qword ptr [rsi + 0xf]; 
0x000000000044ddd6: xor bh, bl; dec dword ptr [rax - 0x77]; ret; 
0x000000000042e51d: xor byte ptr [r14 + 0xf], r12b; xlatb; ret; 
0x000000000042e58f: xor byte ptr [r14 + 0xf], r12b; xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000041d552: xor byte ptr [r8 - 0x77], cl; and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004834d7: xor byte ptr [rax + 0x106], bh; syscall; 
0x0000000000415165: xor byte ptr [rax + 0x29], cl; ret; 
0x000000000049c4f4: xor byte ptr [rax + 0x39], cl; ret; 
0x000000000048e854: xor byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x000000000048e7d2: xor byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000004448df: xor byte ptr [rax - 0x77], cl; add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x000000000041d553: xor byte ptr [rax - 0x77], cl; and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000048f814: xor byte ptr [rax - 0x77], cl; or byte ptr [r8 + 2], r15b; ret; 
0x0000000000461f05: xor byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000049ac44: xor byte ptr [rax - 0x7b], cl; ret 0x840f; 
0x000000000040c03d: xor byte ptr [rax - 0x7d], cl; ret; 
0x0000000000493486: xor byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; sete sil; add esi, esi; syscall; 
0x0000000000402355: xor byte ptr [rax], al; add byte ptr [rax + 0x9e], bh; syscall; 
0x0000000000420ec4: xor byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xa98ba; lea rax, qword ptr [rip + 0x2abb]; mov qword ptr [rip + 0xa98a4], rax; ret; 
0x0000000000408325: xor byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x0000000000408307: xor byte ptr [rax], al; add byte ptr [rax], al; call rdx; 
0x000000000048b623: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x8af50; add rsp, 0xd8; ret; 
0x000000000044c1d4: xor byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000049aa08: xor byte ptr [rbp + 0x25], dh; mov rax, qword ptr [rdx]; add rsp, 8; ret; 
0x000000000044b129: xor byte ptr [rbp + 0xf], al; adc dword ptr [rbx], eax; ret; 
0x0000000000426cdc: xor byte ptr [rbp + 2], al; add byte ptr [rax - 0x73], cl; add eax, 0x24579; cmove rax, rdx; ret; 
0x0000000000412533: xor byte ptr [rbp + rcx*4 + 0x48], cl; inc esi; test dword ptr [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000000426f4f: xor byte ptr [rbp + rdx - 0x80], 0xe6; add cl, byte ptr [rax - 0x73]; add eax, 0x14eb4; lea rdx, qword ptr [rip + 0x170fd]; cmovne rax, rdx; ret; 
0x0000000000426456: xor byte ptr [rbp + rdx - 0x80], 0xe6; add cl, byte ptr [rax - 0x73]; add eax, 0x39fd; lea rdx, qword ptr [rip + 0x5256]; cmovne rax, rdx; ret; 
0x0000000000478eef: xor byte ptr [rbp + rdx - 0x80], 0xe6; add cl, byte ptr [rax - 0x73]; add eax, 0x7f4; lea rdx, qword ptr [rip + 0x2e4d]; cmovne rax, rdx; ret; 
0x0000000000407886: xor byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000041d00c: xor byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000041e1dd: xor byte ptr [rbx - 0x3f8a0008], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004093ca: xor byte ptr [rbx - 0x60f7b], cl; dec dword ptr [rcx - 0x7d]; ret 0x8501; 
0x0000000000409795: xor byte ptr [rbx - 0x62763], cl; push qword ptr [rcx]; rol byte ptr [rbp - 0x3f60f025], 0x29; ret; 
0x0000000000409f92: xor byte ptr [rbx - 0x6276b], cl; dec dword ptr [rcx - 0x7d]; ret 0x4801; 
0x0000000000461625: xor byte ptr [rbx - 0x68f0f606], al; ret 0xd284; 
0x000000000040ec2e: xor byte ptr [rcx + rcx*4 + 0x3c], cl; ret; 
0x0000000000493b66: xor byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000044e513: xor byte ptr [rcx + rcx*4 - 0x39], al; mov qword ptr [rsp + 8], rax; call 0x78d50; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000046be0b: xor byte ptr [rcx - 0x77], cl; ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b48; 
0x000000000040f157: xor byte ptr [rcx - 0x7d], cl; ret 0x4801; 
0x000000000040aafd: xor byte ptr [rcx - 0x7d], cl; ret 0x4c01; 
0x000000000040ef39: xor byte ptr [rcx - 0x7d], cl; ret 0x8b01; 
0x000000000044afda: xor byte ptr [rdi], cl; adc dword ptr [rdi + rdx - 0x10], esp; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000044f169: xor byte ptr [rip + 0x3dafe800], al; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000042f53f: xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042f53a: xor byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000481d6c: xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000042e51e: xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000042e590: xor byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000409175: xor cl, byte ptr [rax - 0x75]; adc byte ptr [r8 - 0x75], cl; push rbx; sbb byte ptr [rax + 1], cl; ret 0x14c; 
0x000000000041a480: xor cl, byte ptr [rax - 0x7d]; ret; 
0x000000000048d284: xor dl, dh; ret; 
0x00000000004264d9: xor dword ptr [rax + 0x39], ecx; ret; 
0x0000000000418176: xor dword ptr [rax + 0x63], ecx; ror dword ptr [rcx + rcx*4 - 0x12], cl; mov rdi, r15; call qword ptr [rbp + 0x38]; 
0x0000000000408401: xor dword ptr [rax - 0x39], ecx; ret; 
0x0000000000425806: xor dword ptr [rax - 0x7b], ecx; div byte ptr [rsp + rcx + 0x48]; lea eax, dword ptr [rax - 0x10]; ret; 
0x0000000000423342: xor dword ptr [rax], ecx; add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000450f23: xor dword ptr [rax], esp; jmp rdx; 
0x000000000049bdb7: xor eax, 0x31534; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x000000000049bd03: xor eax, 0x315e8; mov qword ptr [rsi + 0x28], rax; pop rbx; ret; 
0x0000000000493289: xor eax, 0x3a5f2; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x000000000044b6f7: xor eax, 0x48000002; mov ecx, edx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000474f78: xor eax, 0x52e63; mov rax, qword ptr [rsi + rax*8]; mov esi, 1; jmp rax; 
0x0000000000474053: xor eax, 0x53d88; mov rax, qword ptr [rsi + rax*8]; xor esi, esi; jmp rax; 
0x000000000044c019: xor eax, 0x7701fa80; cmp dh, byte ptr [rdx + 2]; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000414e74: xor eax, 0x8900000e; ret 0xc083; 
0x00000000004833b4: xor eax, 0xa8c48148; add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000041c22d: xor eax, 0xd8a38b4c; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xbb60; 
0x0000000000408322: xor eax, dword ptr [0x30]; call rax; 
0x000000000048d3db: xor eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000049767d: xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x000000000041cb54: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000041d558: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045f7e7: xor eax, eax; add rsp, 8; ret; 
0x0000000000453513: xor eax, eax; call rbx; 
0x000000000041f8cf: xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x00000000004837d5: xor eax, eax; leave; ret; 
0x000000000045e9ed: xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x00000000004785cf: xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000422d00: xor eax, eax; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000004085f9: xor eax, eax; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000004085ee: xor eax, eax; mov rax, r8; ret; 
0x000000000044d680: xor eax, eax; mov rcx, qword ptr [rsp + 0x20]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000044cc17: xor eax, eax; mov rdi, r12; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x000000000048358e: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000000044d4fe: xor eax, eax; mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000497588: xor eax, eax; or rcx, r9; setne al; ret; 
0x0000000000424851: xor eax, eax; pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x0000000000485ce9: xor eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000041c0e1: xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000424561: xor eax, eax; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000406ecf: xor eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000042149b: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000454c57: xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000041af76: xor eax, eax; pop rbx; ret; 
0x0000000000423648: xor eax, eax; pop rdx; pop rbp; pop r12; ret; 
0x0000000000457812: xor eax, eax; push rax; push r12; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045a37e: xor eax, eax; push rax; push r12; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x00000000004078f0: xor eax, eax; ret; 
0x000000000042879e: xor eax, eax; sub eax, ecx; ret; 
0x000000000044e508: xor eax, eax; syscall; 
0x000000000042e1f0: xor eax, eax; vzeroupper; ret; 
0x000000000042440b: xor ebp, 0x8948ffff; add eax, 0xa636a; ret; 
0x000000000049bee0: xor ebx, ebx; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000478ed3: xor ecx, dword ptr [rbx + 0x53e4e15]; add bh, dh; ret 0; 
0x0000000000426f33: xor ecx, dword ptr [rbx + 0xa5dee15]; add bh, dh; ret 0; 
0x000000000042643a: xor ecx, dword ptr [rbx + 0xa68e715]; add bh, dh; ret 0; 
0x0000000000490b19: xor ecx, dword ptr [rdi - 0x117fffe]; and esi, edi; jmp qword ptr [rsi + 0x66]; 
0x0000000000413d35: xor ecx, ecx; jmp rax; 
0x000000000041f852: xor ecx, ecx; movsxd rdx, edx; call 0x1f780; or dword ptr [rbx], 8; pop rbx; ret; 
0x0000000000406be1: xor ecx, ecx; pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x000000000045357e: xor ecx, ecx; xor edx, edx; movzx eax, al; add eax, 1; push rax; call rbx; 
0x000000000049ca84: xor edi, ebx; jmp qword ptr [rsi + 0xf]; 
0x00000000004025f0: xor edi, edi; mov eax, edx; syscall; 
0x000000000044f236: xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000044f070: xor edi, edi; syscall; 
0x000000000048df37: xor edi, esi; dec dword ptr [rax - 0x77]; ret 0x894c; 
0x0000000000408304: xor edx, dword ptr [0x30]; call rdx; 
0x00000000004883d6: xor edx, edx; add rdi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000478d93: xor edx, edx; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000044c216: xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000046c1bb: xor edx, edx; div r8d; add r9d, eax; mov eax, r9d; ret; 
0x00000000004439c4: xor edx, edx; lea rax, qword ptr [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004439e4: xor edx, edx; lea rax, qword ptr [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000443a22: xor edx, edx; lea rax, qword ptr [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044388a: xor edx, edx; lea rax, qword ptr [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000470c7e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f2: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec5e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f816: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f751: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5b4: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4e5: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x000000000045473e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x000000000045462a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x000000000045450a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d352: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e12: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x000000000042414a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424112: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c3a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c02: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac2: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x000000000042361e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c6e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424306: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d6a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf4: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab2: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x000000000042058e: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f044: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041eb44: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7e0: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e496: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3d0: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d130: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cddc: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x0000000000417882: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e1: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084aa: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x000000000040846f: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040838b: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065cf: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404ddc: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df3: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dca: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403c9f: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040120b: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x000000000040137a: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470de8: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004242db: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004246ea: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249dc: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000000042575f: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000004218a0: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fbb: xor edx, edx; mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000041f8f7: xor edx, edx; mov edx, 2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000044f067: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000041ddcb: xor edx, edx; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000407a44: xor edx, edx; mov rsi, r9; mov edi, 2; mov eax, 0xe; syscall; 
0x0000000000453580: xor edx, edx; movzx eax, al; add eax, 1; push rax; call rbx; 
0x0000000000474472: xor edx, edx; movzx eax, byte ptr [rdi + rax]; lea rdi, qword ptr [rip + 0x53961]; mov rax, qword ptr [rdi + rax*8]; jmp rax; 
0x000000000041dda6: xor edx, edx; pop rbx; jmp rax; 
0x000000000044c9dd: xor edx, edx; push 1; lea r9, qword ptr [rsp + 0x20]; call rbx; 
0x000000000047405c: xor esi, esi; jmp rax; 
0x0000000000450e7c: xor esi, esi; lea rdi, qword ptr [rip + 0x514eb]; mov eax, 0x15; syscall; 
0x000000000041c172: xor esi, esi; mov ecx, 3; mov edx, 1; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x000000000040266f: xor esi, esi; mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x00000000004176d9: xor esi, esi; mov rdi, rbp; call qword ptr [rbx + 0x10]; 
0x000000000041c171: xor esi, r14d; mov ecx, 3; mov edx, 1; mov rdi, rbx; call qword ptr [rbp + 0x48]; 
0x0000000000490d51: xor esp, esp; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000045cc23: xor esp, esp; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000478ea5: xor esp, esp; pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000403064: xor esp, esp; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000423341: xor qword ptr [rax], r9; add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000478d92: xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000004883d5: xor r10d, r10d; add rdi, 0x1c; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470c7d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c29a]; syscall; 
0x00000000004709f1: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5c522]; syscall; 
0x000000000046ec5d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x5e2ae]; syscall; 
0x000000000045f815: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d6f2]; syscall; 
0x000000000045f750: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d7b7]; syscall; 
0x000000000045f5b3: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6d954]; syscall; 
0x000000000045f4e4: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x6da23]; syscall; 
0x000000000045473d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7915a]; syscall; 
0x0000000000454629: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7926e]; syscall; 
0x0000000000454509: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x7938e]; syscall; 
0x000000000044d351: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0x80546]; syscall; 
0x0000000000425e11: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa4976]; syscall; 
0x0000000000424149: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa663e]; syscall; 
0x0000000000424111: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6676]; syscall; 
0x0000000000423c39: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b4e]; syscall; 
0x0000000000423c01: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6b86]; syscall; 
0x0000000000423ac1: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa6cc6]; syscall; 
0x000000000042361d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa716a]; syscall; 
0x0000000000424c6d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa802a]; syscall; 
0x0000000000424305: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xa8982]; syscall; 
0x0000000000420d69: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf2e]; syscall; 
0x0000000000420cf3: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xabf94]; syscall; 
0x0000000000420ab1: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac1e6]; syscall; 
0x000000000042058d: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xac70a]; syscall; 
0x000000000041f043: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xadbd4]; syscall; 
0x000000000041eb43: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae0d4]; syscall; 
0x000000000041e7df: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae438]; syscall; 
0x000000000041e495: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xae782]; syscall; 
0x000000000041d3cf: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xaf848]; syscall; 
0x000000000041d12f: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafae8]; syscall; 
0x000000000041cddb: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xafe3c]; syscall; 
0x0000000000417881: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xb6016]; syscall; 
0x00000000004086e0: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc5057]; syscall; 
0x00000000004084a9: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc528e]; syscall; 
0x000000000040846e: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc52c9]; syscall; 
0x000000000040838a: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc53ad]; syscall; 
0x00000000004065ce: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc61d1]; syscall; 
0x0000000000404ddb: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc798c]; syscall; 
0x0000000000403df2: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88cd]; syscall; 
0x0000000000403dc9: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc88f6]; syscall; 
0x0000000000403c9e: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xc8a21]; syscall; 
0x000000000040120a: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; lea rdi, qword ptr [rip + 0xcb5ad]; syscall; 
0x0000000000401379: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000000470de7: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004242da: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000004246e9: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000004249db: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000000042575e: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x000000000042189f: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000000424fba: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000041f8f6: xor r10d, r10d; mov edx, 2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000000490d50: xor r12d, r12d; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000045cc22: xor r12d, r12d; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000478ea4: xor r12d, r12d; pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000403063: xor r12d, r12d; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000453512: xor r8d, r8d; call rbx; 
0x0000000000422cff: xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000004085f8: xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000004085ed: xor r8d, r8d; mov rax, r8; ret; 
0x000000000044d67f: xor r8d, r8d; mov rcx, qword ptr [rsp + 0x20]; mov rdi, rbp; mov rsi, qword ptr [rsp + 0x18]; call rbx; 
0x000000000044cc16: xor r8d, r8d; mov rdi, r12; lea r9, qword ptr [rsp + 0x30]; call rbx; 
0x000000000044d4fd: xor r8d, r8d; mov rsi, qword ptr [rsp + 0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000000424850: xor r8d, r8d; pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x0000000000424560: xor r8d, r8d; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000457811: xor r8d, r8d; push rax; push r12; mov rsi, qword ptr [rsp + 0x50]; mov rdi, qword ptr [rsp + 0x48]; call rbx; 
0x000000000045a37d: xor r8d, r8d; push rax; push r12; mov rsi, qword ptr [rsp + 0x58]; mov rdi, qword ptr [rsp + 0x50]; call rbx; 
0x0000000000406be0: xor r9d, r9d; pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x0000000000408321: xor rax, qword ptr [0x30]; call rax; 
0x0000000000408320: xor rax, qword ptr fs:[0x30]; call rax; 
0x0000000000443dd9: xor rax, rax; ret; 
0x0000000000408303: xor rdx, qword ptr [0x30]; call rdx; 
0x0000000000408302: xor rdx, qword ptr fs:[0x30]; call rdx; 

13494 gadgets found
